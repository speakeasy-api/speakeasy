openapi: "3.0.0"
info:
    title: "Marketing"
    description: "The documentation for the StackOne Unified API - MARKETING"
    contact: {}
    version: "1.0.0"
servers:
    - url: "https://api.stackone.com"
paths:
    "/connect_sessions":
        post:
            tags:
                - "Connect Sessions"
            summary: "Create Connect Session"
            operationId: "stackone_create_connect_session"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/ConnectSessionCreate"}
                required: true
            responses:
                "201":
                    description: "The details of the connect session created with token."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ConnectSessionToken"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "create_connect_session"
    "/connect_sessions/authenticate":
        post:
            tags:
                - "Connect Sessions"
            summary: "Authenticate Connect Session"
            operationId: "stackone_authenticate_connect_session"
            requestBody:
                description: "The parameters to authenticate"
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/ConnectSessionAuthenticate"}
                required: true
            responses:
                "201":
                    description: "The details of the authenticated connect session."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ConnectSession"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "authenticate_connect_session"
    "/accounts":
        get:
            tags:
                - "Accounts"
            summary: "List Accounts"
            operationId: "stackone_list_linked_accounts"
            parameters:
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  schema:
                    type: "number"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "number"
                    default: 25
                    nullable: true
                - name: "provider"
                  in: "query"
                  description: "The provider of the results to fetch"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "origin_owner_id"
                  in: "query"
                  description: "The origin owner identifier of the results to fetch"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "providers"
                  in: "query"
                  description: "The providers list of the results to fetch"
                  required: false
                  schema:
                    type: "array"
                    items:
                        type: "string"
                - name: "account_ids"
                  in: "query"
                  description: "The providers list of the results to fetch"
                  required: false
                  schema:
                    type: "array"
                    items:
                        type: "string"
            responses:
                "200":
                    description: "The list of accounts was retrieved."
                    content:
                        "application/json":
                            schema:
                                type: "array"
                                items: {"$ref": "#/components/schemas/LinkedAccount"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "list_linked_accounts"
    "/accounts/{id}":
        get:
            tags:
                - "Accounts"
            summary: "Get Account"
            operationId: "stackone_get_account"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "expand_info"
                  in: "query"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The account with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/LinkedAccount"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "get_account"
        delete:
            tags:
                - "Accounts"
            summary: "Delete Account"
            operationId: "stackone_delete_account"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The account with the given identifier was deleted."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/LinkedAccount"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "404":
                    description: "The account with the given identifier does not exist"
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "delete_account"
        patch:
            tags:
                - "Accounts"
            summary: "Update Account"
            operationId: "stackone_update_account"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/PatchAccountDto"}
                required: true
            responses:
                "200":
                    description: "The account with the given identifier was updated."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/LinkedAccount"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "update_account"
    "/accounts/{id}/meta":
        get:
            tags:
                - "Accounts"
            summary: "Get meta information of the account"
            operationId: "stackone_get_account_meta_info"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The meta information of the account was retrieved"
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/LinkedAccountMeta"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "404":
                    description: "The account with the given identifier does not exist"
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "get_account_meta_info"
    "/connectors/meta":
        get:
            tags:
                - "Connectors"
            summary: "List Connectors Meta Information for all providers"
            operationId: "stackone_list_connectors_meta"
            parameters:
                - name: "include"
                  in: "query"
                  description: "The comma separated list of data that will be included in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "field_path,unmapped_fields,resources,inactive"
            responses:
                "200":
                    description: "The list of connectors meta information was retrieved."
                    content:
                        "application/json":
                            schema:
                                type: "array"
                                items: {"$ref": "#/components/schemas/ConnectorsMeta"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "list_connectors_meta"
    "/connectors/meta/{provider}":
        get:
            tags:
                - "Connectors"
            summary: "Get Connector Meta information for the given provider key"
            operationId: "stackone_get_connector_meta"
            parameters:
                - name: "provider"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of data that will be included in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "field_path,unmapped_fields,resources,inactive"
            responses:
                "200":
                    description: "The connector meta information was retrieved"
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ConnectorsMeta"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "404":
                    description: "No connector with the given provider key exist"
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "get_connector_meta"
    "/unified/proxy":
        post:
            tags:
                - "Proxy"
            summary: "Proxy Request"
            operationId: "stackone_proxy_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                description: "The request body"
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/ProxyRequestBody"}
                required: true
            responses:
                "200":
                    description: "The proxy request was successful."
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-name-override: "proxy_request"
    /unified/hris/companies:
        get:
            tags:
                - "Companies"
            summary: "List Companies"
            operationId: "hris_list_companies"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,full_name,display_name,created_at,updated_at"
            responses:
                "200":
                    description: "The list of Companies was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CompaniesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_companies"
    /unified/hris/companies/{id}:
        get:
            tags:
                - "Companies"
            summary: "Get Company"
            operationId: "hris_get_company"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,full_name,display_name,created_at,updated_at"
            responses:
                "200":
                    description: "The Company with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CompanyResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_company"
    /unified/hris/employees:
        get:
            tags:
                - "Employees"
            summary: "List Employees"
            operationId: "hris_list_employees"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_title,job_description,department,cost_centers,benefits,manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,preferred_language,citizenships,home_location,work_location,employments,custom_fields,documents,created_at,updated_at"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "company,employments,work_location,home_location,custom_fields"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "avatar_url,avatar,custom_fields,job_description,benefits"
            responses:
                "200":
                    description: "The list of employees was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/EmployeesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-usage-example: {"title": "List Employees", "position": 1}
            x-speakeasy-pagination: {"type": "cursor", "inputs": [{"name": "next", "in": "parameters", "type": "cursor"}], "outputs": {"nextCursor": "$.next"}}
            x-speakeasy-name-override: "list_employees"
        post:
            tags:
                - "Employees"
            summary: "Creates an employee"
            operationId: "hris_create_employee"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateEmployeeRequestDto"}
                required: true
            responses:
                "201":
                    description: "The employee was created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateEmployeeResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_employee"
    /unified/hris/employees/{id}:
        get:
            tags:
                - "Employees"
            summary: "Get Employee"
            operationId: "hris_get_employee"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_title,job_description,department,cost_centers,benefits,manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,preferred_language,citizenships,home_location,work_location,employments,custom_fields,documents,created_at,updated_at"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "company,employments,work_location,home_location,custom_fields"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "avatar_url,avatar,custom_fields,job_description,benefits"
            responses:
                "200":
                    description: "The employee with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/EmployeeResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employee"
        patch:
            tags:
                - "Employees"
            summary: "Updates an employee"
            operationId: "hris_update_employee"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateEmployeeRequestDto"}
                required: true
            responses:
                "200":
                    description: "Record updated successfully"
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateEmployeeResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "update_employee"
    /unified/hris/employees/{id}/time_off:
        get:
            tags:
                - "Employees"
            summary: "List Employee Time Off Requests"
            operationId: "hris_list_employee_time_off_requests"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,approver_id,status,type,start_date,end_date,created_at,updated_at"
            responses:
                "200":
                    description: "The time off requests related to the employee with the given identifier were retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TimeOffPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_employee_time_off_requests"
        post:
            tags:
                - "Employees"
            summary: "Create Employee Time Off Request"
            operationId: "hris_create_employee_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateTimeOffRequestDto"}
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTimeOffResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_employee_time_off_request"
    /unified/hris/employees/{id}/time_off/{subResourceId}:
        get:
            tags:
                - "Employees"
            summary: "Get Employees Time Off Request"
            operationId: "hris_get_employees_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,approver_id,status,type,start_date,end_date,created_at,updated_at"
            responses:
                "200":
                    description: "The time off request related to the employee with the given identifiers was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TimeOffResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employees_time_off_request"
    /unified/hris/employees/{id}/documents/upload:
        post:
            tags:
                - "Employees"
            summary: "Upload Employee Document"
            operationId: "hris_upload_employee_document"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/UnifiedUploadRequestDto"}
                required: true
            responses:
                "200":
                    description: "The document related to the employee with the given identifier was uploaded."
                    content:
                        "application/json":
                            schema:
                                type: "string"
                                format: "binary"
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "upload_employee_document"
    /unified/hris/employees/{id}/documents/{subResourceId}/download:
        get:
            tags:
                - "Employees"
            summary: "Download Employee Document"
            operationId: "hris_download_employee_document"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "format"
                  in: "query"
                  description: "The format to download the file in"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "base64"
            responses:
                "200":
                    description: "The document related to the employee with the given identifiers was retrieved."
                    content:
                        "application/octet-stream":
                            schema:
                                type: "string"
                                format: "binary"
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "download_employee_document"
    /unified/hris/employees/{id}/documents:
        get:
            tags:
                - "Employees"
            summary: "List Employee Documents"
            operationId: "hris_list_employee_documents"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,path,type,contents,created_at,updated_at"
            responses:
                "200":
                    description: "The documents related to the employee with the given identifier were retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/DocumentsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_employee_documents"
        post:
            tags:
                - "Employees"
            summary: "Create Employee Document"
            operationId: "hris_create_employee_document"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateDocumentRequestDto"}
                required: true
            responses:
                "201":
                    description: "The document was created."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateDocumentResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_employee_document"
    /unified/hris/employees/{id}/documents/{subResourceId}:
        get:
            tags:
                - "Employees"
            summary: "Get Employee Document"
            operationId: "hris_get_employee_document"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,path,type,contents,created_at,updated_at"
            responses:
                "200":
                    description: "The document related to the employee with the given identifiers was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/DocumentResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employee_document"
    /unified/hris/employees/{id}/work_eligibility:
        get:
            tags:
                - "Employees"
            summary: "List Employee Work Eligibility"
            operationId: "hris_list_employee_work_eligibility"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,type,sub_type,document,valid_from,valid_to,issued_by,number"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The work eligibility of the employee with the given identifier were retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/WorkEligibilityPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_employee_work_eligibility"
        post:
            tags:
                - "Employees"
            summary: "Create Employee Work Eligibility Request"
            operationId: "hris_create_employee_work_eligibility_request"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateWorkEligibilityRequestDto"}
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateWorkEligibilityResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_employee_work_eligibility_request"
    /unified/hris/employees/{id}/work_eligibility/{subResourceId}:
        get:
            tags:
                - "Employees"
            summary: "Get Employees Work Eligibility"
            operationId: "hris_get_employees_work_eligibility"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,type,sub_type,document,valid_from,valid_to,issued_by,number"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "The work eligibility of the employee with the given identifiers was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/WorkEligibilityResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employees_work_eligibility"
        patch:
            tags:
                - "Employees"
            summary: "Update Employee Work Eligibility Request"
            operationId: "hris_update_employee_work_eligibility_request"
            parameters:
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateWorkEligibilityRequestDto"}
                required: true
            responses:
                "200": {}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "update_employee_work_eligibility_request"
    /unified/hris/employments:
        get:
            tags:
                - "Employments"
            summary: "List Employments"
            operationId: "hris_list_employments"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,employment_type,employment_contract_type,created_at,updated_at"
            responses:
                "200":
                    description: "The list of Employments was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/EmploymentsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_employments"
    /unified/hris/employments/{id}:
        get:
            tags:
                - "Employments"
            summary: "Get Employment"
            operationId: "hris_get_employment"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,employment_type,employment_contract_type,created_at,updated_at"
            responses:
                "200":
                    description: "The Employment with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/EmploymentResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_employment"
    /unified/hris/locations:
        get:
            tags:
                - "Locations"
            summary: "List locations"
            operationId: "hris_list_locations"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
            responses:
                "200":
                    description: "The list of Locations was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/HRISLocationsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_locations"
    /unified/hris/locations/{id}:
        get:
            tags:
                - "Locations"
            summary: "Get Location"
            operationId: "hris_get_location"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
            responses:
                "200":
                    description: "The Location with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/HRISLocationResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_location"
    /unified/hris/time_off:
        get:
            tags:
                - "Time Off"
            summary: "List time off requests"
            operationId: "hris_list_time_off_requests"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,approver_id,status,type,start_date,end_date,created_at,updated_at"
            responses:
                "200":
                    description: "The list of time off requests was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TimeOffPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_time_off_requests"
        post:
            tags:
                - "Time Off"
            summary: "Creates a time off request"
            operationId: "hris_create_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateTimeOffRequestDto"}
                required: true
            responses:
                "201":
                    description: "The time off request was created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTimeOffResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "create_time_off_request"
    /unified/hris/time_off/{id}:
        get:
            tags:
                - "Time Off"
            summary: "Get time off request"
            operationId: "hris_get_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,employee_id,approver_id,status,type,start_date,end_date,created_at,updated_at"
            responses:
                "200":
                    description: "The time off request with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TimeOffResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_time_off_request"
        patch:
            tags:
                - "Time Off"
            summary: "Update time off request"
            operationId: "hris_update_time_off_request"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/HrisCreateTimeOffRequestDto"}
                required: true
            responses:
                "200":
                    description: "Record updated successfully"
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTimeOffResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "update_time_off_request"
    /unified/hris/benefits:
        get:
            tags:
                - "Benefits"
            summary: "List benefits"
            operationId: "hris_list_benefits"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,benefit_type,provider,description,created_at,updated_at"
            responses:
                "200":
                    description: "The list of Benefits was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/HRISBenefitsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "list_benefits"
    /unified/hris/benefits/{id}:
        get:
            tags:
                - "Benefits"
            summary: "Get Benefit"
            operationId: "hris_get_benefit"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,benefit_type,provider,description,created_at,updated_at"
            responses:
                "200":
                    description: "The Benefit with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/HRISBenefitResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "hris"
            x-speakeasy-name-override: "get_benefit"
    /unified/ats/applications:
        get:
            tags:
                - "Applications"
            summary: "List Applications"
            operationId: "ats_list_applications"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,candidate_id,job_id,interview_stage,interview_stage_id,rejected_reason,rejected_reason_id,rejected_reason_ids,rejected_reasons,rejected_at,location_id,location_ids,status,application_status,questionnaires,attachments,result_links,created_at,updated_at,documents,candidate"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "documents"
            responses:
                "200":
                    description: "The list of applications was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ApplicationsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_applications"
        post:
            tags:
                - "Applications"
            summary: "Create Application"
            operationId: "ats_create_application"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/AtsCreateApplicationRequestDto"}
                required: true
            responses:
                "201":
                    description: "The application was created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "create_application"
    /unified/ats/applications/{id}:
        get:
            tags:
                - "Applications"
            summary: "Get Application"
            operationId: "ats_get_application"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,candidate_id,job_id,interview_stage,interview_stage_id,rejected_reason,rejected_reason_id,rejected_reason_ids,rejected_reasons,rejected_at,location_id,location_ids,status,application_status,questionnaires,attachments,result_links,created_at,updated_at,documents,candidate"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "documents"
            responses:
                "200":
                    description: "The application with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ApplicationResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_application"
        patch:
            tags:
                - "Applications"
            summary: "Update an Application"
            operationId: "ats_update_application"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/AtsUpdateApplicationRequestDto"}
                required: true
            responses:
                "200":
                    description: "Record updated successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/UpdateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "update_application"
    /unified/ats/applications/{id}/offers:
        get:
            tags:
                - "Applications"
            summary: "List Application Offers"
            operationId: "ats_list_applications_offers"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
            responses:
                "200":
                    description: "The offers related to the application with the given identifier were retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/OffersPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_applications_offers"
    /unified/ats/applications/{id}/offers/{subResourceId}:
        get:
            tags:
                - "Applications"
            summary: "Get Application Offer"
            operationId: "ats_get_application_offer"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
            responses:
                "200":
                    description: "The offer related to the application with the given identifiers was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/OffersResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_application_offer"
    /unified/ats/applications/{id}/scorecards:
        get:
            tags:
                - "Applications"
            summary: "List Application Scorecards"
            operationId: "ats_list_application_scorecards"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,sections,label,candidate_id,application_id,interview_id,author_id,overall_recommendation,created_at,updated_at"
            responses:
                "200":
                    description: "The scorecards related to the application with the given identifier were retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ScorecardsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_application_scorecards"
    /unified/ats/applications/{id}/scorecards/{subResourceId}:
        get:
            tags:
                - "Applications"
            summary: "Get Application Scorecard"
            operationId: "ats_get_application_scorecard"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,sections,label,candidate_id,application_id,interview_id,author_id,overall_recommendation,created_at,updated_at"
            responses:
                "200":
                    description: "The scorecard related to the application with the given identifiers was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/OffersResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_application_scorecard"
    /unified/ats/applications/{id}/documents/{subResourceId}/download:
        get:
            tags:
                - "Applications"
            summary: "Download Application Document"
            operationId: "ats_download_application_document"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "format"
                  in: "query"
                  description: "The format to download the file in"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "base64"
            responses:
                "200":
                    description: "The document related to the application with the given identifiers was retrieved."
                    content:
                        "application/octet-stream":
                            schema:
                                type: "string"
                                format: "binary"
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "download_application_document"
    /unified/ats/applications/{id}/documents:
        get:
            tags:
                - "Applications"
            summary: "List Application Documents"
            operationId: "ats_list_application_documents"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,path,type,contents,created_at,updated_at"
            responses:
                "200":
                    description: "The documents related to the application with the given identifier were retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/DocumentsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_application_documents"
    /unified/ats/applications/{id}/documents/{subResourceId}:
        get:
            tags:
                - "Applications"
            summary: "Get Application Document"
            operationId: "ats_get_application_document"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,path,type,contents,created_at,updated_at"
            responses:
                "200":
                    description: "The document related to the application with the given identifiers was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/DocumentResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_application_document"
    /unified/ats/candidates:
        get:
            tags:
                - "Candidates"
            summary: "List Candidates"
            operationId: "ats_list_candidates"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,title,application_ids,hired_at,created_at,updated_at"
            responses:
                "200":
                    description: "The list of candidates was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CandidatesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_candidates"
        post:
            tags:
                - "Candidates"
            summary: "Create Candidate (early access)"
            operationId: "ats_create_candidate"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/AtsCreateCandidateRequestDto"}
                required: true
            responses:
                "200":
                    description: "The candidate was successfully created."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CandidateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "create_candidate"
    /unified/ats/candidates/{id}:
        get:
            tags:
                - "Candidates"
            summary: "Get Candidate"
            operationId: "ats_get_candidate"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,title,application_ids,hired_at,created_at,updated_at"
            responses:
                "200":
                    description: "The candidate with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CandidateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_candidate"
        patch:
            tags:
                - "Candidates"
            summary: "Update Candidate (early access)"
            operationId: "ats_update_candidate"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/AtsUpdateCandidatesRequestDto"}
                required: true
            responses:
                "200":
                    description: "The candidate was successfully updated."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CandidateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "update_candidate"
    /unified/ats/candidates/{id}/notes:
        get:
            tags:
                - "Candidates"
            summary: "List Candidate Notes"
            operationId: "ats_list_candidate_notes"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,content,author_id,visibility,created_at,updated_at,deleted_at"
            responses:
                "200":
                    description: "The notes related to the candidate with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/NotesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_candidate_notes"
        post:
            tags:
                - "Candidates"
            summary: "Create Candidate Note"
            operationId: "ats_create_candidate_note"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/AtsCreateNotesRequestDto"}
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateCandidateNoteResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "create_candidate_note"
    /unified/ats/candidates/{id}/notes/{subResourceId}:
        get:
            tags:
                - "Candidates"
            summary: "Get Candidate Note"
            operationId: "ats_get_candidate_note"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "subResourceId"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,content,author_id,visibility,created_at,updated_at,deleted_at"
            responses:
                "200":
                    description: "The note with the given identifier related to the candidate with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/NoteResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_candidate_note"
    /unified/ats/departments:
        get:
            tags:
                - "Departments"
            summary: "List Departments"
            operationId: "ats_list_departments"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name"
            responses:
                "200":
                    description: "The list of departments was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/DepartmentsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_departments"
    /unified/ats/departments/{id}:
        get:
            tags:
                - "Departments"
            summary: "Get Department"
            operationId: "ats_get_department"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name"
            responses:
                "200":
                    description: "The department with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/DepartmentResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_department"
    /unified/ats/interview_stages:
        get:
            tags:
                - "Interview Stages"
            summary: "List Interview Stages"
            operationId: "ats_list_interview_stages"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,order,created_at,updated_at"
            responses:
                "200":
                    description: "The list of interview-stages was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/InterviewStagesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_interview_stages"
    /unified/ats/interview_stages/{id}:
        get:
            tags:
                - "Interview Stages"
            summary: "Get Interview Stage"
            operationId: "ats_get_interview_stage"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,order,created_at,updated_at"
            responses:
                "200":
                    description: "The interview-stage with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/InterviewStageResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_interview_stage"
    /unified/ats/interviews:
        get:
            tags:
                - "Interviews"
            summary: "List Interviews"
            operationId: "ats_list_interviews"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,application_id,interview_stage_id,interview_stage,status,interview_status,interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
            responses:
                "200":
                    description: "The list of interviews was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/InterviewsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_interviews"
    /unified/ats/interviews/{id}:
        get:
            tags:
                - "Interviews"
            summary: "Get Interview"
            operationId: "ats_get_interview"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,application_id,interview_stage_id,interview_stage,status,interview_status,interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
            responses:
                "200":
                    description: "The interview with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/InterviewsResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_interview"
    /unified/ats/jobs:
        get:
            tags:
                - "Jobs"
            summary: "List Jobs"
            operationId: "ats_list_jobs"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,code,title,status,job_status,department_ids,location_ids,hiring_team,interview_stages,confidential,created_at,updated_at"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "job_postings,interview_stages"
            responses:
                "200":
                    description: "The list of jobs was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/JobsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_jobs"
    /unified/ats/jobs/{id}:
        get:
            tags:
                - "Jobs"
            summary: "Get Job"
            operationId: "ats_get_job"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,code,title,status,job_status,department_ids,location_ids,hiring_team,interview_stages,confidential,created_at,updated_at"
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "job_postings,interview_stages"
            responses:
                "200":
                    description: "The job with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/JobResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_job"
    /unified/ats/locations:
        get:
            tags:
                - "Locations"
            summary: "List locations"
            operationId: "ats_list_locations"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name"
            responses:
                "200":
                    description: "The list of locations was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ATSLocationsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_locations"
    /unified/ats/locations/{id}:
        get:
            tags:
                - "Locations"
            summary: "Get Location"
            operationId: "ats_get_location"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name"
            responses:
                "200":
                    description: "The location with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ATSLocationResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_location"
    /unified/ats/rejected_reasons:
        get:
            tags:
                - "Rejected Reasons"
            summary: "List Rejected Reasons"
            operationId: "ats_list_rejected_reasons"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,label,type,rejected_reason_type"
            responses:
                "200":
                    description: "The list of rejected reasons was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/RejectedReasonsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_rejected_reasons"
    /unified/ats/rejected_reasons/{id}:
        get:
            tags:
                - "Rejected Reasons"
            summary: "Get Rejected Reason"
            operationId: "ats_get_rejected_reason"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,label,type,rejected_reason_type"
            responses:
                "200":
                    description: "The rejected reason with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/RejectedReasonResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_rejected_reason"
    /unified/ats/users:
        get:
            tags:
                - "Users"
            summary: "List Users"
            operationId: "ats_list_users"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,name,email"
            responses:
                "200":
                    description: "The list of users was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/UsersPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_users"
    /unified/ats/users/{id}:
        get:
            tags:
                - "Users"
            summary: "Get User"
            operationId: "ats_get_user"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,name,email"
            responses:
                "200":
                    description: "The user with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/UserResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_user"
    /unified/ats/job_postings:
        get:
            tags:
                - "Job Postings"
            summary: "List Job Postings"
            operationId: "ats_list_job_postings"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,title,locations,internal,status,job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questionnaires,updated_at,created_at"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "questionnaires"
            responses:
                "200":
                    description: "The list of job postings was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/JobPostingsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_job_postings"
    /unified/ats/job_postings/{id}:
        get:
            tags:
                - "Job Postings"
            summary: "Get Job Posting"
            operationId: "ats_get_job_posting"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,title,locations,internal,status,job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questionnaires,updated_at,created_at"
                - name: "include"
                  in: "query"
                  description: "The comma separated list of fields that will be included in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "questionnaires"
            responses:
                "200":
                    description: "The job with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/JobPostingResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_job_posting"
    /unified/ats/offers:
        get:
            tags:
                - "Offers"
            summary: "List Offers"
            operationId: "ats_list_offers"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "sync_token"
                  in: "query"
                  description: "The sync token to select the only updated results"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
            responses:
                "200":
                    description: "The list of offers was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/OffersPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "list_offers"
        post:
            tags:
                - "Offers"
            summary: "Creates an offer"
            operationId: "ats_create_offer"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/AtsCreateOfferRequestDto"}
                required: true
            responses:
                "200":
                    description: "The offer was created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateOfferResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "create_offer"
    /unified/ats/offers/{id}:
        get:
            tags:
                - "Offers"
            summary: "Get Offer"
            operationId: "ats_get_offer"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
            responses:
                "200":
                    description: "The offer with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/OffersResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "ats"
            x-speakeasy-name-override: "get_offer"
    /unified/crm/contacts:
        get:
            tags:
                - "Contacts"
            summary: "List Contacts"
            operationId: "crm_list_contacts"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,account_ids,created_at,updated_at"
            responses:
                "200":
                    description: "The list of contacts was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ContactsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "list_contacts"
        post:
            tags:
                - "Contacts"
            summary: "Creates a new Contact"
            operationId: "crm_create_contact"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/CrmCreateContactRequestDto"}
                required: true
            responses:
                "200":
                    description: "The contact was successfully created."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ContactResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "create_contact"
    /unified/crm/contacts/{id}:
        get:
            tags:
                - "Contacts"
            summary: "Get Contact"
            operationId: "crm_get_contact"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,account_ids,created_at,updated_at"
            responses:
                "200":
                    description: "The contact with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ContactResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "get_contact"
        patch:
            tags:
                - "Contacts"
            summary: "Update Contact (early access)"
            operationId: "crm_update_contact"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/CrmCreateContactRequestDto"}
                required: true
            responses:
                "200":
                    description: "The contact was successfully updated."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ContactResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "update_contact"
    /unified/crm/accounts:
        get:
            tags:
                - "Accounts"
            summary: "List Accounts"
            operationId: "crm_list_accounts"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,owner_id,name,description,industries,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
            responses:
                "200":
                    description: "The list of accounts was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/AccountsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "list_accounts"
    /unified/crm/accounts/{id}:
        get:
            tags:
                - "Accounts"
            summary: "Get Account"
            operationId: "crm_get_account"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,owner_id,name,description,industries,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
            responses:
                "200":
                    description: "The account with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/AccountResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "get_account"
    /unified/crm/lists:
        get:
            tags:
                - "Lists"
            summary: "Get all Lists"
            operationId: "crm_list_lists"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,created_at,updated_at,items,type"
            responses:
                "200":
                    description: "The collection of lists was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ListsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "list_lists"
    /unified/crm/lists/{id}:
        get:
            tags:
                - "Lists"
            summary: "Get List"
            operationId: "crm_get_list"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,created_at,updated_at,items,type"
            responses:
                "200":
                    description: "The list with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/ListResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "crm"
            x-speakeasy-name-override: "get_list"
    /unified/iam/users:
        get:
            tags:
                - "Users"
            summary: "List Users"
            operationId: "iam_list_users"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,name,primary_email_address,username,roles,groups,status,avatar,is_bot_user,last_active_at,last_login_at,created_at,updated_at,multi_factor_enabled"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "roles,groups"
            responses:
                "200":
                    description: "The list of users was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamUsersPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "list_users"
    /unified/iam/users/{id}:
        get:
            tags:
                - "Users"
            summary: "Get User"
            operationId: "iam_get_user"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,first_name,last_name,name,primary_email_address,username,roles,groups,status,avatar,is_bot_user,last_active_at,last_login_at,created_at,updated_at,multi_factor_enabled"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "roles,groups"
            responses:
                "200":
                    description: "The user with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamUserResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "get_user"
    /unified/iam/roles:
        get:
            tags:
                - "Roles"
            summary: "List Roles"
            operationId: "iam_list_roles"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,type,policies,description,created_at,updated_at"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "policies"
            responses:
                "200":
                    description: "The list of roles was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamRolesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "list_roles"
    /unified/iam/roles/{id}:
        get:
            tags:
                - "Roles"
            summary: "Get Role"
            operationId: "iam_get_role"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,type,policies,description,created_at,updated_at"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "policies"
            responses:
                "200":
                    description: "The role with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamRoleResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "get_role"
    /unified/iam/groups:
        get:
            tags:
                - "Groups"
            summary: "List Groups"
            operationId: "iam_list_groups"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,parent_id,name,description,roles,type,created_at,updated_at"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "roles"
            responses:
                "200":
                    description: "The list of groups was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamGroupsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "list_groups"
    /unified/iam/groups/{id}:
        get:
            tags:
                - "Groups"
            summary: "Get Group"
            operationId: "iam_get_group"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,parent_id,name,description,roles,type,created_at,updated_at"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "roles"
            responses:
                "200":
                    description: "The group with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamGroupResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "get_group"
    /unified/iam/policies:
        get:
            tags:
                - "Policies"
            summary: "List Policies"
            operationId: "iam_list_policies"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,permissions,description,created_at,updated_at"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "permissions"
            responses:
                "200":
                    description: "The list of policies was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamPoliciesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "list_policies"
    /unified/iam/policies/{id}:
        get:
            tags:
                - "Policies"
            summary: "Get Policy"
            operationId: "iam_get_policy"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,permissions,description,created_at,updated_at"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
                - name: "expand"
                  in: "query"
                  description: "The comma separated list of fields that will be expanded in the response"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "permissions"
            responses:
                "200":
                    description: "The policy with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/IamPolicyResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "iam"
            x-speakeasy-name-override: "get_policy"
    /unified/marketing/templates/email:
        get:
            tags:
                - "Templates"
            summary: "List email templates"
            operationId: "marketing_list_email_templates"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The list of email templates was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TemplatesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_email_templates"
        post:
            tags:
                - "Templates"
            summary: "Create email template"
            operationId: "marketing_create_email_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/MarketingCreateEmailTemplateRequestDto"}
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "create_email_template"
    /unified/marketing/templates/email/{id}:
        get:
            tags:
                - "Templates"
            summary: "Get email template"
            operationId: "marketing_get_email_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The email template with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_email_template"
        patch:
            tags:
                - "Templates"
            summary: "Update email template"
            operationId: "marketing_update_email_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/MarketingCreateEmailTemplateRequestDto"}
                required: true
            responses:
                "200":
                    description: "Record updated successfully"
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "update_email_template"
    /unified/marketing/templates/omni_channel:
        get:
            tags:
                - "Templates"
            summary: "List omni-channel templates"
            operationId: "marketing_list_omni_channel_templates"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The list of omni-channel templates was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TemplatesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_omni_channel_templates"
        post:
            tags:
                - "Templates"
            summary: "Create omni-channel template"
            operationId: "marketing_create_omni_channel_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/MarketingCreateTemplateRequestDto"}
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "create_omni_channel_template"
    /unified/marketing/templates/omni_channel/{id}:
        get:
            tags:
                - "Templates"
            summary: "Get omni-channel template"
            operationId: "marketing_get_omni_channel_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The omni-channel template with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_omni_channel_template"
        patch:
            tags:
                - "Templates"
            summary: "Update omni-channel template"
            operationId: "marketing_update_omni_channel_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/MarketingCreateTemplateRequestDto"}
                required: true
            responses:
                "200":
                    description: "Record updated successfully"
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "update_omni_channel_template"
    /unified/marketing/templates/push:
        get:
            tags:
                - "Templates"
            summary: "List push templates"
            operationId: "marketing_list_push_templates"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The list of push templates was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TemplatesPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_push_templates"
        post:
            tags:
                - "Templates"
            summary: "Create push template"
            operationId: "marketing_create_push_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/MarketingCreatePushTemplateRequestDto"}
                required: true
            responses:
                "201":
                    description: "Record created successfully."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "create_push_template"
    /unified/marketing/templates/push/{id}:
        get:
            tags:
                - "Templates"
            summary: "Get push template"
            operationId: "marketing_get_push_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,messages,created_at,updated_at,tags"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The push template with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/TemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_push_template"
        patch:
            tags:
                - "Templates"
            summary: "Update push template"
            operationId: "marketing_update_push_template"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
            requestBody:
                content:
                    "application/json":
                        schema: {"$ref": "#/components/schemas/MarketingCreatePushTemplateRequestDto"}
                required: true
            responses:
                "200":
                    description: "Record updated successfully"
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CreateTemplateResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "update_push_template"
    /unified/marketing/campaigns:
        get:
            tags:
                - "Campaigns"
            summary: "List campaigns"
            operationId: "marketing_list_campaigns"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The list of campaigns was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CampaignsPaginated"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "list_campaigns"
    /unified/marketing/campaigns/{id}:
        get:
            tags:
                - "Campaigns"
            summary: "Get campaign"
            operationId: "marketing_get_campaign"
            parameters:
                - name: "x-account-id"
                  in: "header"
                  description: "The account identifier"
                  required: true
                  schema:
                    type: "string"
                - name: "id"
                  in: "path"
                  required: true
                  schema:
                    type: "string"
                - name: "page"
                  in: "query"
                  description: "The page number of the results to fetch"
                  required: false
                  deprecated: true
                  schema:
                    type: "string"
                    nullable: true
                - name: "page_size"
                  in: "query"
                  description: "The number of results per page"
                  required: false
                  schema:
                    type: "string"
                    default: "25"
                    nullable: true
                - name: "next"
                  in: "query"
                  description: "The unified cursor"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                - name: "raw"
                  in: "query"
                  description: "Indicates that the raw request result is returned"
                  required: false
                  schema:
                    type: "boolean"
                    default: false
                    nullable: true
                - name: "fields"
                  in: "query"
                  description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
                - name: "updated_after"
                  in: "query"
                  description: "Use a string with a date to only select results updated after that given date"
                  required: false
                  schema:
                    type: "string"
                    nullable: true
                  example: "2020-01-01T00:00:00.000Z"
                - name: "proxy"
                  in: "query"
                  description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                  required: false
                  schema:
                    type: "object"
                    additionalProperties: true
                    nullable: true
            responses:
                "200":
                    description: "The campaign with the given identifier was retrieved."
                    content:
                        "application/json":
                            schema: {"$ref": "#/components/schemas/CampaignResult"}
                "400":
                    description: "Invalid request."
                "403":
                    description: "Forbidden."
                "412":
                    description: "Precondition failed: linked account belongs to a disabled integration."
                "429":
                    description: "Too many requests."
                "500":
                    description: "Server error while executing the request."
                "501":
                    description: "This functionality is not implemented."
            security:
                - basic: []
            x-speakeasy-group: "marketing"
            x-speakeasy-name-override: "get_campaign"
components:
    schemas:
        "ConnectSessionCreate":
            type: "object"
            properties:
                "categories":
                    type: "array"
                    items:
                        type: "string"
                        enum:
                            - "ats"
                            - "hris"
                            - "hris-legacy"
                            - "crm"
                            - "iam"
                            - "marketing"
                            - "stackone"
                    description: "The categories of the provider to connect to"
                    nullable: true
                    example: ["ats", "hris", "hrisLegacy", "crm", "iam", "marketing", "stackOne"]
                "provider":
                    type: "string"
                    description: "The provider to connect to"
                    nullable: true
                "origin_owner_id":
                    type: "string"
                    description: "The origin owner identifier"
                "origin_owner_name":
                    type: "string"
                    description: "The origin owner name"
                "origin_username":
                    type: "string"
                    description: "The origin username"
                    nullable: true
                "account_id":
                    type: "string"
                    description: "The unique identifier for the account associated with this connect session. When this field is present, the hub will launch in edit mode using the retrieved token."
                    nullable: true
                "expires_in":
                    type: "number"
                    description: "How long the session should be valid for in seconds"
                    default: 1800
                    nullable: true
                "metadata":
                    type: "object"
                    description: "The metadata for the connection"
                    nullable: true
                "multiple":
                    type: "boolean"
                    description: "If set, this connect session will allow creation of multiple accounts with the same origin owner id and provider. Has no effect if account_id is set."
                    default: false
                    nullable: true
                "label":
                    type: "string"
                    description: "The label to be applied to the account associated with this connect session."
                    nullable: true
            required:
                - "origin_owner_id"
                - "origin_owner_name"
        "ConnectSessionToken":
            type: "object"
            properties:
                "id":
                    type: "number"
                "organization_id":
                    type: "number"
                "project_id":
                    type: "string"
                "categories":
                    type: "array"
                    items:
                        type: "string"
                        enum:
                            - "ats"
                            - "hris"
                            - "hris-legacy"
                            - "crm"
                            - "iam"
                            - "marketing"
                            - "stackone"
                    nullable: true
                    example: ["ats", "hris", "hrisLegacy", "crm", "iam", "marketing", "stackOne"]
                "provider":
                    type: "string"
                    nullable: true
                "origin_owner_id":
                    type: "string"
                "origin_owner_name":
                    type: "string"
                "origin_username":
                    type: "string"
                    nullable: true
                "account_id":
                    type: "string"
                    nullable: true
                "label":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                "token":
                    type: "string"
            required:
                - "id"
                - "organization_id"
                - "project_id"
                - "origin_owner_id"
                - "origin_owner_name"
                - "created_at"
                - "token"
        "ConnectSessionAuthenticate":
            type: "object"
            properties:
                "token":
                    type: "string"
                    description: "The token to authenticate with"
            required:
                - "token"
        "ConnectSession":
            type: "object"
            properties:
                "id":
                    type: "number"
                "organization_id":
                    type: "number"
                "project_id":
                    type: "string"
                "categories":
                    type: "array"
                    items:
                        type: "string"
                        enum:
                            - "ats"
                            - "hris"
                            - "hris-legacy"
                            - "crm"
                            - "iam"
                            - "marketing"
                            - "stackone"
                    nullable: true
                    example: ["ats", "hris", "hrisLegacy", "crm", "iam", "marketing", "stackOne"]
                "provider":
                    type: "string"
                    nullable: true
                "origin_owner_id":
                    type: "string"
                "origin_owner_name":
                    type: "string"
                "origin_username":
                    type: "string"
                    nullable: true
                "account_id":
                    type: "string"
                    nullable: true
                "label":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
            required:
                - "id"
                - "organization_id"
                - "project_id"
                - "origin_owner_id"
                - "origin_owner_name"
                - "created_at"
        "LinkedAccount":
            type: "object"
            properties:
                "id":
                    type: "string"
                "provider":
                    type: "string"
                "active":
                    type: "boolean"
                "origin_owner_id":
                    type: "string"
                "origin_owner_name":
                    type: "string"
                "origin_username":
                    type: "string"
                    nullable: true
                "credentials":
                    type: "object"
                    nullable: true
                "setup_information":
                    type: "object"
                    nullable: true
                "label":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                "updated_at":
                    type: "string"
                    format: "date-time"
            required:
                - "id"
                - "provider"
                - "active"
                - "origin_owner_id"
                - "origin_owner_name"
                - "created_at"
                - "updated_at"
        "PatchAccountDto":
            type: "object"
        "LinkedAccountMeta":
            type: "object"
            properties:
                "provider":
                    type: "string"
                "category":
                    type: "string"
                    enum:
                        - "ats"
                        - "hris"
                        - "hris-legacy"
                        - "crm"
                        - "iam"
                        - "marketing"
                        - "stackone"
                "models":
                    type: "object"
                    additionalProperties: true
            required:
                - "provider"
                - "category"
                - "models"
        "ConnectorsMetaResourcesImagesApiModel":
            type: "object"
            properties:
                "logo_url":
                    type: "string"
                    description: "URL of the square logo designed and used by StackOne for this provider"
                    nullable: true
                    example: "https://app.stackone.com/assets/logos/hibob.png"
                "original_logo_horizontal_url":
                    type: "string"
                    description: "URL of the original provider logo (with logo and/or name aligned horizontally)"
                    nullable: true
                    example: "https://app.stackone.com/assets/logos/source/hibob.png"
        "ConnectorsMetaResources":
            type: "object"
            properties:
                "images":
                    allOf:
                        - {"$ref": "#/components/schemas/ConnectorsMetaResourcesImagesApiModel"}
                    description: "Image assets for this provider"
                    nullable: true
        "ConnectorsMeta":
            type: "object"
            properties:
                "provider":
                    type: "string"
                    description: "The provider key"
                    example: "hibob"
                "provider_name":
                    type: "string"
                    description: "The provider human-readable label"
                    example: "Hibob"
                "category":
                    type: "string"
                    enum:
                        - "ats"
                        - "hris"
                        - "hris-legacy"
                        - "crm"
                        - "iam"
                        - "marketing"
                        - "stackone"
                    description: "The provider service category"
                    example: "hris"
                "active":
                    type: "boolean"
                    description: "Whether this provider has been enabled on the integrations page for the current project"
                    nullable: true
                    example: true
                "models":
                    type: "object"
                    additionalProperties: true
                    example: {"employees": {"create": {"apiPath": "/unified/hris/employees/:id", "input": {"defaultFields": [{"name": "first_name", "type": "string"}]}, "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}, "time_off": {"get": {"apiPath": "/unified/hris/employees/:id/time_off/:id", "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}}
                "resources":
                    allOf:
                        - {"$ref": "#/components/schemas/ConnectorsMetaResources"}
                    description: "Resources for this provider, such as image assets"
                    nullable: true
                    example: {"images": {"logo_url": "https://app.stackone.com/assets/logos/hibob.png", "original_logo_horizontal_url": "https://app.stackone.com/assets/logos/original/hibob_horizontal.png"}}
            required:
                - "provider"
                - "provider_name"
                - "category"
                - "models"
        "ProxyRequestBody":
            type: "object"
            properties:
                "url":
                    type: "string"
                    description: "The base url of the request"
                    nullable: true
                    example: "https://api.sample-integration.com/v1"
                "method":
                    type: "string"
                    enum:
                        - "get"
                        - "post"
                        - "put"
                        - "delete"
                        - "patch"
                    description: "The method of the request"
                    default: "get"
                    nullable: true
                "path":
                    type: "string"
                    description: "The path of the request including any query paramters"
                    nullable: true
                    example: "/employees/directory"
                "headers":
                    type: "object"
                    additionalProperties: true
                    description: "The headers to send in the request"
                    nullable: true
                    example: {"Content-Type": "application/json"}
                "body":
                    type: "object"
                    additionalProperties: true
                    description: "The body of the request"
                    nullable: true
        Company:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the company"
                    nullable: true
                    example: "StackOne Technologies PLC"
                "display_name":
                    type: "string"
                    description: "The display name of the company"
                    nullable: true
                    example: "StackOne"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The created_at date"
                    nullable: true
                    example: "2023-02-23T00:00:00.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The updated_at date"
                    nullable: true
                    example: "2024-02-23T00:00:00.000Z"
        RawResponse:
            type: "object"
            properties:
                "method":
                    type: "string"
                "url":
                    type: "string"
                "body":
                    type: "string"
                    nullable: true
                "response":
                    type: "object"
                    additionalProperties: true
                    nullable: true
            required:
                - "method"
                - "url"
        CompaniesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Company"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        CompanyResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Company"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        JobDescriptionApiModel:
            type: "object"
            properties:
                "text":
                    type: "string"
                    nullable: true
                    example: "Testing the laws of motion"
        CostCenters:
            type: "object"
            properties:
                "name":
                    type: "string"
                    nullable: true
                    example: "R&D"
                "distribution_percentage":
                    type: "number"
                    nullable: true
                    example: 100
        GenderEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "male"
                        - "female"
                        - "non_binary"
                        - "other"
                        - "not_disclosed"
                        - "diverse"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        PreferredLanguageEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "aar"
                        - "afr"
                        - "amh"
                        - "ara"
                        - "aym"
                        - "aze"
                        - "bel"
                        - "bul"
                        - "bis"
                        - "ben"
                        - "bos"
                        - "byn"
                        - "cat"
                        - "cha"
                        - "ces"
                        - "deu"
                        - "div"
                        - "dzo"
                        - "ell"
                        - "eng"
                        - "spa"
                        - "est"
                        - "fas"
                        - "fan"
                        - "ful"
                        - "fin"
                        - "fij"
                        - "fao"
                        - "fra"
                        - "gle"
                        - "grn"
                        - "glv"
                        - "heb"
                        - "hin"
                        - "hrv"
                        - "hat"
                        - "hun"
                        - "hye"
                        - "ind"
                        - "isl"
                        - "ita"
                        - "jpn"
                        - "kat"
                        - "kon"
                        - "kaz"
                        - "kal"
                        - "khm"
                        - "kor"
                        - "kur"
                        - "kir"
                        - "lat"
                        - "ltz"
                        - "lin"
                        - "lao"
                        - "lit"
                        - "lub"
                        - "lav"
                        - "mlg"
                        - "mah"
                        - "mri"
                        - "mkd"
                        - "msa"
                        - "mlt"
                        - "mya"
                        - "nob"
                        - "nep"
                        - "nld"
                        - "nno"
                        - "nor"
                        - "nbl"
                        - "nya"
                        - "pan"
                        - "pol"
                        - "pus"
                        - "por"
                        - "rar"
                        - "roh"
                        - "rup"
                        - "ron"
                        - "rus"
                        - "kin"
                        - "sag"
                        - "sin"
                        - "slk"
                        - "smo"
                        - "sna"
                        - "som"
                        - "sqi"
                        - "srp"
                        - "ssw"
                        - "swe"
                        - "swa"
                        - "tam"
                        - "tgk"
                        - "tha"
                        - "tir"
                        - "tig"
                        - "unmapped_value"
                    description: "The ISO639-2 Code of the language"
                    nullable: true
                    example: "eng"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        EthnicityEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "white"
                        - "black_or_african_american"
                        - "asian"
                        - "hispanic_or_latino"
                        - "american_indian_or_alaska_native"
                        - "native_hawaiian_or_pacific_islander"
                        - "two_or_more_races"
                        - "not_disclosed"
                        - "other"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        MaritalStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "single"
                        - "married"
                        - "common_law"
                        - "divorced"
                        - "widowed"
                        - "domestic_partnership"
                        - "separated"
                        - "other"
                        - "not_disclosed"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        Image:
            type: "object"
            properties:
                "url":
                    type: "string"
                    nullable: true
                "base64":
                    type: "string"
                    nullable: true
        EmploymentTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "contractor"
                        - "intern"
                        - "permanent"
                        - "apprentice"
                        - "freelance"
                        - "terminated"
                        - "temporary"
                        - "seasonal"
                        - "volunteer"
                        - "probation"
                        - "internal"
                        - "external"
                        - "expatriate"
                        - "employer_of_record"
                        - "casual"
                        - "unmapped_value"
                    description: "The type of the employment."
                    nullable: true
                    example: "permanent"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the employment type."
                    nullable: true
                    example: "Permanent"
        EmploymentScheduleTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "full_time"
                        - "shifts"
                        - "part_time"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        EmploymentStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "active"
                        - "pending"
                        - "terminated"
                        - "leave"
                        - "inactive"
                        - "unknown"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        CountryCodeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "AF"
                        - "AL"
                        - "DZ"
                        - "AS"
                        - "AD"
                        - "AO"
                        - "AI"
                        - "AQ"
                        - "AG"
                        - "AR"
                        - "AM"
                        - "AW"
                        - "AU"
                        - "AT"
                        - "AZ"
                        - "BS"
                        - "BH"
                        - "BD"
                        - "BB"
                        - "BY"
                        - "BE"
                        - "BZ"
                        - "BJ"
                        - "BM"
                        - "BT"
                        - "BO"
                        - "BQ"
                        - "BA"
                        - "BW"
                        - "BV"
                        - "BR"
                        - "IO"
                        - "BN"
                        - "BG"
                        - "BF"
                        - "BI"
                        - "KH"
                        - "CM"
                        - "CA"
                        - "CV"
                        - "KY"
                        - "CF"
                        - "TD"
                        - "CL"
                        - "CN"
                        - "CX"
                        - "CC"
                        - "CO"
                        - "KM"
                        - "CG"
                        - "CD"
                        - "CK"
                        - "CR"
                        - "HR"
                        - "CU"
                        - "CW"
                        - "CY"
                        - "CZ"
                        - "CI"
                        - "DK"
                        - "DJ"
                        - "DM"
                        - "DO"
                        - "EC"
                        - "EG"
                        - "SV"
                        - "GQ"
                        - "ER"
                        - "EE"
                        - "ET"
                        - "FK"
                        - "FO"
                        - "FJ"
                        - "FI"
                        - "FR"
                        - "GF"
                        - "PF"
                        - "TF"
                        - "GA"
                        - "GM"
                        - "GE"
                        - "DE"
                        - "GH"
                        - "GI"
                        - "GR"
                        - "GL"
                        - "GD"
                        - "GP"
                        - "GU"
                        - "GT"
                        - "GG"
                        - "GN"
                        - "GW"
                        - "GY"
                        - "HT"
                        - "HM"
                        - "VA"
                        - "HN"
                        - "HK"
                        - "HU"
                        - "IS"
                        - "IN"
                        - "ID"
                        - "IR"
                        - "IQ"
                        - "IE"
                        - "IM"
                        - "IL"
                        - "IT"
                        - "JM"
                        - "JP"
                        - "JE"
                        - "JO"
                        - "KZ"
                        - "KE"
                        - "KI"
                        - "KP"
                        - "KR"
                        - "KW"
                        - "KG"
                        - "LA"
                        - "LV"
                        - "LB"
                        - "LS"
                        - "LR"
                        - "LY"
                        - "LI"
                        - "LT"
                        - "LU"
                        - "MO"
                        - "MK"
                        - "MG"
                        - "MW"
                        - "MY"
                        - "MV"
                        - "ML"
                        - "MT"
                        - "MH"
                        - "MQ"
                        - "MR"
                        - "MU"
                        - "YT"
                        - "MX"
                        - "FM"
                        - "MD"
                        - "MC"
                        - "MN"
                        - "ME"
                        - "MS"
                        - "MA"
                        - "MZ"
                        - "MM"
                        - "NA"
                        - "NR"
                        - "NP"
                        - "NL"
                        - "NC"
                        - "NZ"
                        - "NI"
                        - "NE"
                        - "NG"
                        - "NU"
                        - "NF"
                        - "MP"
                        - "NO"
                        - "OM"
                        - "PK"
                        - "PW"
                        - "PS"
                        - "PA"
                        - "PG"
                        - "PY"
                        - "PE"
                        - "PH"
                        - "PN"
                        - "PL"
                        - "PT"
                        - "PR"
                        - "QA"
                        - "RO"
                        - "RU"
                        - "RW"
                        - "RE"
                        - "BL"
                        - "SH"
                        - "KN"
                        - "LC"
                        - "MF"
                        - "PM"
                        - "VC"
                        - "WS"
                        - "SM"
                        - "ST"
                        - "SA"
                        - "SN"
                        - "RS"
                        - "SC"
                        - "SL"
                        - "SG"
                        - "SX"
                        - "SK"
                        - "SI"
                        - "SB"
                        - "SO"
                        - "ZA"
                        - "GS"
                        - "SS"
                        - "ES"
                        - "LK"
                        - "SD"
                        - "SR"
                        - "SJ"
                        - "SZ"
                        - "SE"
                        - "CH"
                        - "SY"
                        - "TW"
                        - "TJ"
                        - "TZ"
                        - "TH"
                        - "TL"
                        - "TG"
                        - "TK"
                        - "TO"
                        - "TT"
                        - "TN"
                        - "TR"
                        - "TM"
                        - "TC"
                        - "TV"
                        - "UG"
                        - "UA"
                        - "AE"
                        - "GB"
                        - "US"
                        - "UM"
                        - "UY"
                        - "UZ"
                        - "VU"
                        - "VE"
                        - "VN"
                        - "VG"
                        - "VI"
                        - "WF"
                        - "EH"
                        - "YE"
                        - "ZM"
                        - "ZW"
                        - "unmapped_value"
                    description: "The ISO3166-1 Alpha2 Code of the Country"
                    nullable: true
                    example: "US"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        LocationTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "home"
                        - "work"
                        - "unmapped_value"
                    description: "The type of the location."
                    nullable: true
                    example: "home"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the location type."
                    nullable: true
                    example: "Home"
        HRISLocation:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "employee_id":
                    type: "string"
                    description: "The employee ID"
                    nullable: true
                    example: "1687-3"
                "name":
                    type: "string"
                    description: "The name of the location"
                    nullable: true
                    example: "Woolsthorpe Manor"
                "phone_number":
                    type: "string"
                    description: "The phone number of the location"
                    nullable: true
                    example: "+44 1476 860 364"
                "street_1":
                    type: "string"
                    description: "The first line of the address"
                    nullable: true
                    example: "Water Lane"
                "street_2":
                    type: "string"
                    description: "The second line of the address"
                    nullable: true
                    example: "Woolsthorpe by Colsterworth"
                "city":
                    type: "string"
                    description: "The city where the location is situated"
                    nullable: true
                    example: "Grantham"
                "state":
                    type: "string"
                    description: "The state where the location is situated"
                    nullable: true
                    example: "Lincolnshire"
                "zip_code":
                    type: "string"
                    description: "The ZIP code/Postal code of the location"
                    nullable: true
                    example: "NG33 5NR"
                "country":
                    allOf:
                        - {"$ref": "#/components/schemas/CountryCodeEnum"}
                    description: "The country code"
                    nullable: true
                "location_type":
                    allOf:
                        - {"$ref": "#/components/schemas/LocationTypeEnum"}
                    description: "The location type"
                    nullable: true
                    example: "work"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The created_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The updated_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        PayPeriodEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "hour"
                        - "day"
                        - "week"
                        - "every_two_weeks"
                        - "month"
                        - "twice_a_month"
                        - "every_two_months"
                        - "quarter"
                        - "every_six_months"
                        - "year"
                        - "one_off"
                        - "none"
                        - "unmapped_value"
                    description: "The pay period of the job postings."
                    nullable: true
                    example: "hour"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the pay period."
                    nullable: true
                    example: "Hour"
        PayFrequencyEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "hourly"
                        - "weekly"
                        - "bi_weekly"
                        - "four_weekly"
                        - "semi_monthly"
                        - "monthly"
                        - "bi_monthly"
                        - "quarterly"
                        - "semi_annually"
                        - "yearly"
                        - "thirteen_monthly"
                        - "pro_rata"
                        - "unmapped_value"
                        - "half_yearly"
                    description: "The pay frequency of the job postings."
                    nullable: true
                    example: "hourly"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the pay frequency."
                    nullable: true
                    example: "Hourly"
        Employment:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "employee_id":
                    type: "string"
                    description: "The employee ID associated with this employment"
                    nullable: true
                    example: "1687-3"
                "job_title":
                    type: "string"
                    description: "The job title of the employee"
                    nullable: true
                    example: "Software Engineer"
                "pay_rate":
                    type: "string"
                    description: "The pay rate for the employee"
                    nullable: true
                    example: "40.00"
                "pay_period":
                    allOf:
                        - {"$ref": "#/components/schemas/PayPeriodEnum"}
                    description: "The pay period"
                    nullable: true
                    example: "monthly"
                "pay_frequency":
                    allOf:
                        - {"$ref": "#/components/schemas/PayFrequencyEnum"}
                    description: "The pay frequency"
                    nullable: true
                    example: "hourly"
                "pay_currency":
                    type: "string"
                    description: "The currency used for pay"
                    nullable: true
                    example: "USD"
                "effective_date":
                    type: "string"
                    format: "date-time"
                    description: "The effective date of the employment contract"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "employment_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentTypeEnum"}
                    description: "The type of employment (e.g., contractor, permanent)"
                    nullable: true
                    example: "permanent"
                "employment_contract_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentScheduleTypeEnum"}
                    description: "The employment work schedule type (e.g., full-time, part-time)"
                    nullable: true
                    example: "full_time"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The created_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The updated_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        EmployeeCustomFieldTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "date"
                        - "float"
                        - "integer"
                        - "list"
                        - "text"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        EmployeeCustomFields:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the custom field."
                    nullable: true
                    example: "Training Completion Status"
                "description":
                    type: "string"
                    description: "The description of the custom field."
                    nullable: true
                    example: "The completion status of the employee's training."
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmployeeCustomFieldTypeEnum"}
                    description: "The type of the custom field."
                    nullable: true
                    example: "Dropdown"
                "value":
                    type: "object"
                    description: "The value associated with the custom field."
                    nullable: true
                    example: "Completed"
                "value_id":
                    type: "string"
                    description: "The unique identifier for the value of the custom field."
                    nullable: true
                    example: "value_456"
                "options":
                    type: "array"
                    items:
                        type: "string"
                    description: "An array of possible options for the custom field."
                    nullable: true
                    example: ["Not Started", "In Progress", "Completed", "Overdue"]
        BenefitsTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "retirement_savings"
                        - "health_savings"
                        - "other"
                        - "health_insurance"
                        - "insurance"
                    description: "The type of the benefit"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        HRISBenefit:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the benefit"
                    nullable: true
                    example: "Health Insurance"
                "benefit_type":
                    allOf:
                        - {"$ref": "#/components/schemas/BenefitsTypeEnum"}
                    description: "The type of the benefit"
                    nullable: true
                "provider":
                    type: "string"
                    description: "The provider of the benefit"
                    nullable: true
                    example: "Aetna"
                "description":
                    type: "string"
                    description: "The description of the benefit"
                    nullable: true
                    example: "Health insurance for employees"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The date and time the benefit was created"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The date and time the benefit was last updated"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
        Employee:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "first_name":
                    type: "string"
                    description: "The employee first name"
                    nullable: true
                    example: "Issac"
                "last_name":
                    type: "string"
                    description: "The employee last name"
                    nullable: true
                    example: "Newton"
                "name":
                    type: "string"
                    description: "The employee name"
                    nullable: true
                    example: "Issac Newton"
                "display_name":
                    type: "string"
                    description: "The employee display name"
                    nullable: true
                    example: "Sir Issac Newton"
                "avatar_url":
                    type: "string"
                    description: "The employee avatar Url"
                    nullable: true
                    example: "https://example.com/avatar.png"
                "personal_email":
                    type: "string"
                    description: "The employee personal email"
                    nullable: true
                    example: "isaac.newton@example.com"
                "personal_phone_number":
                    type: "string"
                    description: "The employee personal phone number"
                    nullable: true
                    example: "+1234567890"
                "work_email":
                    type: "string"
                    description: "The employee work email"
                    nullable: true
                    example: "newton@example.com"
                "work_phone_number":
                    type: "string"
                    description: "The employee work phone number"
                    nullable: true
                    example: "+1234567890"
                "job_title":
                    type: "string"
                    description: "The employee job title"
                    nullable: true
                    example: "Physicist"
                "job_description":
                    allOf:
                        - {"$ref": "#/components/schemas/JobDescriptionApiModel"}
                    description: "The employee job description"
                    nullable: true
                    example: "Testing the laws of motion"
                "department":
                    type: "string"
                    description: "The employee department"
                    nullable: true
                    example: "Physics"
                "cost_centers":
                    type: "array"
                    items: {"$ref": "#/components/schemas/CostCenters"}
                    description: "The employee cost centers"
                    nullable: true
                "manager_id":
                    type: "string"
                    description: "The employee manager ID"
                    nullable: true
                    example: "67890"
                "gender":
                    allOf:
                        - {"$ref": "#/components/schemas/GenderEnum"}
                    description: "The employee gender"
                    nullable: true
                    example: "male"
                "preferred_language":
                    allOf:
                        - {"$ref": "#/components/schemas/PreferredLanguageEnum"}
                    description: "The employee preferred language"
                    nullable: true
                    example: "en_US"
                "ethnicity":
                    allOf:
                        - {"$ref": "#/components/schemas/EthnicityEnum"}
                    description: "The employee ethnicity"
                    nullable: true
                    example: "white"
                "date_of_birth":
                    type: "string"
                    format: "date-time"
                    description: "The employee date_of_birth"
                    nullable: true
                    example: "1990-01-01T00:00.000Z"
                "birthday":
                    type: "string"
                    format: "date-time"
                    description: "The employee birthday"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
                "marital_status":
                    allOf:
                        - {"$ref": "#/components/schemas/MaritalStatusEnum"}
                    description: "The employee marital status"
                    nullable: true
                    example: "single"
                "avatar":
                    allOf:
                        - {"$ref": "#/components/schemas/Image"}
                    description: "The employee avatar"
                    nullable: true
                    example: "https://example.com/avatar.png"
                "hire_date":
                    type: "string"
                    format: "date-time"
                    description: "The employee hire date"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "start_date":
                    type: "string"
                    format: "date-time"
                    description: "The employee start date"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "tenure":
                    type: "number"
                    description: "The employee tenure"
                    nullable: true
                    example: 2
                "work_anniversary":
                    type: "string"
                    format: "date-time"
                    description: "The employee work anniversary"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
                "employment_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentTypeEnum"}
                    description: "The employee employment type"
                    nullable: true
                    example: "full_time"
                "employment_contract_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentScheduleTypeEnum"}
                    description: "The employment work schedule type (e.g., full-time, part-time)"
                    nullable: true
                    example: "full_time"
                "employment_status":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentStatusEnum"}
                    description: "The employee employment status"
                    nullable: true
                    example: "active"
                "termination_date":
                    type: "string"
                    format: "date-time"
                    description: "The employee termination date"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
                "company_name":
                    type: "string"
                    description: "The employee company name"
                    nullable: true
                    example: "Example Corp"
                "citizenships":
                    type: "array"
                    items: {"$ref": "#/components/schemas/CountryCodeEnum"}
                    description: "The citizenships of the Employee"
                    nullable: true
                "home_location":
                    allOf:
                        - {"$ref": "#/components/schemas/HRISLocation"}
                    description: "The employee home location"
                    nullable: true
                "work_location":
                    allOf:
                        - {"$ref": "#/components/schemas/HRISLocation"}
                    description: "The employee work location"
                    nullable: true
                "company":
                    allOf:
                        - {"$ref": "#/components/schemas/Company"}
                    description: "The employee company"
                    nullable: true
                "employments":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Employment"}
                    description: "The employee employments"
                    nullable: true
                "custom_fields":
                    type: "array"
                    items: {"$ref": "#/components/schemas/EmployeeCustomFields"}
                    description: "The employee custom fields"
                    nullable: true
                "benefits":
                    type: "array"
                    items: {"$ref": "#/components/schemas/HRISBenefit"}
                    description: "Current benefits of the employee"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The created_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The updated_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        EmployeesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Employee"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        EmployeeResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Employee"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        ISO3166_2SubDivisionEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "AD-07"
                        - "AD-02"
                        - "AD-03"
                        - "AD-08"
                        - "AD-04"
                        - "AD-05"
                        - "AD-06"
                        - "AE-AJ"
                        - "AE-AZ"
                        - "AE-FU"
                        - "AE-SH"
                        - "AE-DU"
                        - "AE-RK"
                        - "AE-UQ"
                        - "AF-BDS"
                        - "AF-BDG"
                        - "AF-BGL"
                        - "AF-BAL"
                        - "AF-BAM"
                        - "AF-DAY"
                        - "AF-FRA"
                        - "AF-FYB"
                        - "AF-GHA"
                        - "AF-GHO"
                        - "AF-HEL"
                        - "AF-HER"
                        - "AF-JOW"
                        - "AF-KAB"
                        - "AF-KAN"
                        - "AF-KAP"
                        - "AF-KHO"
                        - "AF-KDZ"
                        - "AF-LAG"
                        - "AF-LOG"
                        - "AF-NAN"
                        - "AF-NIM"
                        - "AF-PIA"
                        - "AF-PAR"
                        - "AF-SAR"
                        - "AF-TAK"
                        - "AF-URU"
                        - "AG-11"
                        - "AG-03"
                        - "AG-04"
                        - "AG-06"
                        - "AG-07"
                        - "AG-08"
                        - "AI-XX-1"
                        - "AL-01"
                        - "AL-09"
                        - "AL-02"
                        - "AL-03"
                        - "AL-04"
                        - "AL-05"
                        - "AL-06"
                        - "AL-07"
                        - "AL-08"
                        - "AL-10"
                        - "AL-11"
                        - "AL-12"
                        - "AM-AG"
                        - "AM-AR"
                        - "AM-AV"
                        - "AM-ER"
                        - "AM-GR"
                        - "AM-KT"
                        - "AM-LO"
                        - "AM-SH"
                        - "AM-SU"
                        - "AM-TV"
                        - "AM-VD"
                        - "AO-BGO"
                        - "AO-BGU"
                        - "AO-BIE"
                        - "AO-CAB"
                        - "AO-CCU"
                        - "AO-CNO"
                        - "AO-CUS"
                        - "AO-CNN"
                        - "AO-HUA"
                        - "AO-HUI"
                        - "AO-LUA"
                        - "AO-LNO"
                        - "AO-LSU"
                        - "AO-MAL"
                        - "AO-MOX"
                        - "AO-NAM"
                        - "AO-UIG"
                        - "AO-ZAI"
                        - "AQ-XX-1"
                        - "AR-B"
                        - "AR-K"
                        - "AR-H"
                        - "AR-U"
                        - "AR-C"
                        - "AR-X"
                        - "AR-W"
                        - "AR-E"
                        - "AR-P"
                        - "AR-Y"
                        - "AR-L"
                        - "AR-F"
                        - "AR-M"
                        - "AR-N"
                        - "AR-Q"
                        - "AR-R"
                        - "AR-A"
                        - "AR-J"
                        - "AR-D"
                        - "AR-Z"
                        - "AR-S"
                        - "AR-G"
                        - "AR-V"
                        - "AR-T"
                        - "AS-XX-1"
                        - "AS-XX-2"
                        - "AT-1"
                        - "AT-2"
                        - "AT-3"
                        - "AT-4"
                        - "AT-5"
                        - "AT-6"
                        - "AT-7"
                        - "AT-8"
                        - "AT-9"
                        - "AU-ACT"
                        - "AU-NSW"
                        - "AU-NT"
                        - "AU-QLD"
                        - "AU-SA"
                        - "AU-TAS"
                        - "AU-VIC"
                        - "AU-WA"
                        - "AW-XX-1"
                        - "AX-XX-1"
                        - "AX-XX-2"
                        - "AX-XX-3"
                        - "AX-XX-4"
                        - "AX-XX-5"
                        - "AX-XX-6"
                        - "AX-XX-7"
                        - "AX-XX-8"
                        - "AZ-ABS"
                        - "AZ-AGC"
                        - "AZ-AGU"
                        - "AZ-AST"
                        - "AZ-BA"
                        - "AZ-BAL"
                        - "AZ-BAR"
                        - "AZ-BEY"
                        - "AZ-BIL"
                        - "AZ-CAL"
                        - "AZ-FUZ"
                        - "AZ-GAD"
                        - "AZ-GA"
                        - "AZ-GOR"
                        - "AZ-GOY"
                        - "AZ-GYG"
                        - "AZ-IMI"
                        - "AZ-ISM"
                        - "AZ-KUR"
                        - "AZ-LA"
                        - "AZ-MAS"
                        - "AZ-MI"
                        - "AZ-NA"
                        - "AZ-NX"
                        - "AZ-NEF"
                        - "AZ-OGU"
                        - "AZ-QAB"
                        - "AZ-QAX"
                        - "AZ-QAZ"
                        - "AZ-QBA"
                        - "AZ-QUS"
                        - "AZ-SAT"
                        - "AZ-SAB"
                        - "AZ-SAK"
                        - "AZ-SAL"
                        - "AZ-SMI"
                        - "AZ-SKR"
                        - "AZ-SMX"
                        - "AZ-SR"
                        - "AZ-SM"
                        - "AZ-TAR"
                        - "AZ-UCA"
                        - "AZ-XAC"
                        - "AZ-XVD"
                        - "AZ-YAR"
                        - "AZ-YEV"
                        - "AZ-ZAQ"
                        - "AZ-ZAR"
                        - "BA-BRC"
                        - "BA-BIH"
                        - "BA-SRP"
                        - "BB-01"
                        - "BB-02"
                        - "BB-03"
                        - "BB-04"
                        - "BB-05"
                        - "BB-07"
                        - "BB-08"
                        - "BB-09"
                        - "BB-10"
                        - "BB-11"
                        - "BD-A"
                        - "BD-B"
                        - "BD-C"
                        - "BD-D"
                        - "BD-E"
                        - "BD-F"
                        - "BD-G"
                        - "BE-VAN"
                        - "BE-WBR"
                        - "BE-BRU"
                        - "BE-WHT"
                        - "BE-WLG"
                        - "BE-VLI"
                        - "BE-WLX"
                        - "BE-WNA"
                        - "BE-VOV"
                        - "BE-VBR"
                        - "BE-VWV"
                        - "BF-BAM"
                        - "BF-BAZ"
                        - "BF-BLG"
                        - "BF-BLK"
                        - "BF-COM"
                        - "BF-GAN"
                        - "BF-GNA"
                        - "BF-GOU"
                        - "BF-HOU"
                        - "BF-IOB"
                        - "BF-KAD"
                        - "BF-KEN"
                        - "BF-KMP"
                        - "BF-KOS"
                        - "BF-KOT"
                        - "BF-KOW"
                        - "BF-LER"
                        - "BF-LOR"
                        - "BF-MOU"
                        - "BF-NAO"
                        - "BF-NAM"
                        - "BF-NAY"
                        - "BF-OUB"
                        - "BF-OUD"
                        - "BF-PAS"
                        - "BF-PON"
                        - "BF-SNG"
                        - "BF-SMT"
                        - "BF-SEN"
                        - "BF-SIS"
                        - "BF-SOM"
                        - "BF-SOR"
                        - "BF-TAP"
                        - "BF-TUI"
                        - "BF-YAT"
                        - "BF-ZIR"
                        - "BF-ZON"
                        - "BF-ZOU"
                        - "BG-01"
                        - "BG-02"
                        - "BG-08"
                        - "BG-07"
                        - "BG-26"
                        - "BG-09"
                        - "BG-10"
                        - "BG-11"
                        - "BG-12"
                        - "BG-13"
                        - "BG-14"
                        - "BG-15"
                        - "BG-16"
                        - "BG-17"
                        - "BG-18"
                        - "BG-27"
                        - "BG-19"
                        - "BG-20"
                        - "BG-21"
                        - "BG-23"
                        - "BG-22"
                        - "BG-24"
                        - "BG-25"
                        - "BG-03"
                        - "BG-04"
                        - "BG-05"
                        - "BG-06"
                        - "BG-28"
                        - "BH-13"
                        - "BH-14"
                        - "BH-15"
                        - "BH-17"
                        - "BI-BM"
                        - "BI-CI"
                        - "BI-GI"
                        - "BI-KR"
                        - "BI-KI"
                        - "BI-MW"
                        - "BI-NG"
                        - "BI-RM"
                        - "BI-RT"
                        - "BI-RY"
                        - "BJ-AK"
                        - "BJ-AQ"
                        - "BJ-BO"
                        - "BJ-CO"
                        - "BJ-DO"
                        - "BJ-LI"
                        - "BJ-MO"
                        - "BJ-OU"
                        - "BJ-PL"
                        - "BJ-ZO"
                        - "BL-XX-1"
                        - "BM-XX-1"
                        - "BM-XX-2"
                        - "BN-BE"
                        - "BN-BM"
                        - "BN-TE"
                        - "BN-TU"
                        - "BO-H"
                        - "BO-C"
                        - "BO-B"
                        - "BO-L"
                        - "BO-O"
                        - "BO-N"
                        - "BO-P"
                        - "BO-S"
                        - "BO-T"
                        - "BQ-BO"
                        - "BQ-SA"
                        - "BQ-SE"
                        - "BR-AC"
                        - "BR-AL"
                        - "BR-AP"
                        - "BR-AM"
                        - "BR-BA"
                        - "BR-CE"
                        - "BR-DF"
                        - "BR-ES"
                        - "BR-GO"
                        - "BR-MA"
                        - "BR-MT"
                        - "BR-MS"
                        - "BR-MG"
                        - "BR-PA"
                        - "BR-PB"
                        - "BR-PR"
                        - "BR-PE"
                        - "BR-PI"
                        - "BR-RN"
                        - "BR-RS"
                        - "BR-RJ"
                        - "BR-RO"
                        - "BR-RR"
                        - "BR-SC"
                        - "BR-SP"
                        - "BR-SE"
                        - "BR-TO"
                        - "BS-BP"
                        - "BS-CO"
                        - "BS-FP"
                        - "BS-EG"
                        - "BS-HI"
                        - "BS-LI"
                        - "BS-NP"
                        - "BS-NO"
                        - "BS-NS"
                        - "BS-NE"
                        - "BS-SE"
                        - "BS-WG"
                        - "BT-33"
                        - "BT-12"
                        - "BT-22"
                        - "BT-GA"
                        - "BT-44"
                        - "BT-42"
                        - "BT-11"
                        - "BT-43"
                        - "BT-23"
                        - "BT-45"
                        - "BT-14"
                        - "BT-31"
                        - "BT-15"
                        - "BT-41"
                        - "BT-32"
                        - "BT-21"
                        - "BT-24"
                        - "BV-XX-1"
                        - "BW-CE"
                        - "BW-CH"
                        - "BW-GH"
                        - "BW-KG"
                        - "BW-KL"
                        - "BW-KW"
                        - "BW-NE"
                        - "BW-NW"
                        - "BW-SE"
                        - "BW-SO"
                        - "BY-BR"
                        - "BY-HO"
                        - "BY-HM"
                        - "BY-HR"
                        - "BY-MA"
                        - "BY-MI"
                        - "BY-VI"
                        - "BZ-BZ"
                        - "BZ-CY"
                        - "BZ-CZL"
                        - "BZ-OW"
                        - "BZ-SC"
                        - "BZ-TOL"
                        - "CA-AB"
                        - "CA-BC"
                        - "CA-MB"
                        - "CA-NB"
                        - "CA-NL"
                        - "CA-NT"
                        - "CA-NS"
                        - "CA-NU"
                        - "CA-ON"
                        - "CA-PE"
                        - "CA-QC"
                        - "CA-SK"
                        - "CA-YT"
                        - "CC-XX-1"
                        - "CD-EQ"
                        - "CD-HK"
                        - "CD-HL"
                        - "CD-IT"
                        - "CD-KC"
                        - "CD-KE"
                        - "CD-KN"
                        - "CD-BC"
                        - "CD-KG"
                        - "CD-KL"
                        - "CD-LU"
                        - "CD-NK"
                        - "CD-SA"
                        - "CD-SK"
                        - "CD-TA"
                        - "CD-TO"
                        - "CD-TU"
                        - "CF-BB"
                        - "CF-BGF"
                        - "CF-KB"
                        - "CF-HM"
                        - "CF-KG"
                        - "CF-NM"
                        - "CF-UK"
                        - "CF-AC"
                        - "CF-OP"
                        - "CF-VK"
                        - "CG-11"
                        - "CG-BZV"
                        - "CG-8"
                        - "CG-9"
                        - "CG-16"
                        - "CG-13"
                        - "CH-AG"
                        - "CH-AR"
                        - "CH-AI"
                        - "CH-BL"
                        - "CH-BS"
                        - "CH-BE"
                        - "CH-FR"
                        - "CH-GE"
                        - "CH-GL"
                        - "CH-GR"
                        - "CH-JU"
                        - "CH-LU"
                        - "CH-NE"
                        - "CH-NW"
                        - "CH-OW"
                        - "CH-SG"
                        - "CH-SH"
                        - "CH-SZ"
                        - "CH-SO"
                        - "CH-TG"
                        - "CH-TI"
                        - "CH-UR"
                        - "CH-VS"
                        - "CH-VD"
                        - "CH-ZG"
                        - "CH-ZH"
                        - "CI-AB"
                        - "CI-BS"
                        - "CI-CM"
                        - "CI-DN"
                        - "CI-GD"
                        - "CI-LC"
                        - "CI-LG"
                        - "CI-MG"
                        - "CI-SM"
                        - "CI-SV"
                        - "CI-VB"
                        - "CI-WR"
                        - "CI-YM"
                        - "CI-ZZ"
                        - "CK-XX-1"
                        - "CL-AI"
                        - "CL-AN"
                        - "CL-AP"
                        - "CL-AT"
                        - "CL-BI"
                        - "CL-CO"
                        - "CL-AR"
                        - "CL-LI"
                        - "CL-LL"
                        - "CL-LR"
                        - "CL-MA"
                        - "CL-ML"
                        - "CL-NB"
                        - "CL-RM"
                        - "CL-TA"
                        - "CL-VS"
                        - "CM-AD"
                        - "CM-CE"
                        - "CM-ES"
                        - "CM-EN"
                        - "CM-LT"
                        - "CM-NO"
                        - "CM-NW"
                        - "CM-OU"
                        - "CM-SU"
                        - "CM-SW"
                        - "CN-AH"
                        - "CN-BJ"
                        - "CN-CQ"
                        - "CN-FJ"
                        - "CN-GS"
                        - "CN-GD"
                        - "CN-GX"
                        - "CN-GZ"
                        - "CN-HI"
                        - "CN-HE"
                        - "CN-HL"
                        - "CN-HA"
                        - "CN-HB"
                        - "CN-HN"
                        - "CN-JS"
                        - "CN-JX"
                        - "CN-JL"
                        - "CN-LN"
                        - "CN-NM"
                        - "CN-NX"
                        - "CN-QH"
                        - "CN-SN"
                        - "CN-SD"
                        - "CN-SH"
                        - "CN-SX"
                        - "CN-SC"
                        - "CN-TJ"
                        - "CN-XJ"
                        - "CN-XZ"
                        - "CN-YN"
                        - "CN-ZJ"
                        - "CO-AMA"
                        - "CO-ANT"
                        - "CO-ARA"
                        - "CO-ATL"
                        - "CO-BOL"
                        - "CO-BOY"
                        - "CO-CAL"
                        - "CO-CAQ"
                        - "CO-CAS"
                        - "CO-CAU"
                        - "CO-CES"
                        - "CO-CHO"
                        - "CO-COR"
                        - "CO-CUN"
                        - "CO-DC"
                        - "CO-GUA"
                        - "CO-GUV"
                        - "CO-HUI"
                        - "CO-LAG"
                        - "CO-MAG"
                        - "CO-MET"
                        - "CO-NAR"
                        - "CO-NSA"
                        - "CO-PUT"
                        - "CO-QUI"
                        - "CO-RIS"
                        - "CO-SAP"
                        - "CO-SAN"
                        - "CO-SUC"
                        - "CO-TOL"
                        - "CO-VAC"
                        - "CO-VID"
                        - "CR-A"
                        - "CR-C"
                        - "CR-G"
                        - "CR-H"
                        - "CR-L"
                        - "CR-P"
                        - "CR-SJ"
                        - "CU-15"
                        - "CU-09"
                        - "CU-08"
                        - "CU-06"
                        - "CU-12"
                        - "CU-14"
                        - "CU-11"
                        - "CU-03"
                        - "CU-10"
                        - "CU-04"
                        - "CU-16"
                        - "CU-01"
                        - "CU-07"
                        - "CU-13"
                        - "CU-05"
                        - "CV-BV"
                        - "CV-BR"
                        - "CV-MO"
                        - "CV-PN"
                        - "CV-PR"
                        - "CV-RS"
                        - "CV-SL"
                        - "CV-CR"
                        - "CV-SD"
                        - "CV-SO"
                        - "CV-SV"
                        - "CV-TA"
                        - "CV-TS"
                        - "CW-XX-1"
                        - "CX-XX-1"
                        - "CY-04"
                        - "CY-06"
                        - "CY-03"
                        - "CY-01"
                        - "CY-02"
                        - "CY-05"
                        - "CZ-31"
                        - "CZ-64"
                        - "CZ-41"
                        - "CZ-63"
                        - "CZ-52"
                        - "CZ-51"
                        - "CZ-80"
                        - "CZ-71"
                        - "CZ-53"
                        - "CZ-32"
                        - "CZ-10"
                        - "CZ-20"
                        - "CZ-42"
                        - "CZ-72"
                        - "DE-BW"
                        - "DE-BY"
                        - "DE-BE"
                        - "DE-BB"
                        - "DE-HB"
                        - "DE-HH"
                        - "DE-HE"
                        - "DE-MV"
                        - "DE-NI"
                        - "DE-NW"
                        - "DE-RP"
                        - "DE-SL"
                        - "DE-SN"
                        - "DE-ST"
                        - "DE-SH"
                        - "DE-TH"
                        - "DJ-AR"
                        - "DJ-DJ"
                        - "DK-84"
                        - "DK-82"
                        - "DK-81"
                        - "DK-85"
                        - "DK-83"
                        - "DM-02"
                        - "DM-04"
                        - "DM-05"
                        - "DM-06"
                        - "DM-07"
                        - "DM-09"
                        - "DM-10"
                        - "DO-02"
                        - "DO-03"
                        - "DO-04"
                        - "DO-05"
                        - "DO-01"
                        - "DO-06"
                        - "DO-08"
                        - "DO-07"
                        - "DO-09"
                        - "DO-30"
                        - "DO-19"
                        - "DO-10"
                        - "DO-11"
                        - "DO-12"
                        - "DO-13"
                        - "DO-14"
                        - "DO-28"
                        - "DO-15"
                        - "DO-29"
                        - "DO-17"
                        - "DO-18"
                        - "DO-20"
                        - "DO-21"
                        - "DO-31"
                        - "DO-22"
                        - "DO-23"
                        - "DO-24"
                        - "DO-25"
                        - "DO-26"
                        - "DO-27"
                        - "DZ-01"
                        - "DZ-44"
                        - "DZ-46"
                        - "DZ-16"
                        - "DZ-23"
                        - "DZ-05"
                        - "DZ-08"
                        - "DZ-06"
                        - "DZ-07"
                        - "DZ-09"
                        - "DZ-34"
                        - "DZ-10"
                        - "DZ-35"
                        - "DZ-02"
                        - "DZ-25"
                        - "DZ-17"
                        - "DZ-32"
                        - "DZ-39"
                        - "DZ-36"
                        - "DZ-47"
                        - "DZ-24"
                        - "DZ-33"
                        - "DZ-18"
                        - "DZ-40"
                        - "DZ-03"
                        - "DZ-28"
                        - "DZ-29"
                        - "DZ-26"
                        - "DZ-43"
                        - "DZ-27"
                        - "DZ-45"
                        - "DZ-31"
                        - "DZ-30"
                        - "DZ-04"
                        - "DZ-48"
                        - "DZ-20"
                        - "DZ-19"
                        - "DZ-22"
                        - "DZ-21"
                        - "DZ-41"
                        - "DZ-11"
                        - "DZ-12"
                        - "DZ-14"
                        - "DZ-37"
                        - "DZ-42"
                        - "DZ-38"
                        - "DZ-15"
                        - "DZ-13"
                        - "EC-A"
                        - "EC-B"
                        - "EC-F"
                        - "EC-C"
                        - "EC-H"
                        - "EC-X"
                        - "EC-O"
                        - "EC-E"
                        - "EC-W"
                        - "EC-G"
                        - "EC-I"
                        - "EC-L"
                        - "EC-R"
                        - "EC-M"
                        - "EC-S"
                        - "EC-N"
                        - "EC-D"
                        - "EC-Y"
                        - "EC-P"
                        - "EC-SE"
                        - "EC-SD"
                        - "EC-U"
                        - "EC-T"
                        - "EC-Z"
                        - "EE-37"
                        - "EE-39"
                        - "EE-45"
                        - "EE-52"
                        - "EE-50"
                        - "EE-60"
                        - "EE-56"
                        - "EE-68"
                        - "EE-64"
                        - "EE-71"
                        - "EE-74"
                        - "EE-79"
                        - "EE-81"
                        - "EE-84"
                        - "EE-87"
                        - "EG-DK"
                        - "EG-BA"
                        - "EG-BH"
                        - "EG-FYM"
                        - "EG-GH"
                        - "EG-ALX"
                        - "EG-IS"
                        - "EG-GZ"
                        - "EG-MNF"
                        - "EG-MN"
                        - "EG-C"
                        - "EG-KB"
                        - "EG-LX"
                        - "EG-WAD"
                        - "EG-SUZ"
                        - "EG-SHR"
                        - "EG-ASN"
                        - "EG-AST"
                        - "EG-BNS"
                        - "EG-PTS"
                        - "EG-DT"
                        - "EG-JS"
                        - "EG-KFS"
                        - "EG-MT"
                        - "EG-KN"
                        - "EG-SIN"
                        - "EG-SHG"
                        - "EH-XX-1"
                        - "ER-MA"
                        - "ER-DK"
                        - "ER-SK"
                        - "ES-AN"
                        - "ES-AR"
                        - "ES-AS"
                        - "ES-CN"
                        - "ES-CB"
                        - "ES-CL"
                        - "ES-CM"
                        - "ES-CT"
                        - "ES-CE"
                        - "ES-EX"
                        - "ES-GA"
                        - "ES-IB"
                        - "ES-RI"
                        - "ES-MD"
                        - "ES-ML"
                        - "ES-MC"
                        - "ES-NC"
                        - "ES-PV"
                        - "ES-VC"
                        - "ET-AA"
                        - "ET-AF"
                        - "ET-AM"
                        - "ET-BE"
                        - "ET-DD"
                        - "ET-GA"
                        - "ET-HA"
                        - "ET-OR"
                        - "ET-SO"
                        - "ET-TI"
                        - "ET-SN"
                        - "FI-02"
                        - "FI-03"
                        - "FI-04"
                        - "FI-05"
                        - "FI-06"
                        - "FI-07"
                        - "FI-08"
                        - "FI-09"
                        - "FI-10"
                        - "FI-16"
                        - "FI-11"
                        - "FI-12"
                        - "FI-13"
                        - "FI-14"
                        - "FI-15"
                        - "FI-17"
                        - "FI-18"
                        - "FI-19"
                        - "FJ-C"
                        - "FJ-E"
                        - "FJ-N"
                        - "FJ-R"
                        - "FJ-W"
                        - "FK-XX-1"
                        - "FM-TRK"
                        - "FM-KSA"
                        - "FM-PNI"
                        - "FM-YAP"
                        - "FO-XX-1"
                        - "FO-XX-2"
                        - "FO-XX-3"
                        - "FO-XX-4"
                        - "FO-XX-5"
                        - "FR-ARA"
                        - "FR-BFC"
                        - "FR-BRE"
                        - "FR-CVL"
                        - "FR-20R"
                        - "FR-GES"
                        - "FR-HDF"
                        - "FR-IDF"
                        - "FR-NOR"
                        - "FR-NAQ"
                        - "FR-OCC"
                        - "FR-PDL"
                        - "FR-PAC"
                        - "GA-1"
                        - "GA-2"
                        - "GA-4"
                        - "GA-5"
                        - "GA-8"
                        - "GA-9"
                        - "GB-ENG"
                        - "GB-NIR"
                        - "GB-SCT"
                        - "GB-WLS"
                        - "GB-CAM"
                        - "GB-CMA"
                        - "GB-DBY"
                        - "GB-DEV"
                        - "GB-DOR"
                        - "GB-ESX"
                        - "GB-ESS"
                        - "GB-GLS"
                        - "GB-HAM"
                        - "GB-HRT"
                        - "GB-KEN"
                        - "GB-LAN"
                        - "GB-LEC"
                        - "GB-LIN"
                        - "GB-NFK"
                        - "GB-NYK"
                        - "GB-NTT"
                        - "GB-OXF"
                        - "GB-SOM"
                        - "GB-STS"
                        - "GB-SFK"
                        - "GB-SRY"
                        - "GB-WAR"
                        - "GB-WSX"
                        - "GB-WOR"
                        - "GB-LND"
                        - "GB-BDG"
                        - "GB-BNE"
                        - "GB-BEX"
                        - "GB-BEN"
                        - "GB-BRY"
                        - "GB-CMD"
                        - "GB-CRY"
                        - "GB-EAL"
                        - "GB-ENF"
                        - "GB-GRE"
                        - "GB-HCK"
                        - "GB-HMF"
                        - "GB-HRY"
                        - "GB-HRW"
                        - "GB-HAV"
                        - "GB-HIL"
                        - "GB-HNS"
                        - "GB-ISL"
                        - "GB-KEC"
                        - "GB-KTT"
                        - "GB-LBH"
                        - "GB-LEW"
                        - "GB-MRT"
                        - "GB-NWM"
                        - "GB-RDB"
                        - "GB-RIC"
                        - "GB-SWK"
                        - "GB-STN"
                        - "GB-TWH"
                        - "GB-WFT"
                        - "GB-WND"
                        - "GB-WSM"
                        - "GB-BNS"
                        - "GB-BIR"
                        - "GB-BOL"
                        - "GB-BRD"
                        - "GB-BUR"
                        - "GB-CLD"
                        - "GB-COV"
                        - "GB-DNC"
                        - "GB-DUD"
                        - "GB-GAT"
                        - "GB-KIR"
                        - "GB-KWL"
                        - "GB-LDS"
                        - "GB-LIV"
                        - "GB-MAN"
                        - "GB-NET"
                        - "GB-NTY"
                        - "GB-OLD"
                        - "GB-RCH"
                        - "GB-ROT"
                        - "GB-SHN"
                        - "GB-SLF"
                        - "GB-SAW"
                        - "GB-SFT"
                        - "GB-SHF"
                        - "GB-SOL"
                        - "GB-STY"
                        - "GB-SKP"
                        - "GB-SND"
                        - "GB-TAM"
                        - "GB-TRF"
                        - "GB-WKF"
                        - "GB-WLL"
                        - "GB-WGN"
                        - "GB-WRL"
                        - "GB-WLV"
                        - "GB-BAS"
                        - "GB-BDF"
                        - "GB-BBD"
                        - "GB-BPL"
                        - "GB-BCP"
                        - "GB-BRC"
                        - "GB-BNH"
                        - "GB-BST"
                        - "GB-BKM"
                        - "GB-CBF"
                        - "GB-CHE"
                        - "GB-CHW"
                        - "GB-CON"
                        - "GB-DAL"
                        - "GB-DER"
                        - "GB-DUR"
                        - "GB-ERY"
                        - "GB-HAL"
                        - "GB-HPL"
                        - "GB-HEF"
                        - "GB-IOW"
                        - "GB-IOS"
                        - "GB-KHL"
                        - "GB-LCE"
                        - "GB-LUT"
                        - "GB-MDW"
                        - "GB-MDB"
                        - "GB-MIK"
                        - "GB-NEL"
                        - "GB-NLN"
                        - "GB-NNH"
                        - "GB-NSM"
                        - "GB-NBL"
                        - "GB-NGM"
                        - "GB-PTE"
                        - "GB-PLY"
                        - "GB-POR"
                        - "GB-RDG"
                        - "GB-RCC"
                        - "GB-RUT"
                        - "GB-SHR"
                        - "GB-SLG"
                        - "GB-SGC"
                        - "GB-STH"
                        - "GB-SOS"
                        - "GB-STT"
                        - "GB-STE"
                        - "GB-SWD"
                        - "GB-TFW"
                        - "GB-THR"
                        - "GB-TOB"
                        - "GB-WRT"
                        - "GB-WBK"
                        - "GB-WNH"
                        - "GB-WIL"
                        - "GB-WNM"
                        - "GB-WOK"
                        - "GB-YOR"
                        - "GB-ANN"
                        - "GB-AND"
                        - "GB-ABC"
                        - "GB-BFS"
                        - "GB-CCG"
                        - "GB-DRS"
                        - "GB-FMO"
                        - "GB-LBC"
                        - "GB-MEA"
                        - "GB-MUL"
                        - "GB-NMD"
                        - "GB-ABE"
                        - "GB-ABD"
                        - "GB-ANS"
                        - "GB-AGB"
                        - "GB-CLK"
                        - "GB-DGY"
                        - "GB-DND"
                        - "GB-EAY"
                        - "GB-EDU"
                        - "GB-ELN"
                        - "GB-ERW"
                        - "GB-EDH"
                        - "GB-ELS"
                        - "GB-FAL"
                        - "GB-FIF"
                        - "GB-GLG"
                        - "GB-HLD"
                        - "GB-IVC"
                        - "GB-MLN"
                        - "GB-MRY"
                        - "GB-NAY"
                        - "GB-NLK"
                        - "GB-ORK"
                        - "GB-PKN"
                        - "GB-RFW"
                        - "GB-SCB"
                        - "GB-ZET"
                        - "GB-SAY"
                        - "GB-SLK"
                        - "GB-STG"
                        - "GB-WDU"
                        - "GB-WLN"
                        - "GB-BGW"
                        - "GB-BGE"
                        - "GB-CAY"
                        - "GB-CRF"
                        - "GB-CMN"
                        - "GB-CGN"
                        - "GB-CWY"
                        - "GB-DEN"
                        - "GB-FLN"
                        - "GB-GWN"
                        - "GB-AGY"
                        - "GB-MTY"
                        - "GB-MON"
                        - "GB-NTL"
                        - "GB-NWP"
                        - "GB-PEM"
                        - "GB-POW"
                        - "GB-RCT"
                        - "GB-SWA"
                        - "GB-TOF"
                        - "GB-VGL"
                        - "GB-WRX"
                        - "GD-01"
                        - "GD-02"
                        - "GD-03"
                        - "GD-04"
                        - "GD-05"
                        - "GD-06"
                        - "GD-10"
                        - "GE-AB"
                        - "GE-AJ"
                        - "GE-GU"
                        - "GE-IM"
                        - "GE-KA"
                        - "GE-KK"
                        - "GE-MM"
                        - "GE-RL"
                        - "GE-SZ"
                        - "GE-SJ"
                        - "GE-SK"
                        - "GE-TB"
                        - "GF-XX-1"
                        - "GG-XX-1"
                        - "GH-AF"
                        - "GH-AH"
                        - "GH-BO"
                        - "GH-BE"
                        - "GH-CP"
                        - "GH-EP"
                        - "GH-AA"
                        - "GH-NP"
                        - "GH-UE"
                        - "GH-UW"
                        - "GH-TV"
                        - "GH-WP"
                        - "GI-XX-1"
                        - "GL-AV"
                        - "GL-KU"
                        - "GL-QT"
                        - "GL-SM"
                        - "GL-QE"
                        - "GM-B"
                        - "GM-M"
                        - "GM-L"
                        - "GM-N"
                        - "GM-U"
                        - "GM-W"
                        - "GN-BF"
                        - "GN-B"
                        - "GN-C"
                        - "GN-CO"
                        - "GN-DB"
                        - "GN-DU"
                        - "GN-K"
                        - "GN-L"
                        - "GN-LA"
                        - "GN-MC"
                        - "GN-N"
                        - "GN-SI"
                        - "GP-XX-1"
                        - "GQ-BN"
                        - "GQ-KN"
                        - "GQ-LI"
                        - "GQ-WN"
                        - "GR-A"
                        - "GR-I"
                        - "GR-G"
                        - "GR-C"
                        - "GR-F"
                        - "GR-D"
                        - "GR-B"
                        - "GR-M"
                        - "GR-L"
                        - "GR-J"
                        - "GR-H"
                        - "GR-E"
                        - "GR-K"
                        - "GS-XX-1"
                        - "GT-16"
                        - "GT-15"
                        - "GT-04"
                        - "GT-20"
                        - "GT-02"
                        - "GT-05"
                        - "GT-01"
                        - "GT-13"
                        - "GT-18"
                        - "GT-21"
                        - "GT-22"
                        - "GT-17"
                        - "GT-09"
                        - "GT-14"
                        - "GT-11"
                        - "GT-03"
                        - "GT-12"
                        - "GT-06"
                        - "GT-07"
                        - "GT-10"
                        - "GT-08"
                        - "GT-19"
                        - "GU-XX-1"
                        - "GU-XX-2"
                        - "GU-XX-3"
                        - "GU-XX-4"
                        - "GU-XX-5"
                        - "GU-XX-6"
                        - "GU-XX-7"
                        - "GU-XX-8"
                        - "GU-XX-9"
                        - "GU-XX-10"
                        - "GU-XX-11"
                        - "GU-XX-12"
                        - "GU-XX-13"
                        - "GU-XX-14"
                        - "GU-XX-15"
                        - "GU-XX-16"
                        - "GW-BS"
                        - "GW-GA"
                        - "GY-CU"
                        - "GY-DE"
                        - "GY-EB"
                        - "GY-ES"
                        - "GY-MA"
                        - "GY-PT"
                        - "GY-UD"
                        - "HK-XX-1"
                        - "HM-XX-1"
                        - "HN-AT"
                        - "HN-CH"
                        - "HN-CL"
                        - "HN-CM"
                        - "HN-CP"
                        - "HN-CR"
                        - "HN-EP"
                        - "HN-FM"
                        - "HN-GD"
                        - "HN-IN"
                        - "HN-IB"
                        - "HN-LP"
                        - "HN-LE"
                        - "HN-OC"
                        - "HN-OL"
                        - "HN-SB"
                        - "HN-VA"
                        - "HN-YO"
                        - "HR-07"
                        - "HR-12"
                        - "HR-19"
                        - "HR-21"
                        - "HR-18"
                        - "HR-04"
                        - "HR-06"
                        - "HR-02"
                        - "HR-09"
                        - "HR-20"
                        - "HR-14"
                        - "HR-11"
                        - "HR-08"
                        - "HR-15"
                        - "HR-03"
                        - "HR-17"
                        - "HR-05"
                        - "HR-10"
                        - "HR-16"
                        - "HR-13"
                        - "HR-01"
                        - "HT-AR"
                        - "HT-CE"
                        - "HT-GA"
                        - "HT-NI"
                        - "HT-ND"
                        - "HT-OU"
                        - "HT-SD"
                        - "HT-SE"
                        - "HU-BK"
                        - "HU-BA"
                        - "HU-BE"
                        - "HU-BZ"
                        - "HU-BU"
                        - "HU-CS"
                        - "HU-FE"
                        - "HU-GS"
                        - "HU-HB"
                        - "HU-HE"
                        - "HU-JN"
                        - "HU-KE"
                        - "HU-NO"
                        - "HU-PE"
                        - "HU-SO"
                        - "HU-SZ"
                        - "HU-TO"
                        - "HU-VA"
                        - "HU-VE"
                        - "HU-ZA"
                        - "ID-AC"
                        - "ID-BA"
                        - "ID-BT"
                        - "ID-BE"
                        - "ID-GO"
                        - "ID-JK"
                        - "ID-JA"
                        - "ID-JB"
                        - "ID-JT"
                        - "ID-JI"
                        - "ID-KB"
                        - "ID-KS"
                        - "ID-KT"
                        - "ID-KI"
                        - "ID-KU"
                        - "ID-BB"
                        - "ID-KR"
                        - "ID-LA"
                        - "ID-ML"
                        - "ID-MU"
                        - "ID-NB"
                        - "ID-NT"
                        - "ID-PP"
                        - "ID-PB"
                        - "ID-RI"
                        - "ID-SR"
                        - "ID-SN"
                        - "ID-ST"
                        - "ID-SG"
                        - "ID-SA"
                        - "ID-SB"
                        - "ID-SS"
                        - "ID-SU"
                        - "ID-YO"
                        - "IE-CW"
                        - "IE-CN"
                        - "IE-CE"
                        - "IE-CO"
                        - "IE-DL"
                        - "IE-D"
                        - "IE-G"
                        - "IE-KY"
                        - "IE-KE"
                        - "IE-KK"
                        - "IE-LS"
                        - "IE-LM"
                        - "IE-LK"
                        - "IE-LD"
                        - "IE-LH"
                        - "IE-MO"
                        - "IE-MH"
                        - "IE-MN"
                        - "IE-OY"
                        - "IE-RN"
                        - "IE-SO"
                        - "IE-TA"
                        - "IE-WD"
                        - "IE-WH"
                        - "IE-WX"
                        - "IE-WW"
                        - "IL-D"
                        - "IL-M"
                        - "IL-Z"
                        - "IL-HA"
                        - "IL-TA"
                        - "IL-JM"
                        - "IM-XX-1"
                        - "IN-AN"
                        - "IN-AP"
                        - "IN-AR"
                        - "IN-AS"
                        - "IN-BR"
                        - "IN-CH"
                        - "IN-CT"
                        - "IN-DN"
                        - "IN-DH"
                        - "IN-DL"
                        - "IN-GA"
                        - "IN-GJ"
                        - "IN-HR"
                        - "IN-HP"
                        - "IN-JK"
                        - "IN-JH"
                        - "IN-KA"
                        - "IN-KL"
                        - "IN-LD"
                        - "IN-MP"
                        - "IN-MH"
                        - "IN-MN"
                        - "IN-ML"
                        - "IN-MZ"
                        - "IN-NL"
                        - "IN-OR"
                        - "IN-PY"
                        - "IN-PB"
                        - "IN-RJ"
                        - "IN-SK"
                        - "IN-TN"
                        - "IN-TG"
                        - "IN-TR"
                        - "IN-UP"
                        - "IN-UT"
                        - "IN-WB"
                        - "IO-XX-1"
                        - "IQ-AN"
                        - "IQ-BA"
                        - "IQ-MU"
                        - "IQ-QA"
                        - "IQ-NA"
                        - "IQ-AR"
                        - "IQ-SU"
                        - "IQ-BB"
                        - "IQ-BG"
                        - "IQ-DA"
                        - "IQ-DQ"
                        - "IQ-DI"
                        - "IQ-KA"
                        - "IQ-KI"
                        - "IQ-MA"
                        - "IQ-NI"
                        - "IQ-SD"
                        - "IQ-WA"
                        - "IR-30"
                        - "IR-24"
                        - "IR-04"
                        - "IR-03"
                        - "IR-18"
                        - "IR-14"
                        - "IR-10"
                        - "IR-07"
                        - "IR-01"
                        - "IR-27"
                        - "IR-13"
                        - "IR-22"
                        - "IR-16"
                        - "IR-08"
                        - "IR-05"
                        - "IR-29"
                        - "IR-09"
                        - "IR-28"
                        - "IR-06"
                        - "IR-17"
                        - "IR-12"
                        - "IR-15"
                        - "IR-00"
                        - "IR-02"
                        - "IR-26"
                        - "IR-25"
                        - "IR-20"
                        - "IR-11"
                        - "IR-23"
                        - "IR-21"
                        - "IR-19"
                        - "IS-7"
                        - "IS-1"
                        - "IS-6"
                        - "IS-5"
                        - "IS-8"
                        - "IS-2"
                        - "IS-4"
                        - "IS-3"
                        - "IT-65"
                        - "IT-77"
                        - "IT-78"
                        - "IT-72"
                        - "IT-45"
                        - "IT-36"
                        - "IT-62"
                        - "IT-42"
                        - "IT-25"
                        - "IT-57"
                        - "IT-67"
                        - "IT-21"
                        - "IT-75"
                        - "IT-88"
                        - "IT-82"
                        - "IT-52"
                        - "IT-32"
                        - "IT-55"
                        - "IT-23"
                        - "IT-34"
                        - "JE-XX-1"
                        - "JM-13"
                        - "JM-09"
                        - "JM-01"
                        - "JM-12"
                        - "JM-04"
                        - "JM-02"
                        - "JM-06"
                        - "JM-14"
                        - "JM-11"
                        - "JM-08"
                        - "JM-05"
                        - "JM-03"
                        - "JM-07"
                        - "JM-10"
                        - "JO-AJ"
                        - "JO-AQ"
                        - "JO-AM"
                        - "JO-BA"
                        - "JO-KA"
                        - "JO-MA"
                        - "JO-AT"
                        - "JO-AZ"
                        - "JO-IR"
                        - "JO-JA"
                        - "JO-MN"
                        - "JO-MD"
                        - "JP-23"
                        - "JP-05"
                        - "JP-02"
                        - "JP-12"
                        - "JP-38"
                        - "JP-18"
                        - "JP-40"
                        - "JP-07"
                        - "JP-21"
                        - "JP-10"
                        - "JP-34"
                        - "JP-01"
                        - "JP-28"
                        - "JP-08"
                        - "JP-17"
                        - "JP-03"
                        - "JP-37"
                        - "JP-46"
                        - "JP-14"
                        - "JP-39"
                        - "JP-43"
                        - "JP-26"
                        - "JP-24"
                        - "JP-04"
                        - "JP-45"
                        - "JP-20"
                        - "JP-42"
                        - "JP-29"
                        - "JP-15"
                        - "JP-44"
                        - "JP-33"
                        - "JP-47"
                        - "JP-27"
                        - "JP-41"
                        - "JP-11"
                        - "JP-25"
                        - "JP-32"
                        - "JP-22"
                        - "JP-09"
                        - "JP-36"
                        - "JP-13"
                        - "JP-31"
                        - "JP-16"
                        - "JP-30"
                        - "JP-06"
                        - "JP-35"
                        - "JP-19"
                        - "KE-01"
                        - "KE-02"
                        - "KE-03"
                        - "KE-04"
                        - "KE-05"
                        - "KE-06"
                        - "KE-07"
                        - "KE-08"
                        - "KE-09"
                        - "KE-10"
                        - "KE-11"
                        - "KE-12"
                        - "KE-13"
                        - "KE-14"
                        - "KE-15"
                        - "KE-16"
                        - "KE-17"
                        - "KE-18"
                        - "KE-19"
                        - "KE-20"
                        - "KE-21"
                        - "KE-22"
                        - "KE-23"
                        - "KE-24"
                        - "KE-25"
                        - "KE-26"
                        - "KE-27"
                        - "KE-28"
                        - "KE-29"
                        - "KE-30"
                        - "KE-31"
                        - "KE-32"
                        - "KE-33"
                        - "KE-34"
                        - "KE-35"
                        - "KE-36"
                        - "KE-37"
                        - "KE-38"
                        - "KE-39"
                        - "KE-40"
                        - "KE-41"
                        - "KE-42"
                        - "KE-43"
                        - "KE-44"
                        - "KE-45"
                        - "KE-46"
                        - "KE-47"
                        - "KG-B"
                        - "KG-GB"
                        - "KG-C"
                        - "KG-J"
                        - "KG-N"
                        - "KG-GO"
                        - "KG-T"
                        - "KG-Y"
                        - "KH-2"
                        - "KH-1"
                        - "KH-23"
                        - "KH-3"
                        - "KH-4"
                        - "KH-5"
                        - "KH-6"
                        - "KH-7"
                        - "KH-8"
                        - "KH-10"
                        - "KH-11"
                        - "KH-24"
                        - "KH-12"
                        - "KH-15"
                        - "KH-18"
                        - "KH-14"
                        - "KH-16"
                        - "KH-17"
                        - "KH-19"
                        - "KH-20"
                        - "KH-21"
                        - "KI-G"
                        - "KM-G"
                        - "KM-M"
                        - "KN-01"
                        - "KN-02"
                        - "KN-03"
                        - "KN-05"
                        - "KN-06"
                        - "KN-07"
                        - "KN-08"
                        - "KN-09"
                        - "KN-10"
                        - "KN-11"
                        - "KN-12"
                        - "KN-13"
                        - "KN-15"
                        - "KP-01"
                        - "KR-26"
                        - "KR-43"
                        - "KR-44"
                        - "KR-27"
                        - "KR-30"
                        - "KR-42"
                        - "KR-29"
                        - "KR-41"
                        - "KR-47"
                        - "KR-48"
                        - "KR-28"
                        - "KR-49"
                        - "KR-45"
                        - "KR-46"
                        - "KR-11"
                        - "KR-31"
                        - "KW-KU"
                        - "KW-AH"
                        - "KW-FA"
                        - "KW-JA"
                        - "KW-HA"
                        - "KW-MU"
                        - "KY-XX-1"
                        - "KZ-ALA"
                        - "KZ-ALM"
                        - "KZ-AKM"
                        - "KZ-AKT"
                        - "KZ-ATY"
                        - "KZ-ZAP"
                        - "KZ-MAN"
                        - "KZ-AST"
                        - "KZ-YUZ"
                        - "KZ-PAV"
                        - "KZ-KAR"
                        - "KZ-KUS"
                        - "KZ-KZY"
                        - "KZ-VOS"
                        - "KZ-SHY"
                        - "KZ-SEV"
                        - "KZ-ZHA"
                        - "LA-AT"
                        - "LA-BL"
                        - "LA-CH"
                        - "LA-HO"
                        - "LA-KH"
                        - "LA-OU"
                        - "LA-PH"
                        - "LA-SV"
                        - "LA-VI"
                        - "LA-XA"
                        - "LA-XE"
                        - "LA-XI"
                        - "LB-AK"
                        - "LB-BH"
                        - "LB-BI"
                        - "LB-BA"
                        - "LB-AS"
                        - "LB-JA"
                        - "LB-JL"
                        - "LB-NA"
                        - "LC-01"
                        - "LC-02"
                        - "LC-03"
                        - "LC-05"
                        - "LC-06"
                        - "LC-07"
                        - "LC-08"
                        - "LC-10"
                        - "LC-11"
                        - "LI-01"
                        - "LI-02"
                        - "LI-03"
                        - "LI-04"
                        - "LI-05"
                        - "LI-06"
                        - "LI-07"
                        - "LI-09"
                        - "LI-10"
                        - "LI-11"
                        - "LK-2"
                        - "LK-5"
                        - "LK-7"
                        - "LK-6"
                        - "LK-4"
                        - "LK-9"
                        - "LK-3"
                        - "LK-8"
                        - "LK-1"
                        - "LR-BM"
                        - "LR-GB"
                        - "LR-GG"
                        - "LR-MG"
                        - "LR-MO"
                        - "LR-NI"
                        - "LR-SI"
                        - "LS-D"
                        - "LS-B"
                        - "LS-C"
                        - "LS-E"
                        - "LS-A"
                        - "LS-F"
                        - "LS-J"
                        - "LS-H"
                        - "LS-G"
                        - "LS-K"
                        - "LT-AL"
                        - "LT-KU"
                        - "LT-KL"
                        - "LT-MR"
                        - "LT-PN"
                        - "LT-SA"
                        - "LT-TA"
                        - "LT-TE"
                        - "LT-UT"
                        - "LT-VL"
                        - "LU-CA"
                        - "LU-CL"
                        - "LU-DI"
                        - "LU-EC"
                        - "LU-ES"
                        - "LU-GR"
                        - "LU-LU"
                        - "LU-ME"
                        - "LU-RD"
                        - "LU-RM"
                        - "LU-VD"
                        - "LU-WI"
                        - "LV-011"
                        - "LV-002"
                        - "LV-007"
                        - "LV-111"
                        - "LV-015"
                        - "LV-016"
                        - "LV-022"
                        - "LV-DGV"
                        - "LV-112"
                        - "LV-026"
                        - "LV-033"
                        - "LV-042"
                        - "LV-JEL"
                        - "LV-041"
                        - "LV-JUR"
                        - "LV-052"
                        - "LV-047"
                        - "LV-050"
                        - "LV-LPX"
                        - "LV-054"
                        - "LV-056"
                        - "LV-058"
                        - "LV-059"
                        - "LV-062"
                        - "LV-067"
                        - "LV-068"
                        - "LV-073"
                        - "LV-077"
                        - "LV-RIX"
                        - "LV-080"
                        - "LV-087"
                        - "LV-088"
                        - "LV-089"
                        - "LV-091"
                        - "LV-094"
                        - "LV-097"
                        - "LV-099"
                        - "LV-101"
                        - "LV-113"
                        - "LV-102"
                        - "LV-106"
                        - "LY-BU"
                        - "LY-JA"
                        - "LY-JG"
                        - "LY-JI"
                        - "LY-JU"
                        - "LY-KF"
                        - "LY-MJ"
                        - "LY-MB"
                        - "LY-WA"
                        - "LY-NQ"
                        - "LY-ZA"
                        - "LY-BA"
                        - "LY-DR"
                        - "LY-MI"
                        - "LY-NL"
                        - "LY-SB"
                        - "LY-SR"
                        - "LY-TB"
                        - "LY-WS"
                        - "MA-05"
                        - "MA-06"
                        - "MA-08"
                        - "MA-03"
                        - "MA-10"
                        - "MA-02"
                        - "MA-11"
                        - "MA-07"
                        - "MA-04"
                        - "MA-09"
                        - "MA-01"
                        - "MC-FO"
                        - "MC-CO"
                        - "MC-MO"
                        - "MC-MC"
                        - "MC-SR"
                        - "MD-AN"
                        - "MD-BA"
                        - "MD-BS"
                        - "MD-BD"
                        - "MD-BR"
                        - "MD-CA"
                        - "MD-CL"
                        - "MD-CT"
                        - "MD-CS"
                        - "MD-CU"
                        - "MD-CM"
                        - "MD-CR"
                        - "MD-DO"
                        - "MD-DR"
                        - "MD-DU"
                        - "MD-ED"
                        - "MD-FA"
                        - "MD-FL"
                        - "MD-GA"
                        - "MD-GL"
                        - "MD-HI"
                        - "MD-IA"
                        - "MD-LE"
                        - "MD-NI"
                        - "MD-OC"
                        - "MD-OR"
                        - "MD-RE"
                        - "MD-RI"
                        - "MD-SI"
                        - "MD-SD"
                        - "MD-SO"
                        - "MD-SV"
                        - "MD-SN"
                        - "MD-ST"
                        - "MD-TA"
                        - "MD-TE"
                        - "MD-UN"
                        - "ME-01"
                        - "ME-02"
                        - "ME-03"
                        - "ME-04"
                        - "ME-05"
                        - "ME-06"
                        - "ME-07"
                        - "ME-08"
                        - "ME-10"
                        - "ME-12"
                        - "ME-13"
                        - "ME-14"
                        - "ME-15"
                        - "ME-16"
                        - "ME-17"
                        - "ME-19"
                        - "ME-24"
                        - "ME-20"
                        - "ME-21"
                        - "MF-XX-1"
                        - "MG-T"
                        - "MG-D"
                        - "MG-F"
                        - "MG-M"
                        - "MG-A"
                        - "MG-U"
                        - "MH-KWA"
                        - "MH-MAJ"
                        - "MK-802"
                        - "MK-201"
                        - "MK-501"
                        - "MK-401"
                        - "MK-601"
                        - "MK-402"
                        - "MK-602"
                        - "MK-803"
                        - "MK-109"
                        - "MK-814"
                        - "MK-210"
                        - "MK-816"
                        - "MK-303"
                        - "MK-203"
                        - "MK-502"
                        - "MK-406"
                        - "MK-503"
                        - "MK-804"
                        - "MK-405"
                        - "MK-604"
                        - "MK-102"
                        - "MK-807"
                        - "MK-606"
                        - "MK-205"
                        - "MK-104"
                        - "MK-307"
                        - "MK-809"
                        - "MK-206"
                        - "MK-701"
                        - "MK-702"
                        - "MK-505"
                        - "MK-703"
                        - "MK-704"
                        - "MK-105"
                        - "MK-207"
                        - "MK-308"
                        - "MK-607"
                        - "MK-506"
                        - "MK-106"
                        - "MK-507"
                        - "MK-408"
                        - "MK-310"
                        - "MK-208"
                        - "MK-810"
                        - "MK-311"
                        - "MK-508"
                        - "MK-209"
                        - "MK-409"
                        - "MK-705"
                        - "MK-509"
                        - "MK-107"
                        - "MK-811"
                        - "MK-812"
                        - "MK-211"
                        - "MK-312"
                        - "MK-410"
                        - "MK-813"
                        - "MK-108"
                        - "MK-608"
                        - "MK-609"
                        - "MK-403"
                        - "MK-404"
                        - "MK-101"
                        - "MK-301"
                        - "MK-202"
                        - "MK-603"
                        - "MK-806"
                        - "MK-605"
                        - "ML-BKO"
                        - "ML-7"
                        - "ML-1"
                        - "ML-8"
                        - "ML-2"
                        - "ML-5"
                        - "ML-4"
                        - "ML-3"
                        - "ML-6"
                        - "MM-07"
                        - "MM-02"
                        - "MM-14"
                        - "MM-11"
                        - "MM-12"
                        - "MM-13"
                        - "MM-03"
                        - "MM-04"
                        - "MM-15"
                        - "MM-18"
                        - "MM-16"
                        - "MM-01"
                        - "MM-17"
                        - "MM-05"
                        - "MM-06"
                        - "MN-071"
                        - "MN-037"
                        - "MN-061"
                        - "MN-063"
                        - "MN-065"
                        - "MN-043"
                        - "MN-035"
                        - "MN-055"
                        - "MN-049"
                        - "MN-047"
                        - "MN-1"
                        - "MO-XX-1"
                        - "MP-XX-1"
                        - "MQ-XX-1"
                        - "MR-07"
                        - "MR-03"
                        - "MR-05"
                        - "MR-08"
                        - "MR-04"
                        - "MR-10"
                        - "MR-01"
                        - "MR-02"
                        - "MR-12"
                        - "MR-13"
                        - "MR-09"
                        - "MR-11"
                        - "MR-06"
                        - "MS-XX-1"
                        - "MS-XX-2"
                        - "MT-01"
                        - "MT-02"
                        - "MT-03"
                        - "MT-04"
                        - "MT-05"
                        - "MT-06"
                        - "MT-07"
                        - "MT-08"
                        - "MT-09"
                        - "MT-10"
                        - "MT-14"
                        - "MT-15"
                        - "MT-16"
                        - "MT-17"
                        - "MT-11"
                        - "MT-12"
                        - "MT-18"
                        - "MT-19"
                        - "MT-20"
                        - "MT-21"
                        - "MT-22"
                        - "MT-23"
                        - "MT-24"
                        - "MT-25"
                        - "MT-26"
                        - "MT-27"
                        - "MT-28"
                        - "MT-29"
                        - "MT-30"
                        - "MT-31"
                        - "MT-32"
                        - "MT-33"
                        - "MT-34"
                        - "MT-35"
                        - "MT-36"
                        - "MT-37"
                        - "MT-38"
                        - "MT-39"
                        - "MT-40"
                        - "MT-41"
                        - "MT-42"
                        - "MT-43"
                        - "MT-45"
                        - "MT-46"
                        - "MT-49"
                        - "MT-48"
                        - "MT-53"
                        - "MT-51"
                        - "MT-52"
                        - "MT-54"
                        - "MT-55"
                        - "MT-56"
                        - "MT-57"
                        - "MT-58"
                        - "MT-59"
                        - "MT-60"
                        - "MT-61"
                        - "MT-62"
                        - "MT-63"
                        - "MT-64"
                        - "MT-65"
                        - "MT-67"
                        - "MT-68"
                        - "MU-BL"
                        - "MU-FL"
                        - "MU-GP"
                        - "MU-MO"
                        - "MU-PA"
                        - "MU-PW"
                        - "MU-PL"
                        - "MU-RR"
                        - "MU-RO"
                        - "MU-SA"
                        - "MV-01"
                        - "MV-03"
                        - "MV-04"
                        - "MV-05"
                        - "MV-MLE"
                        - "MV-12"
                        - "MV-13"
                        - "MV-00"
                        - "MV-28"
                        - "MV-20"
                        - "MV-25"
                        - "MV-17"
                        - "MW-BA"
                        - "MW-BL"
                        - "MW-CK"
                        - "MW-CR"
                        - "MW-DE"
                        - "MW-DO"
                        - "MW-KR"
                        - "MW-LI"
                        - "MW-MH"
                        - "MW-MG"
                        - "MW-MW"
                        - "MW-MZ"
                        - "MW-NE"
                        - "MW-NK"
                        - "MW-PH"
                        - "MW-SA"
                        - "MW-TH"
                        - "MW-ZO"
                        - "MX-AGU"
                        - "MX-BCN"
                        - "MX-BCS"
                        - "MX-CAM"
                        - "MX-CHP"
                        - "MX-CHH"
                        - "MX-CMX"
                        - "MX-COA"
                        - "MX-COL"
                        - "MX-DUR"
                        - "MX-GUA"
                        - "MX-GRO"
                        - "MX-HID"
                        - "MX-JAL"
                        - "MX-MEX"
                        - "MX-MIC"
                        - "MX-MOR"
                        - "MX-NAY"
                        - "MX-NLE"
                        - "MX-OAX"
                        - "MX-PUE"
                        - "MX-QUE"
                        - "MX-ROO"
                        - "MX-SLP"
                        - "MX-SIN"
                        - "MX-SON"
                        - "MX-TAB"
                        - "MX-TAM"
                        - "MX-TLA"
                        - "MX-VER"
                        - "MX-YUC"
                        - "MX-ZAC"
                        - "MY-01"
                        - "MY-02"
                        - "MY-03"
                        - "MY-04"
                        - "MY-05"
                        - "MY-06"
                        - "MY-08"
                        - "MY-09"
                        - "MY-07"
                        - "MY-12"
                        - "MY-13"
                        - "MY-10"
                        - "MY-11"
                        - "MY-14"
                        - "MY-15"
                        - "MY-16"
                        - "MZ-P"
                        - "MZ-G"
                        - "MZ-I"
                        - "MZ-B"
                        - "MZ-L"
                        - "MZ-N"
                        - "MZ-A"
                        - "MZ-S"
                        - "MZ-T"
                        - "MZ-Q"
                        - "NA-ER"
                        - "NA-HA"
                        - "NA-KA"
                        - "NA-KE"
                        - "NA-KW"
                        - "NA-KH"
                        - "NA-KU"
                        - "NA-OW"
                        - "NA-OH"
                        - "NA-OS"
                        - "NA-ON"
                        - "NA-OT"
                        - "NA-OD"
                        - "NA-CA"
                        - "NC-XX-1"
                        - "NC-XX-2"
                        - "NE-1"
                        - "NE-2"
                        - "NE-3"
                        - "NE-8"
                        - "NE-5"
                        - "NE-6"
                        - "NE-7"
                        - "NF-XX-1"
                        - "NG-AB"
                        - "NG-FC"
                        - "NG-AD"
                        - "NG-AK"
                        - "NG-AN"
                        - "NG-BA"
                        - "NG-BY"
                        - "NG-BE"
                        - "NG-BO"
                        - "NG-CR"
                        - "NG-DE"
                        - "NG-EB"
                        - "NG-ED"
                        - "NG-EK"
                        - "NG-EN"
                        - "NG-GO"
                        - "NG-IM"
                        - "NG-JI"
                        - "NG-KD"
                        - "NG-KN"
                        - "NG-KT"
                        - "NG-KE"
                        - "NG-KO"
                        - "NG-KW"
                        - "NG-LA"
                        - "NG-NA"
                        - "NG-NI"
                        - "NG-OG"
                        - "NG-ON"
                        - "NG-OS"
                        - "NG-OY"
                        - "NG-PL"
                        - "NG-RI"
                        - "NG-SO"
                        - "NG-TA"
                        - "NG-YO"
                        - "NG-ZA"
                        - "NI-BO"
                        - "NI-CA"
                        - "NI-CI"
                        - "NI-CO"
                        - "NI-AN"
                        - "NI-AS"
                        - "NI-ES"
                        - "NI-GR"
                        - "NI-JI"
                        - "NI-LE"
                        - "NI-MD"
                        - "NI-MN"
                        - "NI-MS"
                        - "NI-MT"
                        - "NI-NS"
                        - "NI-SJ"
                        - "NI-RI"
                        - "NL-DR"
                        - "NL-FL"
                        - "NL-FR"
                        - "NL-GE"
                        - "NL-GR"
                        - "NL-LI"
                        - "NL-NB"
                        - "NL-NH"
                        - "NL-OV"
                        - "NL-UT"
                        - "NL-ZE"
                        - "NL-ZH"
                        - "NO-42"
                        - "NO-34"
                        - "NO-15"
                        - "NO-18"
                        - "NO-03"
                        - "NO-11"
                        - "NO-54"
                        - "NO-50"
                        - "NO-38"
                        - "NO-46"
                        - "NO-30"
                        - "NP-BA"
                        - "NP-BH"
                        - "NP-DH"
                        - "NP-GA"
                        - "NP-JA"
                        - "NP-KA"
                        - "NP-KO"
                        - "NP-LU"
                        - "NP-MA"
                        - "NP-ME"
                        - "NP-NA"
                        - "NP-RA"
                        - "NP-SA"
                        - "NP-SE"
                        - "NR-01"
                        - "NR-03"
                        - "NR-14"
                        - "NU-XX-1"
                        - "NZ-AUK"
                        - "NZ-BOP"
                        - "NZ-CAN"
                        - "NZ-CIT"
                        - "NZ-GIS"
                        - "NZ-HKB"
                        - "NZ-MWT"
                        - "NZ-MBH"
                        - "NZ-NSN"
                        - "NZ-NTL"
                        - "NZ-OTA"
                        - "NZ-STL"
                        - "NZ-TKI"
                        - "NZ-TAS"
                        - "NZ-WKO"
                        - "NZ-WGN"
                        - "NZ-WTC"
                        - "OM-DA"
                        - "OM-BU"
                        - "OM-WU"
                        - "OM-ZA"
                        - "OM-BJ"
                        - "OM-SJ"
                        - "OM-MA"
                        - "OM-MU"
                        - "OM-BS"
                        - "OM-SS"
                        - "OM-ZU"
                        - "PA-1"
                        - "PA-4"
                        - "PA-2"
                        - "PA-3"
                        - "PA-5"
                        - "PA-KY"
                        - "PA-6"
                        - "PA-7"
                        - "PA-NB"
                        - "PA-8"
                        - "PA-9"
                        - "PE-AMA"
                        - "PE-ANC"
                        - "PE-APU"
                        - "PE-ARE"
                        - "PE-AYA"
                        - "PE-CAJ"
                        - "PE-CUS"
                        - "PE-CAL"
                        - "PE-HUV"
                        - "PE-HUC"
                        - "PE-ICA"
                        - "PE-JUN"
                        - "PE-LAL"
                        - "PE-LAM"
                        - "PE-LIM"
                        - "PE-LOR"
                        - "PE-MDD"
                        - "PE-MOQ"
                        - "PE-PAS"
                        - "PE-PIU"
                        - "PE-PUN"
                        - "PE-SAM"
                        - "PE-TAC"
                        - "PE-TUM"
                        - "PE-UCA"
                        - "PF-XX-1"
                        - "PF-XX-2"
                        - "PF-XX-3"
                        - "PF-XX-4"
                        - "PF-XX-5"
                        - "PG-NSB"
                        - "PG-CPM"
                        - "PG-CPK"
                        - "PG-EBR"
                        - "PG-EHG"
                        - "PG-ESW"
                        - "PG-MPM"
                        - "PG-MRL"
                        - "PG-MBA"
                        - "PG-MPL"
                        - "PG-NCD"
                        - "PG-SHM"
                        - "PG-WBK"
                        - "PG-SAN"
                        - "PG-WPD"
                        - "PG-WHM"
                        - "PH-ABR"
                        - "PH-AGN"
                        - "PH-AGS"
                        - "PH-AKL"
                        - "PH-ALB"
                        - "PH-ANT"
                        - "PH-APA"
                        - "PH-AUR"
                        - "PH-BAS"
                        - "PH-BAN"
                        - "PH-BTN"
                        - "PH-BTG"
                        - "PH-BEN"
                        - "PH-BIL"
                        - "PH-BOH"
                        - "PH-BUK"
                        - "PH-BUL"
                        - "PH-CAG"
                        - "PH-CAN"
                        - "PH-CAS"
                        - "PH-CAM"
                        - "PH-CAP"
                        - "PH-CAT"
                        - "PH-CAV"
                        - "PH-CEB"
                        - "PH-NCO"
                        - "PH-DAO"
                        - "PH-COM"
                        - "PH-DAV"
                        - "PH-DAS"
                        - "PH-DIN"
                        - "PH-EAS"
                        - "PH-GUI"
                        - "PH-IFU"
                        - "PH-ILN"
                        - "PH-ILS"
                        - "PH-ILI"
                        - "PH-ISA"
                        - "PH-KAL"
                        - "PH-LUN"
                        - "PH-LAG"
                        - "PH-LAN"
                        - "PH-LAS"
                        - "PH-LEY"
                        - "PH-MAG"
                        - "PH-MAD"
                        - "PH-MAS"
                        - "PH-MDC"
                        - "PH-MDR"
                        - "PH-MSC"
                        - "PH-MSR"
                        - "PH-MOU"
                        - "PH-00"
                        - "PH-NEC"
                        - "PH-NER"
                        - "PH-NSA"
                        - "PH-NUE"
                        - "PH-NUV"
                        - "PH-PLW"
                        - "PH-PAM"
                        - "PH-PAN"
                        - "PH-QUE"
                        - "PH-QUI"
                        - "PH-RIZ"
                        - "PH-ROM"
                        - "PH-WSA"
                        - "PH-SAR"
                        - "PH-SIG"
                        - "PH-SOR"
                        - "PH-SCO"
                        - "PH-SLE"
                        - "PH-SUK"
                        - "PH-SLU"
                        - "PH-SUN"
                        - "PH-SUR"
                        - "PH-TAR"
                        - "PH-TAW"
                        - "PH-ZMB"
                        - "PH-ZSI"
                        - "PH-ZAN"
                        - "PH-ZAS"
                        - "PK-JK"
                        - "PK-BA"
                        - "PK-GB"
                        - "PK-IS"
                        - "PK-KP"
                        - "PK-PB"
                        - "PK-SD"
                        - "PL-02"
                        - "PL-04"
                        - "PL-10"
                        - "PL-06"
                        - "PL-08"
                        - "PL-12"
                        - "PL-14"
                        - "PL-16"
                        - "PL-18"
                        - "PL-20"
                        - "PL-22"
                        - "PL-24"
                        - "PL-26"
                        - "PL-28"
                        - "PL-30"
                        - "PL-32"
                        - "PM-XX-1"
                        - "PN-XX-1"
                        - "PR-XX-1"
                        - "PR-XX-2"
                        - "PR-XX-3"
                        - "PR-XX-4"
                        - "PR-XX-5"
                        - "PR-XX-6"
                        - "PR-XX-7"
                        - "PR-XX-8"
                        - "PR-XX-9"
                        - "PR-XX-10"
                        - "PR-XX-11"
                        - "PR-XX-12"
                        - "PR-XX-13"
                        - "PR-XX-14"
                        - "PR-XX-15"
                        - "PR-XX-16"
                        - "PR-XX-17"
                        - "PR-XX-18"
                        - "PR-XX-19"
                        - "PR-XX-20"
                        - "PR-XX-21"
                        - "PR-XX-22"
                        - "PR-XX-23"
                        - "PR-XX-24"
                        - "PR-XX-25"
                        - "PR-XX-26"
                        - "PR-XX-27"
                        - "PR-XX-28"
                        - "PR-XX-29"
                        - "PR-XX-30"
                        - "PR-XX-31"
                        - "PR-XX-32"
                        - "PR-XX-33"
                        - "PR-XX-34"
                        - "PR-XX-35"
                        - "PR-XX-36"
                        - "PR-XX-37"
                        - "PR-XX-38"
                        - "PR-XX-39"
                        - "PR-XX-40"
                        - "PR-XX-41"
                        - "PR-XX-42"
                        - "PR-XX-43"
                        - "PR-XX-44"
                        - "PR-XX-45"
                        - "PR-XX-46"
                        - "PR-XX-47"
                        - "PR-XX-48"
                        - "PR-XX-49"
                        - "PR-XX-50"
                        - "PR-XX-51"
                        - "PR-XX-52"
                        - "PR-XX-53"
                        - "PR-XX-54"
                        - "PR-XX-55"
                        - "PR-XX-56"
                        - "PR-XX-57"
                        - "PR-XX-58"
                        - "PR-XX-59"
                        - "PR-XX-60"
                        - "PR-XX-61"
                        - "PR-XX-62"
                        - "PR-XX-63"
                        - "PR-XX-64"
                        - "PR-XX-65"
                        - "PR-XX-66"
                        - "PR-XX-67"
                        - "PR-XX-68"
                        - "PR-XX-69"
                        - "PR-XX-70"
                        - "PR-XX-71"
                        - "PR-XX-72"
                        - "PR-XX-73"
                        - "PR-XX-74"
                        - "PR-XX-75"
                        - "PR-XX-76"
                        - "PS-BTH"
                        - "PS-DEB"
                        - "PS-GZA"
                        - "PS-HBN"
                        - "PS-JEN"
                        - "PS-JRH"
                        - "PS-JEM"
                        - "PS-KYS"
                        - "PS-NBS"
                        - "PS-QQA"
                        - "PS-RFH"
                        - "PS-RBH"
                        - "PS-SLT"
                        - "PS-TBS"
                        - "PS-TKM"
                        - "PT-01"
                        - "PT-02"
                        - "PT-03"
                        - "PT-04"
                        - "PT-05"
                        - "PT-06"
                        - "PT-07"
                        - "PT-08"
                        - "PT-09"
                        - "PT-10"
                        - "PT-11"
                        - "PT-12"
                        - "PT-13"
                        - "PT-30"
                        - "PT-20"
                        - "PT-14"
                        - "PT-15"
                        - "PT-16"
                        - "PT-17"
                        - "PT-18"
                        - "PW-004"
                        - "PW-100"
                        - "PW-150"
                        - "PW-212"
                        - "PW-214"
                        - "PW-222"
                        - "PY-10"
                        - "PY-13"
                        - "PY-ASU"
                        - "PY-19"
                        - "PY-5"
                        - "PY-6"
                        - "PY-14"
                        - "PY-11"
                        - "PY-1"
                        - "PY-3"
                        - "PY-4"
                        - "PY-7"
                        - "PY-8"
                        - "PY-12"
                        - "PY-9"
                        - "PY-15"
                        - "PY-2"
                        - "QA-DA"
                        - "QA-KH"
                        - "QA-WA"
                        - "QA-RA"
                        - "QA-MS"
                        - "QA-ZA"
                        - "QA-US"
                        - "RE-XX-1"
                        - "RO-AB"
                        - "RO-AR"
                        - "RO-AG"
                        - "RO-BC"
                        - "RO-BH"
                        - "RO-BN"
                        - "RO-BT"
                        - "RO-BR"
                        - "RO-BV"
                        - "RO-B"
                        - "RO-BZ"
                        - "RO-CL"
                        - "RO-CS"
                        - "RO-CJ"
                        - "RO-CT"
                        - "RO-CV"
                        - "RO-DB"
                        - "RO-DJ"
                        - "RO-GL"
                        - "RO-GR"
                        - "RO-GJ"
                        - "RO-HR"
                        - "RO-HD"
                        - "RO-IL"
                        - "RO-IS"
                        - "RO-IF"
                        - "RO-MM"
                        - "RO-MH"
                        - "RO-MS"
                        - "RO-NT"
                        - "RO-OT"
                        - "RO-PH"
                        - "RO-SJ"
                        - "RO-SM"
                        - "RO-SB"
                        - "RO-SV"
                        - "RO-TR"
                        - "RO-TM"
                        - "RO-TL"
                        - "RO-VL"
                        - "RO-VS"
                        - "RO-VN"
                        - "RS-00"
                        - "RS-14"
                        - "RS-11"
                        - "RS-23"
                        - "RS-06"
                        - "RS-04"
                        - "RS-09"
                        - "RS-28"
                        - "RS-08"
                        - "RS-17"
                        - "RS-20"
                        - "RS-24"
                        - "RS-26"
                        - "RS-22"
                        - "RS-10"
                        - "RS-13"
                        - "RS-27"
                        - "RS-19"
                        - "RS-18"
                        - "RS-01"
                        - "RS-03"
                        - "RS-02"
                        - "RS-07"
                        - "RS-12"
                        - "RS-21"
                        - "RS-15"
                        - "RS-05"
                        - "RS-16"
                        - "RU-AD"
                        - "RU-AL"
                        - "RU-ALT"
                        - "RU-AMU"
                        - "RU-ARK"
                        - "RU-AST"
                        - "RU-BA"
                        - "RU-BEL"
                        - "RU-BRY"
                        - "RU-BU"
                        - "RU-CE"
                        - "RU-CHE"
                        - "RU-CHU"
                        - "RU-CU"
                        - "RU-DA"
                        - "RU-IN"
                        - "RU-IRK"
                        - "RU-IVA"
                        - "RU-KB"
                        - "RU-KGD"
                        - "RU-KL"
                        - "RU-KLU"
                        - "RU-KAM"
                        - "RU-KC"
                        - "RU-KR"
                        - "RU-KEM"
                        - "RU-KHA"
                        - "RU-KK"
                        - "RU-KHM"
                        - "RU-KIR"
                        - "RU-KO"
                        - "RU-KOS"
                        - "RU-KDA"
                        - "RU-KYA"
                        - "RU-KGN"
                        - "RU-KRS"
                        - "RU-LEN"
                        - "RU-LIP"
                        - "RU-MAG"
                        - "RU-ME"
                        - "RU-MO"
                        - "RU-MOS"
                        - "RU-MOW"
                        - "RU-MUR"
                        - "RU-NEN"
                        - "RU-NIZ"
                        - "RU-NGR"
                        - "RU-NVS"
                        - "RU-OMS"
                        - "RU-ORE"
                        - "RU-ORL"
                        - "RU-PNZ"
                        - "RU-PER"
                        - "RU-PRI"
                        - "RU-PSK"
                        - "RU-ROS"
                        - "RU-RYA"
                        - "RU-SA"
                        - "RU-SAK"
                        - "RU-SAM"
                        - "RU-SPE"
                        - "RU-SAR"
                        - "RU-SE"
                        - "RU-SMO"
                        - "RU-STA"
                        - "RU-SVE"
                        - "RU-TAM"
                        - "RU-TA"
                        - "RU-TOM"
                        - "RU-TUL"
                        - "RU-TVE"
                        - "RU-TYU"
                        - "RU-TY"
                        - "RU-UD"
                        - "RU-ULY"
                        - "RU-VLA"
                        - "RU-VGG"
                        - "RU-VLG"
                        - "RU-VOR"
                        - "RU-YAN"
                        - "RU-YAR"
                        - "RU-YEV"
                        - "RU-ZAB"
                        - "RW-02"
                        - "RW-03"
                        - "RW-04"
                        - "RW-05"
                        - "RW-01"
                        - "SA-14"
                        - "SA-11"
                        - "SA-08"
                        - "SA-12"
                        - "SA-03"
                        - "SA-05"
                        - "SA-01"
                        - "SA-04"
                        - "SA-06"
                        - "SA-09"
                        - "SA-02"
                        - "SA-10"
                        - "SA-07"
                        - "SB-CH"
                        - "SB-GU"
                        - "SB-WE"
                        - "SC-02"
                        - "SC-05"
                        - "SC-01"
                        - "SC-06"
                        - "SC-07"
                        - "SC-08"
                        - "SC-10"
                        - "SC-11"
                        - "SC-16"
                        - "SC-13"
                        - "SC-14"
                        - "SC-15"
                        - "SC-20"
                        - "SC-23"
                        - "SD-NB"
                        - "SD-DC"
                        - "SD-GD"
                        - "SD-GZ"
                        - "SD-KA"
                        - "SD-KH"
                        - "SD-DN"
                        - "SD-KN"
                        - "SD-NO"
                        - "SD-RS"
                        - "SD-NR"
                        - "SD-SI"
                        - "SD-DS"
                        - "SD-KS"
                        - "SD-DW"
                        - "SD-GK"
                        - "SD-NW"
                        - "SE-K"
                        - "SE-W"
                        - "SE-X"
                        - "SE-I"
                        - "SE-N"
                        - "SE-Z"
                        - "SE-F"
                        - "SE-H"
                        - "SE-G"
                        - "SE-BD"
                        - "SE-T"
                        - "SE-E"
                        - "SE-M"
                        - "SE-D"
                        - "SE-AB"
                        - "SE-C"
                        - "SE-S"
                        - "SE-AC"
                        - "SE-Y"
                        - "SE-U"
                        - "SE-O"
                        - "SG-XX-1"
                        - "SH-HL"
                        - "SI-001"
                        - "SI-213"
                        - "SI-195"
                        - "SI-002"
                        - "SI-148"
                        - "SI-149"
                        - "SI-003"
                        - "SI-150"
                        - "SI-004"
                        - "SI-005"
                        - "SI-006"
                        - "SI-151"
                        - "SI-007"
                        - "SI-009"
                        - "SI-008"
                        - "SI-152"
                        - "SI-011"
                        - "SI-012"
                        - "SI-013"
                        - "SI-014"
                        - "SI-196"
                        - "SI-015"
                        - "SI-017"
                        - "SI-018"
                        - "SI-019"
                        - "SI-154"
                        - "SI-020"
                        - "SI-155"
                        - "SI-021"
                        - "SI-156"
                        - "SI-023"
                        - "SI-024"
                        - "SI-025"
                        - "SI-026"
                        - "SI-207"
                        - "SI-029"
                        - "SI-031"
                        - "SI-158"
                        - "SI-032"
                        - "SI-159"
                        - "SI-160"
                        - "SI-161"
                        - "SI-162"
                        - "SI-034"
                        - "SI-035"
                        - "SI-036"
                        - "SI-037"
                        - "SI-038"
                        - "SI-039"
                        - "SI-040"
                        - "SI-041"
                        - "SI-042"
                        - "SI-043"
                        - "SI-044"
                        - "SI-045"
                        - "SI-046"
                        - "SI-047"
                        - "SI-048"
                        - "SI-049"
                        - "SI-164"
                        - "SI-050"
                        - "SI-197"
                        - "SI-165"
                        - "SI-052"
                        - "SI-053"
                        - "SI-166"
                        - "SI-054"
                        - "SI-055"
                        - "SI-056"
                        - "SI-057"
                        - "SI-058"
                        - "SI-059"
                        - "SI-060"
                        - "SI-061"
                        - "SI-063"
                        - "SI-208"
                        - "SI-064"
                        - "SI-065"
                        - "SI-066"
                        - "SI-167"
                        - "SI-067"
                        - "SI-068"
                        - "SI-069"
                        - "SI-198"
                        - "SI-070"
                        - "SI-168"
                        - "SI-071"
                        - "SI-072"
                        - "SI-073"
                        - "SI-074"
                        - "SI-169"
                        - "SI-075"
                        - "SI-212"
                        - "SI-170"
                        - "SI-076"
                        - "SI-199"
                        - "SI-077"
                        - "SI-079"
                        - "SI-080"
                        - "SI-081"
                        - "SI-082"
                        - "SI-083"
                        - "SI-084"
                        - "SI-085"
                        - "SI-086"
                        - "SI-171"
                        - "SI-087"
                        - "SI-090"
                        - "SI-091"
                        - "SI-092"
                        - "SI-172"
                        - "SI-200"
                        - "SI-173"
                        - "SI-094"
                        - "SI-174"
                        - "SI-095"
                        - "SI-175"
                        - "SI-096"
                        - "SI-097"
                        - "SI-098"
                        - "SI-099"
                        - "SI-100"
                        - "SI-101"
                        - "SI-102"
                        - "SI-103"
                        - "SI-176"
                        - "SI-209"
                        - "SI-201"
                        - "SI-104"
                        - "SI-106"
                        - "SI-105"
                        - "SI-108"
                        - "SI-033"
                        - "SI-109"
                        - "SI-183"
                        - "SI-117"
                        - "SI-118"
                        - "SI-119"
                        - "SI-120"
                        - "SI-211"
                        - "SI-110"
                        - "SI-111"
                        - "SI-121"
                        - "SI-122"
                        - "SI-123"
                        - "SI-112"
                        - "SI-113"
                        - "SI-114"
                        - "SI-124"
                        - "SI-206"
                        - "SI-125"
                        - "SI-194"
                        - "SI-179"
                        - "SI-180"
                        - "SI-126"
                        - "SI-115"
                        - "SI-127"
                        - "SI-203"
                        - "SI-204"
                        - "SI-182"
                        - "SI-116"
                        - "SI-210"
                        - "SI-205"
                        - "SI-184"
                        - "SI-010"
                        - "SI-128"
                        - "SI-129"
                        - "SI-130"
                        - "SI-185"
                        - "SI-131"
                        - "SI-186"
                        - "SI-132"
                        - "SI-133"
                        - "SI-187"
                        - "SI-134"
                        - "SI-188"
                        - "SI-135"
                        - "SI-136"
                        - "SI-137"
                        - "SI-138"
                        - "SI-139"
                        - "SI-189"
                        - "SI-140"
                        - "SI-141"
                        - "SI-142"
                        - "SI-190"
                        - "SI-143"
                        - "SI-146"
                        - "SI-191"
                        - "SI-147"
                        - "SI-144"
                        - "SI-193"
                        - "SJ-XX-1"
                        - "SK-BC"
                        - "SK-BL"
                        - "SK-KI"
                        - "SK-NI"
                        - "SK-PV"
                        - "SK-TC"
                        - "SK-TA"
                        - "SK-ZI"
                        - "SL-E"
                        - "SL-N"
                        - "SL-S"
                        - "SL-W"
                        - "SM-07"
                        - "SM-03"
                        - "SM-04"
                        - "SM-09"
                        - "SN-DK"
                        - "SN-DB"
                        - "SN-FK"
                        - "SN-KA"
                        - "SN-KL"
                        - "SN-KE"
                        - "SN-KD"
                        - "SN-LG"
                        - "SN-MT"
                        - "SN-SL"
                        - "SN-SE"
                        - "SN-TC"
                        - "SN-TH"
                        - "SN-ZG"
                        - "SO-AW"
                        - "SO-BN"
                        - "SO-BR"
                        - "SO-GA"
                        - "SO-JH"
                        - "SO-MU"
                        - "SO-NU"
                        - "SO-SH"
                        - "SO-TO"
                        - "SO-WO"
                        - "SR-BR"
                        - "SR-CM"
                        - "SR-NI"
                        - "SR-PR"
                        - "SR-PM"
                        - "SR-SI"
                        - "SR-WA"
                        - "SS-EC"
                        - "SS-EE"
                        - "SS-JG"
                        - "SS-LK"
                        - "SS-BN"
                        - "SS-NU"
                        - "SS-EW"
                        - "ST-01"
                        - "SV-AH"
                        - "SV-CA"
                        - "SV-CH"
                        - "SV-CU"
                        - "SV-LI"
                        - "SV-PA"
                        - "SV-UN"
                        - "SV-MO"
                        - "SV-SM"
                        - "SV-SS"
                        - "SV-SV"
                        - "SV-SA"
                        - "SV-SO"
                        - "SV-US"
                        - "SX-XX-1"
                        - "SY-HA"
                        - "SY-LA"
                        - "SY-QU"
                        - "SY-RA"
                        - "SY-SU"
                        - "SY-DR"
                        - "SY-DY"
                        - "SY-DI"
                        - "SY-HL"
                        - "SY-HM"
                        - "SY-HI"
                        - "SY-ID"
                        - "SY-RD"
                        - "SY-TA"
                        - "SZ-HH"
                        - "SZ-LU"
                        - "SZ-MA"
                        - "TC-XX-1"
                        - "TD-BG"
                        - "TD-CB"
                        - "TD-GR"
                        - "TD-LO"
                        - "TD-ME"
                        - "TD-OD"
                        - "TD-ND"
                        - "TF-XX-1"
                        - "TG-C"
                        - "TG-K"
                        - "TG-M"
                        - "TG-P"
                        - "TH-37"
                        - "TH-15"
                        - "TH-38"
                        - "TH-31"
                        - "TH-24"
                        - "TH-18"
                        - "TH-36"
                        - "TH-22"
                        - "TH-50"
                        - "TH-57"
                        - "TH-20"
                        - "TH-86"
                        - "TH-46"
                        - "TH-62"
                        - "TH-71"
                        - "TH-40"
                        - "TH-81"
                        - "TH-10"
                        - "TH-52"
                        - "TH-51"
                        - "TH-42"
                        - "TH-16"
                        - "TH-58"
                        - "TH-44"
                        - "TH-49"
                        - "TH-26"
                        - "TH-73"
                        - "TH-48"
                        - "TH-30"
                        - "TH-60"
                        - "TH-80"
                        - "TH-55"
                        - "TH-96"
                        - "TH-39"
                        - "TH-43"
                        - "TH-12"
                        - "TH-13"
                        - "TH-94"
                        - "TH-82"
                        - "TH-93"
                        - "TH-56"
                        - "TH-67"
                        - "TH-76"
                        - "TH-66"
                        - "TH-65"
                        - "TH-14"
                        - "TH-54"
                        - "TH-83"
                        - "TH-25"
                        - "TH-77"
                        - "TH-85"
                        - "TH-70"
                        - "TH-21"
                        - "TH-45"
                        - "TH-27"
                        - "TH-47"
                        - "TH-11"
                        - "TH-74"
                        - "TH-75"
                        - "TH-19"
                        - "TH-91"
                        - "TH-33"
                        - "TH-17"
                        - "TH-90"
                        - "TH-64"
                        - "TH-72"
                        - "TH-84"
                        - "TH-32"
                        - "TH-63"
                        - "TH-92"
                        - "TH-23"
                        - "TH-34"
                        - "TH-41"
                        - "TH-61"
                        - "TH-53"
                        - "TH-95"
                        - "TH-35"
                        - "TJ-DU"
                        - "TJ-KT"
                        - "TJ-RA"
                        - "TJ-SU"
                        - "TK-XX-1"
                        - "TL-AN"
                        - "TL-BO"
                        - "TL-CO"
                        - "TL-DI"
                        - "TL-LI"
                        - "TM-A"
                        - "TM-B"
                        - "TM-D"
                        - "TM-L"
                        - "TM-M"
                        - "TN-31"
                        - "TN-13"
                        - "TN-23"
                        - "TN-81"
                        - "TN-71"
                        - "TN-32"
                        - "TN-41"
                        - "TN-42"
                        - "TN-73"
                        - "TN-12"
                        - "TN-14"
                        - "TN-33"
                        - "TN-53"
                        - "TN-82"
                        - "TN-52"
                        - "TN-21"
                        - "TN-61"
                        - "TN-43"
                        - "TN-34"
                        - "TN-51"
                        - "TN-83"
                        - "TN-72"
                        - "TN-11"
                        - "TN-22"
                        - "TO-02"
                        - "TO-03"
                        - "TO-04"
                        - "TR-01"
                        - "TR-02"
                        - "TR-03"
                        - "TR-04"
                        - "TR-68"
                        - "TR-05"
                        - "TR-06"
                        - "TR-07"
                        - "TR-75"
                        - "TR-08"
                        - "TR-09"
                        - "TR-10"
                        - "TR-74"
                        - "TR-72"
                        - "TR-69"
                        - "TR-11"
                        - "TR-12"
                        - "TR-13"
                        - "TR-14"
                        - "TR-15"
                        - "TR-16"
                        - "TR-17"
                        - "TR-18"
                        - "TR-19"
                        - "TR-20"
                        - "TR-21"
                        - "TR-81"
                        - "TR-22"
                        - "TR-23"
                        - "TR-24"
                        - "TR-25"
                        - "TR-26"
                        - "TR-27"
                        - "TR-28"
                        - "TR-29"
                        - "TR-30"
                        - "TR-31"
                        - "TR-76"
                        - "TR-32"
                        - "TR-34"
                        - "TR-35"
                        - "TR-46"
                        - "TR-78"
                        - "TR-70"
                        - "TR-36"
                        - "TR-37"
                        - "TR-38"
                        - "TR-79"
                        - "TR-71"
                        - "TR-39"
                        - "TR-40"
                        - "TR-41"
                        - "TR-42"
                        - "TR-43"
                        - "TR-44"
                        - "TR-45"
                        - "TR-47"
                        - "TR-33"
                        - "TR-48"
                        - "TR-49"
                        - "TR-50"
                        - "TR-51"
                        - "TR-52"
                        - "TR-80"
                        - "TR-53"
                        - "TR-54"
                        - "TR-55"
                        - "TR-63"
                        - "TR-56"
                        - "TR-57"
                        - "TR-73"
                        - "TR-58"
                        - "TR-59"
                        - "TR-60"
                        - "TR-61"
                        - "TR-62"
                        - "TR-64"
                        - "TR-65"
                        - "TR-77"
                        - "TR-66"
                        - "TR-67"
                        - "TT-ARI"
                        - "TT-CHA"
                        - "TT-CTT"
                        - "TT-DMN"
                        - "TT-MRC"
                        - "TT-PED"
                        - "TT-PTF"
                        - "TT-POS"
                        - "TT-PRT"
                        - "TT-SFO"
                        - "TT-SJL"
                        - "TT-SGE"
                        - "TT-SIP"
                        - "TT-TOB"
                        - "TT-TUP"
                        - "TV-FUN"
                        - "TW-CHA"
                        - "TW-CYQ"
                        - "TW-HSQ"
                        - "TW-HUA"
                        - "TW-KHH"
                        - "TW-KEE"
                        - "TW-KIN"
                        - "TW-LIE"
                        - "TW-MIA"
                        - "TW-NAN"
                        - "TW-NWT"
                        - "TW-PEN"
                        - "TW-PIF"
                        - "TW-TXG"
                        - "TW-TNN"
                        - "TW-TPE"
                        - "TW-TTT"
                        - "TW-TAO"
                        - "TW-ILA"
                        - "TW-YUN"
                        - "TZ-01"
                        - "TZ-02"
                        - "TZ-03"
                        - "TZ-27"
                        - "TZ-04"
                        - "TZ-05"
                        - "TZ-06"
                        - "TZ-07"
                        - "TZ-28"
                        - "TZ-08"
                        - "TZ-09"
                        - "TZ-11"
                        - "TZ-12"
                        - "TZ-26"
                        - "TZ-13"
                        - "TZ-14"
                        - "TZ-15"
                        - "TZ-16"
                        - "TZ-17"
                        - "TZ-18"
                        - "TZ-29"
                        - "TZ-19"
                        - "TZ-20"
                        - "TZ-21"
                        - "TZ-22"
                        - "TZ-30"
                        - "TZ-23"
                        - "TZ-31"
                        - "TZ-24"
                        - "TZ-25"
                        - "UA-43"
                        - "UA-71"
                        - "UA-74"
                        - "UA-77"
                        - "UA-12"
                        - "UA-14"
                        - "UA-26"
                        - "UA-63"
                        - "UA-65"
                        - "UA-68"
                        - "UA-35"
                        - "UA-30"
                        - "UA-32"
                        - "UA-09"
                        - "UA-46"
                        - "UA-48"
                        - "UA-51"
                        - "UA-53"
                        - "UA-56"
                        - "UA-40"
                        - "UA-59"
                        - "UA-61"
                        - "UA-05"
                        - "UA-07"
                        - "UA-21"
                        - "UA-23"
                        - "UA-18"
                        - "UG-314"
                        - "UG-301"
                        - "UG-322"
                        - "UG-323"
                        - "UG-315"
                        - "UG-324"
                        - "UG-216"
                        - "UG-316"
                        - "UG-302"
                        - "UG-303"
                        - "UG-217"
                        - "UG-218"
                        - "UG-201"
                        - "UG-420"
                        - "UG-117"
                        - "UG-219"
                        - "UG-118"
                        - "UG-220"
                        - "UG-225"
                        - "UG-401"
                        - "UG-402"
                        - "UG-202"
                        - "UG-221"
                        - "UG-120"
                        - "UG-226"
                        - "UG-317"
                        - "UG-121"
                        - "UG-304"
                        - "UG-403"
                        - "UG-417"
                        - "UG-203"
                        - "UG-418"
                        - "UG-204"
                        - "UG-318"
                        - "UG-404"
                        - "UG-405"
                        - "UG-213"
                        - "UG-101"
                        - "UG-222"
                        - "UG-122"
                        - "UG-102"
                        - "UG-205"
                        - "UG-413"
                        - "UG-206"
                        - "UG-406"
                        - "UG-207"
                        - "UG-112"
                        - "UG-407"
                        - "UG-103"
                        - "UG-227"
                        - "UG-419"
                        - "UG-421"
                        - "UG-408"
                        - "UG-305"
                        - "UG-319"
                        - "UG-306"
                        - "UG-208"
                        - "UG-228"
                        - "UG-123"
                        - "UG-422"
                        - "UG-415"
                        - "UG-326"
                        - "UG-307"
                        - "UG-229"
                        - "UG-104"
                        - "UG-124"
                        - "UG-114"
                        - "UG-223"
                        - "UG-105"
                        - "UG-409"
                        - "UG-214"
                        - "UG-209"
                        - "UG-410"
                        - "UG-423"
                        - "UG-115"
                        - "UG-308"
                        - "UG-309"
                        - "UG-106"
                        - "UG-107"
                        - "UG-108"
                        - "UG-311"
                        - "UG-116"
                        - "UG-109"
                        - "UG-230"
                        - "UG-224"
                        - "UG-327"
                        - "UG-310"
                        - "UG-231"
                        - "UG-411"
                        - "UG-328"
                        - "UG-321"
                        - "UG-312"
                        - "UG-210"
                        - "UG-110"
                        - "UG-425"
                        - "UG-412"
                        - "UG-111"
                        - "UG-232"
                        - "UG-426"
                        - "UG-215"
                        - "UG-211"
                        - "UG-212"
                        - "UG-113"
                        - "UG-313"
                        - "UG-330"
                        - "UM-95"
                        - "US-AL"
                        - "US-AK"
                        - "US-AZ"
                        - "US-AR"
                        - "US-CA"
                        - "US-CO"
                        - "US-CT"
                        - "US-DE"
                        - "US-DC"
                        - "US-FL"
                        - "US-GA"
                        - "US-HI"
                        - "US-ID"
                        - "US-IL"
                        - "US-IN"
                        - "US-IA"
                        - "US-KS"
                        - "US-KY"
                        - "US-LA"
                        - "US-ME"
                        - "US-MD"
                        - "US-MA"
                        - "US-MI"
                        - "US-MN"
                        - "US-MS"
                        - "US-MO"
                        - "US-MT"
                        - "US-NE"
                        - "US-NV"
                        - "US-NH"
                        - "US-NJ"
                        - "US-NM"
                        - "US-NY"
                        - "US-NC"
                        - "US-ND"
                        - "US-OH"
                        - "US-OK"
                        - "US-OR"
                        - "US-PA"
                        - "US-RI"
                        - "US-SC"
                        - "US-SD"
                        - "US-TN"
                        - "US-TX"
                        - "US-UT"
                        - "US-VT"
                        - "US-VA"
                        - "US-WA"
                        - "US-WV"
                        - "US-WI"
                        - "US-WY"
                        - "UY-AR"
                        - "UY-CA"
                        - "UY-CL"
                        - "UY-CO"
                        - "UY-DU"
                        - "UY-FS"
                        - "UY-FD"
                        - "UY-LA"
                        - "UY-MA"
                        - "UY-MO"
                        - "UY-PA"
                        - "UY-RN"
                        - "UY-RV"
                        - "UY-RO"
                        - "UY-SA"
                        - "UY-SJ"
                        - "UY-SO"
                        - "UY-TA"
                        - "UY-TT"
                        - "UZ-AN"
                        - "UZ-BU"
                        - "UZ-FA"
                        - "UZ-JI"
                        - "UZ-NG"
                        - "UZ-NW"
                        - "UZ-QA"
                        - "UZ-QR"
                        - "UZ-SA"
                        - "UZ-SI"
                        - "UZ-SU"
                        - "UZ-TK"
                        - "UZ-XO"
                        - "VA-XX-1"
                        - "VC-01"
                        - "VC-06"
                        - "VC-04"
                        - "VC-05"
                        - "VE-Z"
                        - "VE-B"
                        - "VE-C"
                        - "VE-D"
                        - "VE-E"
                        - "VE-F"
                        - "VE-G"
                        - "VE-H"
                        - "VE-Y"
                        - "VE-A"
                        - "VE-I"
                        - "VE-J"
                        - "VE-X"
                        - "VE-K"
                        - "VE-L"
                        - "VE-M"
                        - "VE-N"
                        - "VE-O"
                        - "VE-P"
                        - "VE-R"
                        - "VE-S"
                        - "VE-T"
                        - "VE-U"
                        - "VE-V"
                        - "VG-XX-1"
                        - "VI-XX-1"
                        - "VN-44"
                        - "VN-43"
                        - "VN-54"
                        - "VN-53"
                        - "VN-55"
                        - "VN-56"
                        - "VN-50"
                        - "VN-31"
                        - "VN-57"
                        - "VN-58"
                        - "VN-40"
                        - "VN-59"
                        - "VN-CT"
                        - "VN-04"
                        - "VN-DN"
                        - "VN-33"
                        - "VN-72"
                        - "VN-71"
                        - "VN-39"
                        - "VN-45"
                        - "VN-30"
                        - "VN-03"
                        - "VN-63"
                        - "VN-HN"
                        - "VN-23"
                        - "VN-61"
                        - "VN-HP"
                        - "VN-73"
                        - "VN-SG"
                        - "VN-14"
                        - "VN-66"
                        - "VN-34"
                        - "VN-47"
                        - "VN-28"
                        - "VN-01"
                        - "VN-35"
                        - "VN-09"
                        - "VN-02"
                        - "VN-41"
                        - "VN-67"
                        - "VN-22"
                        - "VN-18"
                        - "VN-36"
                        - "VN-68"
                        - "VN-32"
                        - "VN-24"
                        - "VN-27"
                        - "VN-29"
                        - "VN-13"
                        - "VN-25"
                        - "VN-52"
                        - "VN-05"
                        - "VN-37"
                        - "VN-20"
                        - "VN-69"
                        - "VN-21"
                        - "VN-26"
                        - "VN-46"
                        - "VN-51"
                        - "VN-07"
                        - "VN-49"
                        - "VN-70"
                        - "VN-06"
                        - "VU-SEE"
                        - "VU-TAE"
                        - "VU-TOB"
                        - "WF-SG"
                        - "WF-UV"
                        - "WS-AT"
                        - "WS-FA"
                        - "WS-TU"
                        - "YE-AD"
                        - "YE-AM"
                        - "YE-AB"
                        - "YE-DA"
                        - "YE-BA"
                        - "YE-HU"
                        - "YE-SA"
                        - "YE-DH"
                        - "YE-HD"
                        - "YE-HJ"
                        - "YE-IB"
                        - "YE-LA"
                        - "YE-MA"
                        - "YE-SD"
                        - "YE-SN"
                        - "YE-SH"
                        - "YE-TA"
                        - "YT-XX-1"
                        - "YT-XX-2"
                        - "YT-XX-3"
                        - "YT-XX-4"
                        - "YT-XX-5"
                        - "YT-XX-6"
                        - "ZA-EC"
                        - "ZA-FS"
                        - "ZA-GP"
                        - "ZA-KZN"
                        - "ZA-LP"
                        - "ZA-MP"
                        - "ZA-NW"
                        - "ZA-NC"
                        - "ZA-WC"
                        - "ZM-02"
                        - "ZM-08"
                        - "ZM-03"
                        - "ZM-04"
                        - "ZM-09"
                        - "ZM-10"
                        - "ZM-06"
                        - "ZM-05"
                        - "ZM-07"
                        - "ZM-01"
                        - "ZW-BU"
                        - "ZW-HA"
                        - "ZW-MA"
                        - "ZW-MC"
                        - "ZW-ME"
                        - "ZW-MW"
                        - "ZW-MV"
                        - "ZW-MN"
                        - "ZW-MS"
                        - "ZW-MI"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        HrisLocationsCreateRequestDto:
            type: "object"
            properties:
                "name":
                    type: "string"
                    description: "The name of the location"
                    nullable: true
                    example: "Woolsthorpe Manor"
                "phone_number":
                    type: "string"
                    description: "The phone number of the location"
                    nullable: true
                    example: "+44 1476 860 364"
                "street_1":
                    type: "string"
                    description: "The first line of the address"
                    nullable: true
                    example: "Water Lane"
                "street_2":
                    type: "string"
                    description: "The second line of the address"
                    nullable: true
                    example: "Woolsthorpe by Colsterworth"
                "city":
                    type: "string"
                    description: "The city where the location is situated"
                    nullable: true
                    example: "Grantham"
                "zip_code":
                    type: "string"
                    description: "The ZIP code/Postal code of the location"
                    nullable: true
                    example: "NG33 5NR"
                "country":
                    allOf:
                        - {"$ref": "#/components/schemas/CountryCodeEnum"}
                    description: "The country code"
                    nullable: true
                "state":
                    allOf:
                        - {"$ref": "#/components/schemas/ISO3166_2SubDivisionEnum"}
                    description: "The ISO3166-2 sub division where the location is situated"
                    nullable: true
                    example: "GB-LIN"
        HrisCreateEmployeeRequestDto:
            type: "object"
            properties:
                "first_name":
                    type: "string"
                    description: "The employee first name"
                    nullable: true
                    example: "Issac"
                "last_name":
                    type: "string"
                    description: "The employee last name"
                    nullable: true
                    example: "Newton"
                "name":
                    type: "string"
                    description: "The employee name"
                    nullable: true
                    example: "Issac Newton"
                "display_name":
                    type: "string"
                    description: "The employee display name"
                    nullable: true
                    example: "Sir Issac Newton"
                "avatar_url":
                    type: "string"
                    description: "The employee avatar Url"
                    nullable: true
                    example: "https://example.com/avatar.png"
                "personal_email":
                    type: "string"
                    description: "The employee personal email"
                    nullable: true
                    example: "isaac.newton@example.com"
                "personal_phone_number":
                    type: "string"
                    description: "The employee personal phone number"
                    nullable: true
                    example: "+1234567890"
                "work_email":
                    type: "string"
                    description: "The employee work email"
                    nullable: true
                    example: "newton@example.com"
                "work_phone_number":
                    type: "string"
                    description: "The employee work phone number"
                    nullable: true
                    example: "+1234567890"
                "job_title":
                    type: "string"
                    description: "The employee job title"
                    nullable: true
                    example: "Physicist"
                "department":
                    type: "string"
                    description: "The employee department"
                    nullable: true
                    example: "Physics"
                "manager_id":
                    type: "string"
                    description: "The employee manager ID"
                    nullable: true
                    example: "67890"
                "gender":
                    allOf:
                        - {"$ref": "#/components/schemas/GenderEnum"}
                    description: "The employee gender"
                    nullable: true
                    example: "male"
                "preferred_language":
                    allOf:
                        - {"$ref": "#/components/schemas/PreferredLanguageEnum"}
                    description: "The employee preferred language"
                    nullable: true
                    example: "en_US"
                "ethnicity":
                    allOf:
                        - {"$ref": "#/components/schemas/EthnicityEnum"}
                    description: "The employee ethnicity"
                    nullable: true
                    example: "white"
                "date_of_birth":
                    type: "string"
                    format: "date-time"
                    description: "The employee date_of_birth"
                    nullable: true
                    example: "1990-01-01T00:00.000Z"
                "birthday":
                    type: "string"
                    format: "date-time"
                    description: "The employee birthday"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
                "marital_status":
                    allOf:
                        - {"$ref": "#/components/schemas/MaritalStatusEnum"}
                    description: "The employee marital status"
                    nullable: true
                    example: "single"
                "avatar":
                    allOf:
                        - {"$ref": "#/components/schemas/Image"}
                    description: "The employee avatar"
                    nullable: true
                    example: "https://example.com/avatar.png"
                "hire_date":
                    type: "string"
                    format: "date-time"
                    description: "The employee hire date"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "start_date":
                    type: "string"
                    format: "date-time"
                    description: "The employee start date"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "tenure":
                    type: "number"
                    description: "The employee tenure"
                    nullable: true
                    example: 2
                "work_anniversary":
                    type: "string"
                    format: "date-time"
                    description: "The employee work anniversary"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
                "employment_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentTypeEnum"}
                    description: "The employee employment type"
                    nullable: true
                    example: "full_time"
                "employment_contract_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentScheduleTypeEnum"}
                    description: "The employment work schedule type (e.g., full-time, part-time)"
                    nullable: true
                    example: "full_time"
                "employment_status":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentStatusEnum"}
                    description: "The employee employment status"
                    nullable: true
                    example: "active"
                "termination_date":
                    type: "string"
                    format: "date-time"
                    description: "The employee termination date"
                    nullable: true
                    example: "2021-01-01T00:00:00Z"
                "company_name":
                    type: "string"
                    description: "The employee company name"
                    nullable: true
                    example: "Example Corp"
                "citizenships":
                    type: "array"
                    items: {"$ref": "#/components/schemas/CountryCodeEnum"}
                    description: "The citizenships of the Employee"
                    nullable: true
                "employments":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Employment"}
                    description: "The employee employments"
                    nullable: true
                "custom_fields":
                    type: "array"
                    items: {"$ref": "#/components/schemas/EmployeeCustomFields"}
                    description: "The employee custom fields"
                    nullable: true
                "benefits":
                    type: "array"
                    items: {"$ref": "#/components/schemas/HRISBenefit"}
                    description: "Current benefits of the employee"
                    nullable: true
                "home_location":
                    allOf:
                        - {"$ref": "#/components/schemas/HrisLocationsCreateRequestDto"}
                    description: "The employee home location"
                    nullable: true
                "work_location":
                    allOf:
                        - {"$ref": "#/components/schemas/HrisLocationsCreateRequestDto"}
                    description: "The employee work location"
                    nullable: true
        CreateEmployeeResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                "message":
                    type: "string"
                    nullable: true
                "timestamp":
                    type: "string"
                    format: "date-time"
                    example: "2021-01-01T01:01:01.000Z"
            required:
                - "statusCode"
                - "timestamp"
        TimeOffStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "approved"
                        - "cancelled"
                        - "rejected"
                        - "pending"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        TimeOffTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "sick"
                        - "unmapped_value"
                        - "vacation"
                        - "long_term_disability"
                        - "short_term_disability"
                        - "absent"
                        - "comp_time"
                        - "training"
                        - "annual_leave"
                        - "leave_of_absence"
                        - "child_care_leave"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        TimeOff:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "employee_id":
                    type: "string"
                    description: "The employee ID"
                    nullable: true
                    example: "1687-3"
                "approver_id":
                    type: "string"
                    description: "The approver ID"
                    nullable: true
                    example: "1687-4"
                "status":
                    allOf:
                        - {"$ref": "#/components/schemas/TimeOffStatusEnum"}
                    description: "The status of the time off request"
                    nullable: true
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/TimeOffTypeEnum"}
                    description: "The type of the time off request"
                    nullable: true
                "start_date":
                    type: "string"
                    format: "date-time"
                    description: "The start date of the time off request"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "end_date":
                    type: "string"
                    format: "date-time"
                    description: "The end date of the time off request"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "created_date":
                    type: "string"
                    format: "date-time"
                    description: "The created date of the time off request"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_date":
                    type: "string"
                    format: "date-time"
                    description: "The updated date of the time off request"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        TimeOffPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/TimeOff"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        TimeOffResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/TimeOff"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        HrisCreateTimeOffRequestDto:
            type: "object"
            properties:
                "employee_id":
                    type: "string"
                    description: "The employee ID"
                    nullable: true
                    example: "1687-3"
                "approver_id":
                    type: "string"
                    description: "The approver ID"
                    nullable: true
                    example: "1687-4"
                "status":
                    allOf:
                        - {"$ref": "#/components/schemas/TimeOffStatusEnum"}
                    description: "The status of the time off request"
                    nullable: true
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/TimeOffTypeEnum"}
                    description: "The type of the time off request"
                    nullable: true
                "start_date":
                    type: "string"
                    format: "date-time"
                    description: "The start date of the time off request"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "end_date":
                    type: "string"
                    format: "date-time"
                    description: "The end date of the time off request"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        CreateTimeOffResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                    nullable: true
                "message":
                    type: "string"
                    nullable: true
                "timestamp":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        FileFormatEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "unmapped_value"
                        - "ez"
                        - "aw"
                        - "atom"
                        - "atomcat"
                        - "atomdeleted"
                        - "atomsvc"
                        - "dwd"
                        - "held"
                        - "rsat"
                        - "bdoc"
                        - "xcs"
                        - "ccxml"
                        - "cdfx"
                        - "cdmia"
                        - "cdmic"
                        - "cdmid"
                        - "cdmio"
                        - "cdmiq"
                        - "cu"
                        - "mpd"
                        - "davmount"
                        - "dbk"
                        - "dssc"
                        - "xdssc"
                        - "es"
                        - "ecma"
                        - "emma"
                        - "emotionml"
                        - "epub"
                        - "exi"
                        - "exp"
                        - "fdt"
                        - "pfr"
                        - "geojson"
                        - "gml"
                        - "gpx"
                        - "gxf"
                        - "gz"
                        - "hjson"
                        - "stk"
                        - "ink"
                        - "inkml"
                        - "ipfix"
                        - "its"
                        - "jar"
                        - "war"
                        - "ear"
                        - "ser"
                        - "class"
                        - "js"
                        - "mjs"
                        - "json"
                        - "map"
                        - "json5"
                        - "jsonml"
                        - "jsonld"
                        - "lgr"
                        - "lostxml"
                        - "hqx"
                        - "cpt"
                        - "mads"
                        - "webmanifest"
                        - "mrc"
                        - "mrcx"
                        - "ma"
                        - "nb"
                        - "mb"
                        - "mathml"
                        - "mbox"
                        - "mscml"
                        - "metalink"
                        - "meta4"
                        - "mets"
                        - "maei"
                        - "musd"
                        - "mods"
                        - "m21"
                        - "mp21"
                        - "mp4s"
                        - "m4p"
                        - "doc"
                        - "dot"
                        - "mxf"
                        - "nq"
                        - "nt"
                        - "cjs"
                        - "bin"
                        - "dms"
                        - "lrf"
                        - "mar"
                        - "so"
                        - "dist"
                        - "distz"
                        - "pkg"
                        - "bpk"
                        - "dump"
                        - "elc"
                        - "deploy"
                        - "exe"
                        - "dll"
                        - "deb"
                        - "dmg"
                        - "iso"
                        - "img"
                        - "msi"
                        - "msp"
                        - "msm"
                        - "buffer"
                        - "oda"
                        - "opf"
                        - "ogx"
                        - "omdoc"
                        - "onetoc"
                        - "onetoc2"
                        - "onetmp"
                        - "onepkg"
                        - "oxps"
                        - "relo"
                        - "xer"
                        - "pdf"
                        - "pgp"
                        - "asc"
                        - "sig"
                        - "prf"
                        - "p10"
                        - "p7m"
                        - "p7c"
                        - "p7s"
                        - "p8"
                        - "ac"
                        - "cer"
                        - "crl"
                        - "pkipath"
                        - "pki"
                        - "pls"
                        - "ai"
                        - "eps"
                        - "ps"
                        - "provx"
                        - "pskcxml"
                        - "raml"
                        - "rdf"
                        - "owl"
                        - "rif"
                        - "rnc"
                        - "rl"
                        - "rld"
                        - "rs"
                        - "rapd"
                        - "sls"
                        - "rusd"
                        - "gbr"
                        - "mft"
                        - "roa"
                        - "rsd"
                        - "rss"
                        - "rtf"
                        - "sbml"
                        - "scq"
                        - "scs"
                        - "spq"
                        - "spp"
                        - "sdp"
                        - "senmlx"
                        - "sensmlx"
                        - "setpay"
                        - "setreg"
                        - "shf"
                        - "siv"
                        - "sieve"
                        - "smi"
                        - "smil"
                        - "rq"
                        - "srx"
                        - "gram"
                        - "grxml"
                        - "sru"
                        - "ssdl"
                        - "ssml"
                        - "swidtag"
                        - "tei"
                        - "teicorpus"
                        - "tfi"
                        - "tsd"
                        - "toml"
                        - "trig"
                        - "ttml"
                        - "ubj"
                        - "rsheet"
                        - "td"
                        - "vxml"
                        - "wasm"
                        - "wgt"
                        - "hlp"
                        - "wsdl"
                        - "wspolicy"
                        - "xaml"
                        - "xav"
                        - "xca"
                        - "xdf"
                        - "xel"
                        - "xns"
                        - "xenc"
                        - "xhtml"
                        - "xht"
                        - "xlf"
                        - "xml"
                        - "xsl"
                        - "xsd"
                        - "rng"
                        - "dtd"
                        - "xop"
                        - "xpl"
                        - "*xsl"
                        - "xslt"
                        - "xspf"
                        - "mxml"
                        - "xhvml"
                        - "xvml"
                        - "xvm"
                        - "yang"
                        - "yin"
                        - "zip"
                        - "*3gpp"
                        - "adp"
                        - "amr"
                        - "au"
                        - "snd"
                        - "mid"
                        - "midi"
                        - "kar"
                        - "rmi"
                        - "mxmf"
                        - "*mp3"
                        - "m4a"
                        - "mp4a"
                        - "mpga"
                        - "mp2"
                        - "mp2a"
                        - "mp3"
                        - "m2a"
                        - "m3a"
                        - "oga"
                        - "ogg"
                        - "spx"
                        - "opus"
                        - "s3m"
                        - "sil"
                        - "wav"
                        - "*wav"
                        - "weba"
                        - "xm"
                        - "ttc"
                        - "otf"
                        - "ttf"
                        - "woff"
                        - "woff2"
                        - "exr"
                        - "apng"
                        - "avif"
                        - "bmp"
                        - "cgm"
                        - "drle"
                        - "emf"
                        - "fits"
                        - "g3"
                        - "gif"
                        - "heic"
                        - "heics"
                        - "heif"
                        - "heifs"
                        - "hej2"
                        - "hsj2"
                        - "ief"
                        - "jls"
                        - "jp2"
                        - "jpg2"
                        - "jpeg"
                        - "jpg"
                        - "jpe"
                        - "jph"
                        - "jhc"
                        - "jpm"
                        - "jpx"
                        - "jpf"
                        - "jxr"
                        - "jxra"
                        - "jxrs"
                        - "jxs"
                        - "jxsc"
                        - "jxsi"
                        - "jxss"
                        - "ktx"
                        - "ktx2"
                        - "png"
                        - "sgi"
                        - "svg"
                        - "svgz"
                        - "t38"
                        - "tif"
                        - "tiff"
                        - "tfx"
                        - "webp"
                        - "wmf"
                        - "disposition-notification"
                        - "u8msg"
                        - "u8dsn"
                        - "u8mdn"
                        - "u8hdr"
                        - "eml"
                        - "mime"
                        - "3mf"
                        - "gltf"
                        - "glb"
                        - "igs"
                        - "iges"
                        - "msh"
                        - "mesh"
                        - "silo"
                        - "mtl"
                        - "obj"
                        - "stpx"
                        - "stpz"
                        - "stpxz"
                        - "stl"
                        - "wrl"
                        - "vrml"
                        - "*x3db"
                        - "x3dbz"
                        - "x3db"
                        - "*x3dv"
                        - "x3dvz"
                        - "x3d"
                        - "x3dz"
                        - "x3dv"
                        - "appcache"
                        - "manifest"
                        - "ics"
                        - "ifb"
                        - "coffee"
                        - "litcoffee"
                        - "css"
                        - "csv"
                        - "html"
                        - "htm"
                        - "shtml"
                        - "jade"
                        - "jsx"
                        - "less"
                        - "markdown"
                        - "md"
                        - "mml"
                        - "mdx"
                        - "n3"
                        - "txt"
                        - "text"
                        - "conf"
                        - "def"
                        - "list"
                        - "log"
                        - "in"
                        - "ini"
                        - "rtx"
                        - "*rtf"
                        - "sgml"
                        - "sgm"
                        - "shex"
                        - "slim"
                        - "slm"
                        - "spdx"
                        - "stylus"
                        - "styl"
                        - "tsv"
                        - "t"
                        - "tr"
                        - "roff"
                        - "man"
                        - "me"
                        - "ms"
                        - "ttl"
                        - "uri"
                        - "uris"
                        - "urls"
                        - "vcard"
                        - "vtt"
                        - "*xml"
                        - "yaml"
                        - "yml"
                        - "3gp"
                        - "3gpp"
                        - "3g2"
                        - "h261"
                        - "h263"
                        - "h264"
                        - "m4s"
                        - "jpgv"
                        - "*jpm"
                        - "jpgm"
                        - "mj2"
                        - "mjp2"
                        - "ts"
                        - "mp4"
                        - "mp4v"
                        - "mpg4"
                        - "mpeg"
                        - "mpg"
                        - "mpe"
                        - "m1v"
                        - "m2v"
                        - "ogv"
                        - "qt"
                        - "mov"
                        - "webm"
                        - "cww"
                        - "1km"
                        - "plb"
                        - "psb"
                        - "pvb"
                        - "tcap"
                        - "pwn"
                        - "aso"
                        - "imp"
                        - "acu"
                        - "atc"
                        - "acutc"
                        - "air"
                        - "fcdt"
                        - "fxp"
                        - "fxpl"
                        - "xdp"
                        - "xfdf"
                        - "ahead"
                        - "azf"
                        - "azs"
                        - "azw"
                        - "acc"
                        - "ami"
                        - "apk"
                        - "cii"
                        - "fti"
                        - "atx"
                        - "mpkg"
                        - "key"
                        - "m3u8"
                        - "numbers"
                        - "pages"
                        - "pkpass"
                        - "swi"
                        - "iota"
                        - "aep"
                        - "bmml"
                        - "mpm"
                        - "bmi"
                        - "rep"
                        - "cdxml"
                        - "mmd"
                        - "cdy"
                        - "csl"
                        - "cla"
                        - "rp9"
                        - "c4g"
                        - "c4d"
                        - "c4f"
                        - "c4p"
                        - "c4u"
                        - "c11amc"
                        - "c11amz"
                        - "csp"
                        - "cdbcmsg"
                        - "cmc"
                        - "clkx"
                        - "clkk"
                        - "clkp"
                        - "clkt"
                        - "clkw"
                        - "wbs"
                        - "pml"
                        - "ppd"
                        - "car"
                        - "pcurl"
                        - "dart"
                        - "rdz"
                        - "dbf"
                        - "uvf"
                        - "uvvf"
                        - "uvd"
                        - "uvvd"
                        - "uvt"
                        - "uvvt"
                        - "uvx"
                        - "uvvx"
                        - "uvz"
                        - "uvvz"
                        - "fe_launch"
                        - "dna"
                        - "mlp"
                        - "dpg"
                        - "dfac"
                        - "kpxx"
                        - "ait"
                        - "svc"
                        - "geo"
                        - "mag"
                        - "nml"
                        - "esf"
                        - "msf"
                        - "qam"
                        - "slt"
                        - "ssf"
                        - "es3"
                        - "et3"
                        - "ez2"
                        - "ez3"
                        - "fdf"
                        - "mseed"
                        - "seed"
                        - "dataless"
                        - "gph"
                        - "ftc"
                        - "fm"
                        - "frame"
                        - "maker"
                        - "book"
                        - "fnc"
                        - "ltf"
                        - "fsc"
                        - "oas"
                        - "oa2"
                        - "oa3"
                        - "fg5"
                        - "bh2"
                        - "ddd"
                        - "xdw"
                        - "xbd"
                        - "fzs"
                        - "txd"
                        - "ggb"
                        - "ggt"
                        - "gex"
                        - "gre"
                        - "gxt"
                        - "g2w"
                        - "g3w"
                        - "gmx"
                        - "gdoc"
                        - "gslides"
                        - "gsheet"
                        - "kml"
                        - "kmz"
                        - "gqf"
                        - "gqs"
                        - "gac"
                        - "ghf"
                        - "gim"
                        - "grv"
                        - "gtm"
                        - "tpl"
                        - "vcg"
                        - "hal"
                        - "zmm"
                        - "hbci"
                        - "les"
                        - "hpgl"
                        - "hpid"
                        - "hps"
                        - "jlt"
                        - "pcl"
                        - "pclxl"
                        - "sfd-hdstx"
                        - "mpy"
                        - "afp"
                        - "listafp"
                        - "list3820"
                        - "irm"
                        - "sc"
                        - "icc"
                        - "icm"
                        - "igl"
                        - "ivp"
                        - "ivu"
                        - "igm"
                        - "xpw"
                        - "xpx"
                        - "i2g"
                        - "qbo"
                        - "qfx"
                        - "rcprofile"
                        - "irp"
                        - "xpr"
                        - "fcs"
                        - "jam"
                        - "rms"
                        - "jisp"
                        - "joda"
                        - "ktz"
                        - "ktr"
                        - "karbon"
                        - "chrt"
                        - "kfo"
                        - "flw"
                        - "kon"
                        - "kpr"
                        - "kpt"
                        - "ksp"
                        - "kwd"
                        - "kwt"
                        - "htke"
                        - "kia"
                        - "kne"
                        - "knp"
                        - "skp"
                        - "skd"
                        - "skt"
                        - "skm"
                        - "sse"
                        - "lasxml"
                        - "lbd"
                        - "lbe"
                        - "apr"
                        - "pre"
                        - "nsf"
                        - "org"
                        - "scm"
                        - "lwp"
                        - "portpkg"
                        - "mvt"
                        - "mcd"
                        - "mc1"
                        - "cdkey"
                        - "mwf"
                        - "mfm"
                        - "flo"
                        - "igx"
                        - "mif"
                        - "daf"
                        - "dis"
                        - "mbk"
                        - "mqy"
                        - "msl"
                        - "plc"
                        - "txf"
                        - "mpn"
                        - "mpc"
                        - "xul"
                        - "cil"
                        - "cab"
                        - "xls"
                        - "xlm"
                        - "xla"
                        - "xlc"
                        - "xlt"
                        - "xlw"
                        - "xlam"
                        - "xlsb"
                        - "xlsm"
                        - "xltm"
                        - "eot"
                        - "chm"
                        - "ims"
                        - "lrm"
                        - "thmx"
                        - "msg"
                        - "cat"
                        - "*stl"
                        - "ppt"
                        - "pps"
                        - "pot"
                        - "ppam"
                        - "pptm"
                        - "sldm"
                        - "ppsm"
                        - "potm"
                        - "mpp"
                        - "mpt"
                        - "docm"
                        - "dotm"
                        - "wps"
                        - "wks"
                        - "wcm"
                        - "wdb"
                        - "wpl"
                        - "xps"
                        - "mseq"
                        - "mus"
                        - "msty"
                        - "taglet"
                        - "nlu"
                        - "ntf"
                        - "nitf"
                        - "nnd"
                        - "nns"
                        - "nnw"
                        - "*ac"
                        - "ngdat"
                        - "n-gage"
                        - "rpst"
                        - "rpss"
                        - "edm"
                        - "edx"
                        - "ext"
                        - "odc"
                        - "otc"
                        - "odb"
                        - "odf"
                        - "odft"
                        - "odg"
                        - "otg"
                        - "odi"
                        - "oti"
                        - "odp"
                        - "otp"
                        - "ods"
                        - "ots"
                        - "odt"
                        - "odm"
                        - "ott"
                        - "oth"
                        - "xo"
                        - "dd2"
                        - "obgx"
                        - "oxt"
                        - "osm"
                        - "pptx"
                        - "sldx"
                        - "ppsx"
                        - "potx"
                        - "xlsx"
                        - "xltx"
                        - "docx"
                        - "dotx"
                        - "mgp"
                        - "dp"
                        - "esa"
                        - "pdb"
                        - "pqa"
                        - "oprc"
                        - "paw"
                        - "str"
                        - "ei6"
                        - "efif"
                        - "wg"
                        - "plf"
                        - "pbd"
                        - "box"
                        - "mgz"
                        - "qps"
                        - "ptid"
                        - "qxd"
                        - "qxt"
                        - "qwd"
                        - "qwt"
                        - "qxl"
                        - "qxb"
                        - "rar"
                        - "bed"
                        - "mxl"
                        - "musicxml"
                        - "cryptonote"
                        - "cod"
                        - "rm"
                        - "rmvb"
                        - "link66"
                        - "st"
                        - "see"
                        - "sema"
                        - "semd"
                        - "semf"
                        - "ifm"
                        - "itp"
                        - "iif"
                        - "ipk"
                        - "twd"
                        - "twds"
                        - "mmf"
                        - "teacher"
                        - "fo"
                        - "sdkm"
                        - "sdkd"
                        - "dxp"
                        - "sfs"
                        - "sdc"
                        - "sda"
                        - "sdd"
                        - "smf"
                        - "sdw"
                        - "vor"
                        - "sgl"
                        - "smzip"
                        - "sm"
                        - "wadl"
                        - "sxc"
                        - "stc"
                        - "sxd"
                        - "std"
                        - "sxi"
                        - "sti"
                        - "sxm"
                        - "sxw"
                        - "sxg"
                        - "stw"
                        - "sus"
                        - "susp"
                        - "svd"
                        - "sis"
                        - "sisx"
                        - "xsm"
                        - "bdm"
                        - "xdm"
                        - "ddf"
                        - "tao"
                        - "pcap"
                        - "cap"
                        - "dmp"
                        - "tmo"
                        - "tpt"
                        - "mxs"
                        - "tra"
                        - "ufd"
                        - "ufdl"
                        - "utz"
                        - "umj"
                        - "unityweb"
                        - "uoml"
                        - "vcx"
                        - "vsd"
                        - "vst"
                        - "vss"
                        - "vsw"
                        - "vis"
                        - "vsf"
                        - "wbxml"
                        - "wmlc"
                        - "wmlsc"
                        - "wtb"
                        - "nbp"
                        - "wpd"
                        - "wqd"
                        - "stf"
                        - "xar"
                        - "xfdl"
                        - "hvd"
                        - "hvs"
                        - "hvp"
                        - "osf"
                        - "osfpvg"
                        - "saf"
                        - "spf"
                        - "cmp"
                        - "zir"
                        - "zirz"
                        - "zaz"
                        - "7z"
                        - "abw"
                        - "ace"
                        - "*dmg"
                        - "arj"
                        - "aab"
                        - "x32"
                        - "u32"
                        - "vox"
                        - "aam"
                        - "aas"
                        - "bcpio"
                        - "*bdoc"
                        - "torrent"
                        - "blb"
                        - "blorb"
                        - "bz"
                        - "bz2"
                        - "boz"
                        - "cbr"
                        - "cba"
                        - "cbt"
                        - "cbz"
                        - "cb7"
                        - "vcd"
                        - "cfs"
                        - "chat"
                        - "pgn"
                        - "crx"
                        - "cco"
                        - "nsc"
                        - "cpio"
                        - "csh"
                        - "*deb"
                        - "udeb"
                        - "dgc"
                        - "dir"
                        - "dcr"
                        - "dxr"
                        - "cst"
                        - "cct"
                        - "cxt"
                        - "w3d"
                        - "fgd"
                        - "swa"
                        - "wad"
                        - "ncx"
                        - "dtb"
                        - "res"
                        - "dvi"
                        - "evy"
                        - "eva"
                        - "bdf"
                        - "gsf"
                        - "psf"
                        - "pcf"
                        - "snf"
                        - "pfa"
                        - "pfb"
                        - "pfm"
                        - "afm"
                        - "arc"
                        - "spl"
                        - "gca"
                        - "ulx"
                        - "gnumeric"
                        - "gramps"
                        - "gtar"
                        - "hdf"
                        - "php"
                        - "install"
                        - "*iso"
                        - "*key"
                        - "*numbers"
                        - "*pages"
                        - "jardiff"
                        - "jnlp"
                        - "kdbx"
                        - "latex"
                        - "luac"
                        - "lzh"
                        - "lha"
                        - "run"
                        - "mie"
                        - "prc"
                        - "mobi"
                        - "application"
                        - "lnk"
                        - "wmd"
                        - "wmz"
                        - "xbap"
                        - "mdb"
                        - "obd"
                        - "crd"
                        - "clp"
                        - "*exe"
                        - "*dll"
                        - "com"
                        - "bat"
                        - "*msi"
                        - "mvb"
                        - "m13"
                        - "m14"
                        - "*wmf"
                        - "*wmz"
                        - "*emf"
                        - "emz"
                        - "mny"
                        - "pub"
                        - "scd"
                        - "trm"
                        - "wri"
                        - "nc"
                        - "cdf"
                        - "pac"
                        - "nzb"
                        - "pl"
                        - "pm"
                        - "*prc"
                        - "*pdb"
                        - "p12"
                        - "pfx"
                        - "p7b"
                        - "spc"
                        - "p7r"
                        - "*rar"
                        - "rpm"
                        - "ris"
                        - "sea"
                        - "sh"
                        - "shar"
                        - "swf"
                        - "xap"
                        - "sql"
                        - "sit"
                        - "sitx"
                        - "srt"
                        - "sv4cpio"
                        - "sv4crc"
                        - "t3"
                        - "gam"
                        - "tar"
                        - "tcl"
                        - "tk"
                        - "tex"
                        - "tfm"
                        - "texinfo"
                        - "texi"
                        - "*obj"
                        - "ustar"
                        - "hdd"
                        - "ova"
                        - "ovf"
                        - "vbox"
                        - "vbox-extpack"
                        - "vdi"
                        - "vhd"
                        - "vmdk"
                        - "src"
                        - "webapp"
                        - "der"
                        - "crt"
                        - "pem"
                        - "fig"
                        - "*xlf"
                        - "xpi"
                        - "xz"
                        - "z1"
                        - "z2"
                        - "z3"
                        - "z4"
                        - "z5"
                        - "z6"
                        - "z7"
                        - "z8"
                        - "uva"
                        - "uvva"
                        - "eol"
                        - "dra"
                        - "dts"
                        - "dtshd"
                        - "lvp"
                        - "pya"
                        - "ecelp4800"
                        - "ecelp7470"
                        - "ecelp9600"
                        - "rip"
                        - "aac"
                        - "aif"
                        - "aiff"
                        - "aifc"
                        - "caf"
                        - "flac"
                        - "*m4a"
                        - "mka"
                        - "m3u"
                        - "wax"
                        - "wma"
                        - "ram"
                        - "ra"
                        - "rmp"
                        - "*ra"
                        - "cdx"
                        - "cif"
                        - "cmdf"
                        - "cml"
                        - "csml"
                        - "xyz"
                        - "btif"
                        - "pti"
                        - "psd"
                        - "azv"
                        - "uvi"
                        - "uvvi"
                        - "uvg"
                        - "uvvg"
                        - "djvu"
                        - "djv"
                        - "*sub"
                        - "dwg"
                        - "dxf"
                        - "fbs"
                        - "fpx"
                        - "fst"
                        - "mmr"
                        - "rlc"
                        - "ico"
                        - "dds"
                        - "mdi"
                        - "wdp"
                        - "npx"
                        - "b16"
                        - "tap"
                        - "vtf"
                        - "wbmp"
                        - "xif"
                        - "pcx"
                        - "3ds"
                        - "ras"
                        - "cmx"
                        - "fh"
                        - "fhc"
                        - "fh4"
                        - "fh5"
                        - "fh7"
                        - "*ico"
                        - "jng"
                        - "sid"
                        - "*bmp"
                        - "*pcx"
                        - "pic"
                        - "pct"
                        - "pnm"
                        - "pbm"
                        - "pgm"
                        - "ppm"
                        - "rgb"
                        - "tga"
                        - "xbm"
                        - "xpm"
                        - "xwd"
                        - "wsc"
                        - "dae"
                        - "dwf"
                        - "gdl"
                        - "gtw"
                        - "mts"
                        - "ogex"
                        - "x_b"
                        - "x_t"
                        - "vds"
                        - "usdz"
                        - "bsp"
                        - "vtu"
                        - "dsc"
                        - "curl"
                        - "dcurl"
                        - "mcurl"
                        - "scurl"
                        - "sub"
                        - "fly"
                        - "flx"
                        - "gv"
                        - "3dml"
                        - "spot"
                        - "jad"
                        - "wml"
                        - "wmls"
                        - "s"
                        - "asm"
                        - "c"
                        - "cc"
                        - "cxx"
                        - "cpp"
                        - "h"
                        - "hh"
                        - "dic"
                        - "htc"
                        - "f"
                        - "for"
                        - "f77"
                        - "f90"
                        - "hbs"
                        - "java"
                        - "lua"
                        - "mkd"
                        - "nfo"
                        - "opml"
                        - "*org"
                        - "p"
                        - "pas"
                        - "pde"
                        - "sass"
                        - "scss"
                        - "etx"
                        - "sfv"
                        - "ymp"
                        - "uu"
                        - "vcs"
                        - "vcf"
                        - "uvh"
                        - "uvvh"
                        - "uvm"
                        - "uvvm"
                        - "uvp"
                        - "uvvp"
                        - "uvs"
                        - "uvvs"
                        - "uvv"
                        - "uvvv"
                        - "dvb"
                        - "fvt"
                        - "mxu"
                        - "m4u"
                        - "pyv"
                        - "uvu"
                        - "uvvu"
                        - "viv"
                        - "f4v"
                        - "fli"
                        - "flv"
                        - "m4v"
                        - "mkv"
                        - "mk3d"
                        - "mks"
                        - "mng"
                        - "asf"
                        - "asx"
                        - "vob"
                        - "wm"
                        - "wmv"
                        - "wmx"
                        - "wvx"
                        - "avi"
                        - "movie"
                        - "smv"
                        - "ice"
                    nullable: true
                    example: "pdf"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
                    example: "abc"
        ConfidentialEnumApiModel:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "true"
                        - "false"
                    nullable: true
                    example: "true"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
                    example: "public"
        UnifiedUploadRequestDto:
            type: "object"
            properties:
                "page":
                    type: "string"
                    description: "The page number of the results to fetch"
                    nullable: true
                    deprecated: true
                "page_size":
                    type: "string"
                    description: "The number of results per page"
                    default: "25"
                    nullable: true
                "next":
                    type: "string"
                    description: "The unified cursor"
                    nullable: true
                "raw":
                    type: "boolean"
                    description: "Indicates that the raw request result is returned"
                    default: false
                    nullable: true
                "fields":
                    type: "string"
                    description: "The comma separated list of fields to return in the response (if empty, all fields are returned)"
                    nullable: true
                "updated_after":
                    type: "string"
                    description: "Use a string with a date to only select results updated after that given date"
                    nullable: true
                    example: "2020-01-01T00:00:00.000Z"
                "proxy":
                    type: "object"
                    additionalProperties: true
                    description: "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key"
                    nullable: true
                "name":
                    type: "string"
                    description: "The filename of the file to upload"
                    nullable: true
                    example: "weather-forecast"
                "file_format":
                    allOf:
                        - {"$ref": "#/components/schemas/FileFormatEnum"}
                    description: "The file format of the file"
                    nullable: true
                "content":
                    type: "string"
                    description: "The base64 encoded content of the file to upload"
                    nullable: true
                    example: "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE"
                "path":
                    type: "string"
                    description: "The location, category or path for the file to be uploaded to"
                    nullable: true
                    example: "reports or /path/to/file"
                "confidential":
                    allOf:
                        - {"$ref": "#/components/schemas/ConfidentialEnumApiModel"}
                    description: "The confidentiality level of the file to be uploaded"
                    nullable: true
        Content:
            type: "object"
            properties:
                "url":
                    type: "string"
                    description: "URL where the file content is located"
                    nullable: true
                    example: "https://example.com/file.pdf"
                "unified_url":
                    type: "string"
                    description: "Unified URL where the file content is located"
                    nullable: true
                    example: "/unified/hris/employees/16022323/documents/79715678/download"
                "file_format":
                    allOf:
                        - {"$ref": "#/components/schemas/FileFormatEnum"}
                    description: "The file format of the file"
                    nullable: true
        DocumentTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "resume"
                        - "avatar"
                        - "cover_letter"
                        - "profile_picture"
                        - "passport"
                        - "take_home_test"
                        - "offer_letter"
                        - "signed_offer_letter"
                        - "offer_packet"
                        - "other"
                        - "unmapped_value"
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        DocumentApiModel:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the file"
                    nullable: true
                    example: "My Document"
                "path":
                    type: "string"
                    description: "The path where the file is stored"
                    nullable: true
                    example: "/path/to/file"
                "contents":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Content"}
                    description: "The content of the file"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The creation date of the file"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The update date of the file"
                    nullable: true
                    example: "2021-01-02T01:01:01.000Z"
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/DocumentTypeEnum"}
                    description: "The content type of the document"
                    nullable: true
        DocumentsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/DocumentApiModel"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        DocumentResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/DocumentApiModel"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        HrisCreateDocumentRequestDto:
            type: "object"
            properties:
                "name":
                    type: "string"
                    description: "The name of the file"
                    example: "My Document"
                "path":
                    type: "string"
                    description: "The path where the file is stored"
                    nullable: true
                    example: "/path/to/file"
                "content":
                    allOf:
                        - {"$ref": "#/components/schemas/Content"}
                    description: "The content of the file"
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/DocumentTypeEnum"}
                    description: "The content type of the document"
                    nullable: true
            required:
                - "name"
                - "content"
        CreateDocumentResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                    nullable: true
                    example: 201
                "message":
                    type: "string"
                    nullable: true
                "timestamp":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        WorkEligibilityTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "visa"
                        - "passport"
                        - "driver_license"
                        - "birth_certificate"
                        - "other"
                    nullable: true
                "source_type":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        File:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the file"
                    nullable: true
                    example: "My Document"
                "path":
                    type: "string"
                    description: "The path where the file is stored"
                    nullable: true
                    example: "/path/to/file"
                "contents":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Content"}
                    description: "The content of the file"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The creation date of the file"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The update date of the file"
                    nullable: true
                    example: "2021-01-02T01:01:01.000Z"
        WorkEligibility:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/WorkEligibilityTypeEnum"}
                    nullable: true
                    example: "visa"
                "sub_type":
                    type: "string"
                    nullable: true
                    example: "H1B"
                "document":
                    allOf:
                        - {"$ref": "#/components/schemas/File"}
                    nullable: true
                "valid_from":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "valid_to":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "issued_by":
                    allOf:
                        - {"$ref": "#/components/schemas/CountryCodeEnum"}
                    description: "The country code of the issued by authority"
                    nullable: true
                "number":
                    type: "string"
                    nullable: true
                    example: "1234567890"
        WorkEligibilityPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/WorkEligibility"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        WorkEligibilityResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/WorkEligibility"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        HrisCreateWorkEligibilityRequestDto:
            type: "object"
            properties:
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/WorkEligibilityTypeEnum"}
                    nullable: true
                    example: "visa"
                "sub_type":
                    type: "string"
                    nullable: true
                    example: "H1B"
                "document":
                    allOf:
                        - {"$ref": "#/components/schemas/File"}
                    nullable: true
                "valid_from":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "valid_to":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "issued_by":
                    allOf:
                        - {"$ref": "#/components/schemas/CountryCodeEnum"}
                    description: "The country code of the issued by authority"
                    nullable: true
                "number":
                    type: "string"
                    nullable: true
                    example: "1234567890"
        CreateWorkEligibilityResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                    nullable: true
                "message":
                    type: "string"
                    nullable: true
                "timestamp":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        EmploymentsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Employment"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        EmploymentResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Employment"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        HRISLocationsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/HRISLocation"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        HRISLocationResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/HRISLocation"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        HRISBenefitsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/HRISBenefit"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        HRISBenefitResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/HRISBenefit"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        InterviewStage:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "order":
                    type: "number"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview Stage created date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview Stage updated date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        RejectedReasonTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "rejected_by_candidate"
                        - "rejected_by_organization"
                        - "other"
                        - "unknown"
                        - "unmapped_value"
                    description: "The type of the rejected reason."
                    nullable: true
                    example: "rejected_by_organization"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the rejected reason type."
                    nullable: true
                    example: "RejectedByOrg"
        RejectedReason:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "label":
                    type: "string"
                    description: "The label of the rejected reason."
                    nullable: true
                    example: "Failed Phone Screen"
                "type":
                    type: "string"
                    description: "The string type of the rejected reason."
                    nullable: true
                    example: "rejected_by_organization"
                "rejected_reason_type":
                    allOf:
                        - {"$ref": "#/components/schemas/RejectedReasonTypeEnum"}
                    nullable: true
        ApplicationStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "active"
                        - "assessment"
                        - "background_check"
                        - "converted"
                        - "declined_by_candidate"
                        - "hired"
                        - "interview"
                        - "lead"
                        - "offer"
                        - "reference_check"
                        - "rejected"
                        - "review"
                        - "screen"
                        - "new"
                        - "unmapped_value"
                    description: "The status of the application."
                    nullable: true
                    example: "hired"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the application status."
                    nullable: true
                    example: "Hired"
        AnswerEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "short_text"
                        - "long_text"
                        - "attachment"
                        - "multi_select"
                        - "single_select"
                        - "boolean"
                        - "number"
                        - "date"
                        - "video"
                    description: "The type of the answer."
                    nullable: true
                    example: "short_text"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the answer type."
                    nullable: true
                    example: "Short Text"
        Answer:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/AnswerEnum"}
                    description: "Type of the answer"
                    nullable: true
                "values":
                    type: "array"
                    items:
                        type: "string"
                    description: "Values of the answer"
                    nullable: true
                    example: ["Yes", "No Travel", "It sounds pretty cool.", "Excel", "Power Point"]
        Questionnaire:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "answers":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Answer"}
                    nullable: true
        ApplicationCandidate:
            type: "object"
            properties:
                "first_name":
                    type: "string"
                    description: "First name of the candidate"
                    nullable: true
                    example: "John"
                "last_name":
                    type: "string"
                    description: "Last name of the candidate"
                    nullable: true
                    example: "Doe"
                "email":
                    type: "string"
                    description: "Email of the candidate"
                    nullable: true
                    example: "john.doe@example.com"
        AttachmentContentType:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "text"
                        - "unmapped_value"
                    description: "The content type of the attachment."
                    nullable: true
                    example: "text"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the content type."
                    nullable: true
                    example: "Text"
        ApplicationAttachment:
            type: "object"
            properties:
                "file_name":
                    type: "string"
                    description: "The file name of the attachment."
                    nullable: true
                    example: "resume.pdf"
                "content":
                    type: "string"
                    description: "The content of the attachment."
                    nullable: true
                    example: "Base64 encoded content"
                "url":
                    type: "string"
                    description: "The URL of the attachment."
                    nullable: true
                    example: "http://example.com/resume.pdf"
                "content_type":
                    allOf:
                        - {"$ref": "#/components/schemas/AttachmentContentType"}
                    nullable: true
        ResultLink:
            type: "object"
            properties:
                "label":
                    type: "string"
                    description: "The label of the result link."
                    nullable: true
                    example: "assessment result link"
                "url":
                    type: "string"
                    description: "The URL of the result link."
                    nullable: true
                    example: "http://example.com/assessment-result/4565765/data"
        Application:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "candidate_id":
                    type: "string"
                    description: "Unique identifier of the candidate"
                    nullable: true
                    example: "e3cb75bf-aa84-466e-a6c1-b8322b257a48"
                "job_id":
                    type: "string"
                    description: "Unique identifier of the job"
                    nullable: true
                    example: "4071538b-3cac-4fbf-ac76-f78ed250ffdd"
                "interview_stage":
                    allOf:
                        - {"$ref": "#/components/schemas/InterviewStage"}
                    nullable: true
                "interview_stage_id":
                    type: "string"
                    description: "Unique identifier of the interview stage"
                    nullable: true
                    example: "18bcbb1b-3cbc-4198-a999-460861d19480"
                "rejected_reasons":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RejectedReason"}
                    nullable: true
                "rejected_reason_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "Unique identifiers of the rejection reasons"
                    nullable: true
                    example: ["f223d7f6-908b-48f0-9237-b201c307f609"]
                "rejected_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of rejection"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "location_id":
                    type: "string"
                    description: "Unique identifier of the location"
                    nullable: true
                    example: "dd8d41d1-5eb8-4408-9c87-9ba44604eae4"
                "location_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "Unique identifiers of the locations"
                    nullable: true
                    example: ["dd8d41d1-5eb8-4408-9c87-9ba44604eae4"]
                "application_status":
                    allOf:
                        - {"$ref": "#/components/schemas/ApplicationStatusEnum"}
                    nullable: true
                "questionnaires":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Questionnaire"}
                    description: "Questionnaires associated with the application"
                    nullable: true
                    example: {"id": "right_to_work", "answers": [{"id": "answer1", "type": "text", "values": ["Yes"]}]}
                "candidate":
                    allOf:
                        - {"$ref": "#/components/schemas/ApplicationCandidate"}
                    nullable: true
                "attachments":
                    type: "array"
                    items: {"$ref": "#/components/schemas/ApplicationAttachment"}
                    description: "Use `documents` expand instead"
                    nullable: true
                    deprecated: true
                "documents":
                    type: "array"
                    items: {"$ref": "#/components/schemas/DocumentApiModel"}
                    description: "The documents attached to this application (eg. resume, cover letter etc.)"
                    nullable: true
                "result_links":
                    type: "array"
                    items: {"$ref": "#/components/schemas/ResultLink"}
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of last update"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        ApplicationsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Application"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        ApplicationResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Application"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        AtsUpdateApplicationRequestDto:
            type: "object"
            properties:
                "rejected_reason_id":
                    type: "string"
                    description: "Unique identifier of the rejection reason"
                    nullable: true
                    example: "f223d7f6-908b-48f0-9237-b201c307f609"
                "interview_stage_id":
                    type: "string"
                    description: "Unique identifier of the interview stage"
                    nullable: true
                    example: "18bcbb1b-3cbc-4198-a999-460861d19480"
        UpdateResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                    example: 200
                "message":
                    type: "string"
                    example: "Record updated successfully."
                "timestamp":
                    type: "string"
                    format: "date-time"
                    example: "2021-01-01T01:01:01.000Z"
            required:
                - "statusCode"
                - "message"
                - "timestamp"
        OfferStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "pending"
                        - "retracted"
                        - "accepted"
                        - "rejected"
                        - "created"
                        - "approved"
                        - "not_approved"
                        - "unmapped_value"
                    description: "The status of the offer."
                    nullable: true
                    example: "pending"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the offer status."
                    nullable: true
                    example: "Pending"
        OfferHistory:
            type: "object"
            properties:
                "start_date":
                    type: "string"
                    format: "date-time"
                    description: "Start Date of the offer"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "salary":
                    type: "number"
                    nullable: true
                "currency":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of last update"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        Offer:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "application_id":
                    type: "string"
                    nullable: true
                "start_date":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "offer_status":
                    allOf:
                        - {"$ref": "#/components/schemas/OfferStatusEnum"}
                    nullable: true
                "salary":
                    type: "number"
                    nullable: true
                "currency":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of last update"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "offer_history":
                    type: "array"
                    items: {"$ref": "#/components/schemas/OfferHistory"}
                    nullable: true
        OffersPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Offer"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        AtsCreateApplicationRequestDto:
            type: "object"
            properties:
                "job_id":
                    type: "string"
                    description: "Unique identifier of the job"
                    nullable: true
                    example: "4071538b-3cac-4fbf-ac76-f78ed250ffdd"
                "candidate_id":
                    type: "string"
                    description: "Unique identifier of the candidate"
                    nullable: true
                    example: "e3cb75bf-aa84-466e-a6c1-b8322b257a48"
                "location_id":
                    type: "string"
                    description: "Unique identifier of the location"
                    nullable: true
                    example: "dd8d41d1-5eb8-4408-9c87-9ba44604eae4"
                "application_status":
                    allOf:
                        - {"$ref": "#/components/schemas/ApplicationStatusEnum"}
                    nullable: true
                "questionnaires":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Questionnaire"}
                    description: "Questionnaires associated with the application"
                    nullable: true
                "candidate":
                    allOf:
                        - {"$ref": "#/components/schemas/ApplicationCandidate"}
                    nullable: true
        CreateResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                    example: 200
                "message":
                    type: "string"
                    example: "Record created successfully."
                "timestamp":
                    type: "string"
                    format: "date-time"
                    example: "2021-01-01T01:01:01.000Z"
            required:
                - "statusCode"
                - "message"
                - "timestamp"
        OffersResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Offer"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        Field:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "label":
                    type: "string"
                    description: "The label of the field"
                    nullable: true
                    example: "Problem Solving"
                "type":
                    type: "string"
                    enum:
                        - "short_text"
                        - "long_text"
                        - "multi_select"
                        - "single_select"
                        - "boolean"
                        - "number"
                        - "date"
                        - "phone"
                        - "email"
                        - "score"
                        - "location"
                        - "unmapped_value"
                    description: "The type of the field"
                    nullable: true
                    example: "text"
                "values":
                    type: "array"
                    items:
                        type: "string"
                    description: "The possible values for the field"
                    nullable: true
                    example: ["Excellent", "Good", "Average", "Poor"]
                "required":
                    type: "boolean"
                    description: "Indicates if the field is required"
                    nullable: true
                    example: true
        ScorecardSection:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "label":
                    type: "string"
                    description: "The label of the section"
                    nullable: true
                    example: "Technical Skills"
                "fields":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Field"}
                    description: "The fields within the section"
                    nullable: true
        Scorecard:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "sections":
                    type: "array"
                    items: {"$ref": "#/components/schemas/ScorecardSection"}
                    description: "The sections in the scorecard"
                    nullable: true
                "label":
                    type: "string"
                    description: "The label of the scorecard"
                    nullable: true
                    example: "Technical Interview"
                "candidate_id":
                    type: "string"
                    description: "The candidate ID associated with the scorecard"
                    nullable: true
                    example: "5678-9"
                "application_id":
                    type: "string"
                    description: "The application ID associated with the scorecard"
                    nullable: true
                    example: "1011-12"
                "interview_id":
                    type: "string"
                    description: "The interview ID associated with the scorecard"
                    nullable: true
                    example: "1314-15"
                "author_id":
                    type: "string"
                    description: "The author ID of the scorecard"
                    nullable: true
                    example: "1617-18"
                "overall_recommendation":
                    type: "string"
                    enum:
                        - "strong_yes"
                        - "yes"
                        - "no"
                        - "strong_no"
                        - "no_decision"
                        - "unmapped_value"
                    description: "The overall recommendation"
                    nullable: true
                    example: "recommended"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The creation date of the scorecard"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The update date of the scorecard"
                    nullable: true
                    example: "2021-01-01T00:00.000Z"
        ScorecardsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Scorecard"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        CandidateEmail:
            type: "object"
            properties:
                "type":
                    type: "string"
                    description: "Type of the email"
                    nullable: true
                    example: "personal"
                "value":
                    type: "string"
                    description: "Email value"
                    nullable: true
                    example: "sestier.romain123@gmail.com"
        SocialLink:
            type: "object"
            properties:
                "type":
                    type: "string"
                    description: "Type of the social link"
                    nullable: true
                    example: "LinkedIn"
                "url":
                    type: "string"
                    description: "URL of the social link"
                    nullable: true
                    example: "https://www.linkedin.com/in/romainsestier/"
        PhoneNumber:
            type: "object"
            properties:
                "type":
                    type: "string"
                    enum:
                        - "personal"
                        - "work"
                        - "mobile"
                        - "home"
                        - "unknown"
                        - "other"
                    description: "Type of phone number"
                    nullable: true
                "phone":
                    type: "string"
                    description: "Phone number string"
                    nullable: true
                    example: "+447700112233"
        Candidate:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "Candidate name"
                    nullable: true
                    example: "Romain Sestier"
                "first_name":
                    type: "string"
                    description: "Candidate first name"
                    nullable: true
                    example: "Romain"
                "last_name":
                    type: "string"
                    description: "Candidate last name"
                    nullable: true
                    example: "Sestier"
                "email":
                    type: "string"
                    description: "Candidate email"
                    nullable: true
                    example: "sestier.romain123@gmail.com"
                "emails":
                    type: "array"
                    items: {"$ref": "#/components/schemas/CandidateEmail"}
                    description: "List of candidate emails"
                    nullable: true
                "social_links":
                    type: "array"
                    items: {"$ref": "#/components/schemas/SocialLink"}
                    description: "List of candidate social links"
                    nullable: true
                "phone":
                    type: "string"
                    description: "Candidate phone number"
                    nullable: true
                    example: "+16178294093"
                    deprecated: true
                "phone_numbers":
                    type: "array"
                    items: {"$ref": "#/components/schemas/PhoneNumber"}
                    description: "List of candidate phone numbers including the type of the number when available"
                    nullable: true
                "company":
                    type: "string"
                    description: "Candidate company"
                    nullable: true
                    example: "Company Inc."
                "title":
                    type: "string"
                    description: "Candidate title"
                    nullable: true
                    example: "Software Engineer"
                "application_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of candidate application IDs"
                    nullable: true
                    example: ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"]
                "hired_at":
                    type: "string"
                    format: "date-time"
                    description: "Candidate hired date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Candidate created date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Candidate updated date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        CandidatesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Candidate"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        CandidateResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Candidate"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        NoteContentApiModel:
            type: "object"
            properties:
                "body":
                    type: "string"
                    format: "string"
                    description: "Body of the note"
                    nullable: true
                    example: "This candidate seems like a good fit for the role"
        NotesVisibilityEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "private"
                        - "public"
                    description: "The visibility of the notes."
                    nullable: true
                    example: "public"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the notes visibility."
                    nullable: true
                    example: "Public"
        Note:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "content":
                    type: "array"
                    items: {"$ref": "#/components/schemas/NoteContentApiModel"}
                    nullable: true
                "author_id":
                    type: "string"
                    format: "string"
                    description: "Unique identifier of the author"
                    nullable: true
                    example: "1234567890"
                "visibility":
                    allOf:
                        - {"$ref": "#/components/schemas/NotesVisibilityEnum"}
                    description: "Visibility of the note"
                    nullable: true
                    example: "public"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of last update"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "deleted_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of Deletion"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        NotesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Note"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        NoteResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Note"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        AtsCreateCandidateRequestDto:
            type: "object"
            properties:
                "name":
                    type: "string"
                    description: "Candidate name"
                    nullable: true
                    example: "Romain Sestier"
                "first_name":
                    type: "string"
                    description: "Candidate first name"
                    nullable: true
                    example: "Romain"
                "last_name":
                    type: "string"
                    description: "Candidate last name"
                    nullable: true
                    example: "Sestier"
                "emails":
                    type: "array"
                    items: {"$ref": "#/components/schemas/CandidateEmail"}
                    description: "List of candidate emails"
                    nullable: true
                "phone":
                    type: "string"
                    description: "Candidate phone number"
                    nullable: true
                    example: "+16178294093"
                    deprecated: true
                "company":
                    type: "string"
                    description: "Candidate company"
                    nullable: true
                    example: "Company Inc."
                "title":
                    type: "string"
                    description: "Candidate title"
                    nullable: true
                    example: "Software Engineer"
                "application_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of candidate application IDs"
                    nullable: true
                    example: ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"]
        AtsUpdateCandidatesRequestDto:
            type: "object"
            properties:
                "name":
                    type: "string"
                    description: "Candidate name"
                    nullable: true
                    example: "Romain Sestier"
                "first_name":
                    type: "string"
                    description: "Candidate first name"
                    nullable: true
                    example: "Romain"
                "last_name":
                    type: "string"
                    description: "Candidate last name"
                    nullable: true
                    example: "Sestier"
                "emails":
                    type: "array"
                    items: {"$ref": "#/components/schemas/CandidateEmail"}
                    description: "List of candidate emails"
                    nullable: true
                "phone":
                    type: "string"
                    description: "Candidate phone number"
                    nullable: true
                    example: "+16178294093"
                    deprecated: true
                "company":
                    type: "string"
                    description: "Candidate company"
                    nullable: true
                    example: "Company Inc."
                "title":
                    type: "string"
                    description: "Candidate title"
                    nullable: true
                    example: "Software Engineer"
                "application_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of candidate application IDs"
                    nullable: true
                    example: ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"]
                "id":
                    type: "string"
                    description: "The ID of the candidate to update."
                    nullable: true
                    example: "eebbaa75-7adf-4f7e-be4c-def6a12840f2"
        AtsCreateNotesRequestDto:
            type: "object"
            properties:
                "content":
                    type: "array"
                    items: {"$ref": "#/components/schemas/NoteContentApiModel"}
                    nullable: true
                "author_id":
                    type: "string"
                    format: "string"
                    description: "Unique identifier of the author"
                    nullable: true
                    example: "1234567890"
                "visibility":
                    allOf:
                        - {"$ref": "#/components/schemas/NotesVisibilityEnum"}
                    description: "Visibility of the note"
                    nullable: true
                    example: "public"
        CreateCandidateNoteResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                "message":
                    type: "string"
                "timestamp":
                    type: "string"
                    format: "date-time"
                    example: "2021-01-01T01:01:01.000Z"
            required:
                - "statusCode"
                - "message"
                - "timestamp"
        Department:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
        DepartmentsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Department"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        DepartmentResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Department"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        InterviewStagesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/InterviewStage"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        InterviewStageResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/InterviewStage"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        InterviewStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "unscheduled"
                        - "scheduled"
                        - "completed"
                        - "cancelled"
                        - "pending_feedback"
                        - "unmapped_value"
                    description: "The status of the interview."
                    nullable: true
                    example: "unscheduled"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the interview status."
                    nullable: true
                    example: "Unscheduled"
        InterviewPart:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "interviewer_ids":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "meeting_url":
                    type: "string"
                    nullable: true
                "meeting_provider":
                    type: "string"
                    nullable: true
                "start_at":
                    type: "string"
                    format: "date-time"
                    description: "The specific interview part's start date"
                    nullable: true
                    example: "2021-01-01T17:00:00.000Z"
                "end_at":
                    type: "string"
                    format: "date-time"
                    description: "The specific interview part's end date"
                    nullable: true
                    example: "2021-01-01T18:00:00.000Z"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview part created date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview part updated date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        Interviewer:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "first_name":
                    type: "string"
                    nullable: true
                "last_name":
                    type: "string"
                    nullable: true
                "name":
                    type: "string"
                    nullable: true
                "email":
                    type: "string"
                    nullable: true
        Interview:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "application_id":
                    type: "string"
                    nullable: true
                "interview_stage_id":
                    type: "string"
                    nullable: true
                "interview_stage":
                    allOf:
                        - {"$ref": "#/components/schemas/InterviewStage"}
                    nullable: true
                "interview_status":
                    allOf:
                        - {"$ref": "#/components/schemas/InterviewStatusEnum"}
                    nullable: true
                "interviewer_ids":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "interview_parts":
                    type: "array"
                    items: {"$ref": "#/components/schemas/InterviewPart"}
                    nullable: true
                "interviewers":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Interviewer"}
                    nullable: true
                "start_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview start date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "end_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview end date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "meeting_url":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview created date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Interview updated date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        InterviewsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Interview"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        InterviewsResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Interview"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        JobStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "published"
                        - "draft"
                        - "pending"
                        - "internal"
                        - "archived"
                        - "closed"
                        - "open"
                        - "unmapped_value"
                    description: "The status of the job."
                    nullable: true
                    example: "published"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the job status."
                    nullable: true
                    example: "Published"
        JobHiringTeam:
            type: "object"
            properties:
                "user_id":
                    type: "string"
                    nullable: true
                "first_name":
                    type: "string"
                    nullable: true
                "last_name":
                    type: "string"
                    nullable: true
                "email":
                    type: "string"
                    nullable: true
                "role":
                    type: "string"
                    nullable: true
        Job:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "code":
                    type: "string"
                    nullable: true
                "title":
                    type: "string"
                    nullable: true
                "status":
                    type: "string"
                    nullable: true
                    deprecated: true
                "job_status":
                    allOf:
                        - {"$ref": "#/components/schemas/JobStatusEnum"}
                    nullable: true
                "department_ids":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "location_ids":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "hiring_team":
                    type: "array"
                    items: {"$ref": "#/components/schemas/JobHiringTeam"}
                    nullable: true
                "interview_stages":
                    type: "array"
                    items: {"$ref": "#/components/schemas/InterviewStage"}
                    description: "Interview stages for the job."
                    nullable: true
                "confidential":
                    type: "string"
                    enum:
                        - "true"
                        - "false"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of last update"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        JobsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Job"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        JobResult:
            type: "object"
            properties:
                "job": {"$ref": "#/components/schemas/Job"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "job"
        ATSLocation:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
        ATSLocationsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/ATSLocation"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        ATSLocationResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/ATSLocation"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        RejectedReasonsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RejectedReason"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        RejectedReasonResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/RejectedReason"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        User:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "email":
                    type: "string"
                    nullable: true
                "first_name":
                    type: "string"
                    nullable: true
                "last_name":
                    type: "string"
                    nullable: true
                "name":
                    type: "string"
                    nullable: true
                "phone":
                    type: "string"
                    nullable: true
        UsersPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/User"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        UserResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/User"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        JobPostingLocation:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
        JobPostingStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "live"
                        - "draft"
                        - "pending"
                        - "internal"
                        - "rejected"
                        - "closed"
                        - "archived"
                        - "unmapped_value"
                    description: "The status of the job postings."
                    nullable: true
                    example: "live"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the job postings status."
                    nullable: true
                    example: "Live"
        JobPostingContent:
            type: "object"
            properties:
                "plain":
                    type: "string"
                    nullable: true
                "html":
                    type: "string"
                    nullable: true
        CompensationTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "salary"
                        - "hourly"
                        - "commission"
                        - "bonus"
                        - "equity"
                        - "other"
                        - "unmapped_value"
                    description: "The type of the compensation."
                    nullable: true
                    example: "salary"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the compensation type."
                    nullable: true
                    example: "Salary"
        JobPostingCompensation:
            type: "object"
            properties:
                "name":
                    type: "string"
                    nullable: true
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/CompensationTypeEnum"}
                    nullable: true
                "pay_period":
                    allOf:
                        - {"$ref": "#/components/schemas/PayPeriodEnum"}
                    nullable: true
                "pay_frequency":
                    allOf:
                        - {"$ref": "#/components/schemas/PayFrequencyEnum"}
                    nullable: true
                "currency":
                    type: "string"
                    nullable: true
                "value":
                    type: "string"
                    nullable: true
                "min_value":
                    type: "string"
                    nullable: true
                "max_value":
                    type: "string"
                    nullable: true
        EmploymentContractTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "full_time"
                        - "shifts"
                        - "part_time"
                        - "unmapped_value"
                    description: "The employment contract type."
                    nullable: true
                    example: "full_time"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the employment contract type."
                    nullable: true
                    example: "FullTime"
        QuestionsTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "short_text"
                        - "long_text"
                        - "attachment"
                        - "multi_select"
                        - "single_select"
                        - "boolean"
                        - "number"
                        - "date"
                        - "video"
                    description: "The type of the questions."
                    nullable: true
                    example: "short_text"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the questions type."
                    nullable: true
                    example: "ShortText"
        QuestionMultipleChoiceAnswers:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "text":
                    type: "string"
                    nullable: true
        Question:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/QuestionsTypeEnum"}
                    nullable: true
                "text":
                    type: "string"
                    nullable: true
                "required":
                    type: "boolean"
                    nullable: true
                "multiple_choice_answers":
                    type: "array"
                    items: {"$ref": "#/components/schemas/QuestionMultipleChoiceAnswers"}
                    nullable: true
        JobPostingQuestionnaire:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "internal":
                    type: "boolean"
                    nullable: true
                "questions":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Question"}
                    nullable: true
        JobPosting:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "title":
                    type: "string"
                    nullable: true
                    example: "Software Engineer"
                "locations":
                    type: "array"
                    items: {"$ref": "#/components/schemas/JobPostingLocation"}
                    nullable: true
                    example: [{"id": "12345", "name": "New York"}, {"id": "67890", "name": "Remote"}]
                "internal":
                    type: "string"
                    enum:
                        - "true"
                        - "false"
                    nullable: true
                    example: "true"
                "status":
                    allOf:
                        - {"$ref": "#/components/schemas/JobPostingStatusEnum"}
                    nullable: true
                "job_id":
                    type: "string"
                    nullable: true
                    example: "job001"
                "content":
                    allOf:
                        - {"$ref": "#/components/schemas/JobPostingContent"}
                    nullable: true
                    example: {"plain": "This is a plain text description", "html": "<p>This is an HTML description</p>"}
                "compensation":
                    type: "array"
                    items: {"$ref": "#/components/schemas/JobPostingCompensation"}
                    nullable: true
                    example: [{"name": "Base Salary", "type": "salary", "pay_period": "month", "pay_frequency": "yearly", "currency": "USD", "value": "50000", "min_value": "45000", "max_value": "55000"}, {"name": "Bonus", "type": "bonus", "pay_frequency": "quarterly", "currency": "USD", "value": "10%"}]
                "employment_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentTypeEnum"}
                    nullable: true
                "employment_contract_type":
                    allOf:
                        - {"$ref": "#/components/schemas/EmploymentContractTypeEnum"}
                    nullable: true
                "external_url":
                    type: "string"
                    nullable: true
                    example: "https://www.example.com/job-posting/abcd1234"
                "external_apply_url":
                    type: "string"
                    nullable: true
                    example: "https://www.example.com/job-posting/abcd1234/apply"
                "questionnaires":
                    type: "array"
                    items: {"$ref": "#/components/schemas/JobPostingQuestionnaire"}
                    nullable: true
                    example: [{"id": "about001", "name": "About", "internal": "false", "questions": [{"id": "question001", "text": "What is your name?", "type": "short_text", "required": true}, {"id": "question002", "text": "What are your hobbies?", "type": "long_text", "required": false}, {"id": "question003", "text": "What is your favorite animal?", "type": "single_select", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Dog"}, {"id": "2", "text": "Cat"}, {"id": "3", "text": "Bird"}, {"id": "4", "text": "Other"}]}]}, {"id": "experience001", "name": "Experience", "internal": "false", "questions": [{"id": "question004", "text": "Please upload your resume.", "type": "attachment", "required": true}, {"id": "question005", "text": "Select the programming languages you are proficient in.", "type": "multi_select", "multiple_choice_answers": [{"id": "1", "text": "JavaScript"}, {"id": "2", "text": "Python"}, {"id": "3", "text": "Java"}], "required": true}, {"id": "question006", "text": "Are you willing to relocate?", "type": "boolean"}, {"id": "question007", "text": "How many years of experience do you have?", "type": "number"}, {"id": "question008", "text": "When did you start your most recent position?", "type": "date"}]}]
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of last update"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        JobPostingsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/JobPosting"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        JobPostingResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/JobPosting"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        AtsCreateOfferRequestDto:
            type: "object"
            properties:
                "application_id":
                    type: "string"
                    nullable: true
                "start_date":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "offer_status":
                    allOf:
                        - {"$ref": "#/components/schemas/OfferStatusEnum"}
                    nullable: true
                "salary":
                    type: "number"
                    nullable: true
                "currency":
                    type: "string"
                    nullable: true
                "offer_history":
                    type: "array"
                    items: {"$ref": "#/components/schemas/OfferHistory"}
                    nullable: true
        CreateOfferResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                "message":
                    type: "string"
                "timestamp":
                    type: "string"
                    format: "date-time"
                    example: "2021-01-01T01:01:01.000Z"
            required:
                - "statusCode"
                - "message"
                - "timestamp"
        Contact:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "first_name":
                    type: "string"
                    description: "The contact first name"
                    nullable: true
                    example: "Steve"
                "last_name":
                    type: "string"
                    description: "The contact last name"
                    nullable: true
                    example: "Wozniak"
                "company_name":
                    type: "string"
                    description: "The contact company name"
                    nullable: true
                    example: "Apple Inc."
                "emails":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact email addresses"
                    nullable: true
                    example: ["steve@apple.com"]
                "phone_numbers":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact phone numbers"
                    nullable: true
                    example: ["123-456-7890"]
                "deal_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated deal IDs"
                    nullable: true
                    example: ["deal-001", "deal-002"]
                "account_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated account IDs"
                    nullable: true
                    example: ["account-123", "account-456"]
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Timestamp when the contact was created"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Timestamp when the contact was last updated"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        ContactsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Contact"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        CrmCreateContactRequestDto:
            type: "object"
            properties:
                "first_name":
                    type: "string"
                    description: "The contact first name"
                    nullable: true
                    example: "Steve"
                "last_name":
                    type: "string"
                    description: "The contact last name"
                    nullable: true
                    example: "Wozniak"
                "company_name":
                    type: "string"
                    description: "The contact company name"
                    nullable: true
                    example: "Apple Inc."
                "emails":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact email addresses"
                    nullable: true
                    example: ["steve@apple.com"]
                "phone_numbers":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of contact phone numbers"
                    nullable: true
                    example: ["123-456-7890"]
                "deal_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated deal IDs"
                    nullable: true
                    example: ["deal-001", "deal-002"]
                "account_ids":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of associated account IDs"
                    nullable: true
                    example: ["account-123", "account-456"]
        ContactResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Contact"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        CountryEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "AF"
                        - "AL"
                        - "DZ"
                        - "AS"
                        - "AD"
                        - "AO"
                        - "AI"
                        - "AQ"
                        - "AG"
                        - "AR"
                        - "AM"
                        - "AW"
                        - "AU"
                        - "AT"
                        - "AZ"
                        - "BS"
                        - "BH"
                        - "BD"
                        - "BB"
                        - "BY"
                        - "BE"
                        - "BZ"
                        - "BJ"
                        - "BM"
                        - "BT"
                        - "BO"
                        - "BQ"
                        - "BA"
                        - "BW"
                        - "BV"
                        - "BR"
                        - "IO"
                        - "BN"
                        - "BG"
                        - "BF"
                        - "BI"
                        - "KH"
                        - "CM"
                        - "CA"
                        - "CV"
                        - "KY"
                        - "CF"
                        - "TD"
                        - "CL"
                        - "CN"
                        - "CX"
                        - "CC"
                        - "CO"
                        - "KM"
                        - "CG"
                        - "CD"
                        - "CK"
                        - "CR"
                        - "HR"
                        - "CU"
                        - "CW"
                        - "CY"
                        - "CZ"
                        - "CI"
                        - "DK"
                        - "DJ"
                        - "DM"
                        - "DO"
                        - "EC"
                        - "EG"
                        - "SV"
                        - "GQ"
                        - "ER"
                        - "EE"
                        - "ET"
                        - "FK"
                        - "FO"
                        - "FJ"
                        - "FI"
                        - "FR"
                        - "GF"
                        - "PF"
                        - "TF"
                        - "GA"
                        - "GM"
                        - "GE"
                        - "DE"
                        - "GH"
                        - "GI"
                        - "GR"
                        - "GL"
                        - "GD"
                        - "GP"
                        - "GU"
                        - "GT"
                        - "GG"
                        - "GN"
                        - "GW"
                        - "GY"
                        - "HT"
                        - "HM"
                        - "VA"
                        - "HN"
                        - "HK"
                        - "HU"
                        - "IS"
                        - "IN"
                        - "ID"
                        - "IR"
                        - "IQ"
                        - "IE"
                        - "IM"
                        - "IL"
                        - "IT"
                        - "JM"
                        - "JP"
                        - "JE"
                        - "JO"
                        - "KZ"
                        - "KE"
                        - "KI"
                        - "KP"
                        - "KR"
                        - "KW"
                        - "KG"
                        - "LA"
                        - "LV"
                        - "LB"
                        - "LS"
                        - "LR"
                        - "LY"
                        - "LI"
                        - "LT"
                        - "LU"
                        - "MO"
                        - "MK"
                        - "MG"
                        - "MW"
                        - "MY"
                        - "MV"
                        - "ML"
                        - "MT"
                        - "MH"
                        - "MQ"
                        - "MR"
                        - "MU"
                        - "YT"
                        - "MX"
                        - "FM"
                        - "MD"
                        - "MC"
                        - "MN"
                        - "ME"
                        - "MS"
                        - "MA"
                        - "MZ"
                        - "MM"
                        - "NA"
                        - "NR"
                        - "NP"
                        - "NL"
                        - "NC"
                        - "NZ"
                        - "NI"
                        - "NE"
                        - "NG"
                        - "NU"
                        - "NF"
                        - "MP"
                        - "NO"
                        - "OM"
                        - "PK"
                        - "PW"
                        - "PS"
                        - "PA"
                        - "PG"
                        - "PY"
                        - "PE"
                        - "PH"
                        - "PN"
                        - "PL"
                        - "PT"
                        - "PR"
                        - "QA"
                        - "RO"
                        - "RU"
                        - "RW"
                        - "RE"
                        - "BL"
                        - "SH"
                        - "KN"
                        - "LC"
                        - "MF"
                        - "PM"
                        - "VC"
                        - "WS"
                        - "SM"
                        - "ST"
                        - "SA"
                        - "SN"
                        - "RS"
                        - "SC"
                        - "SL"
                        - "SG"
                        - "SX"
                        - "SK"
                        - "SI"
                        - "SB"
                        - "SO"
                        - "ZA"
                        - "GS"
                        - "SS"
                        - "ES"
                        - "LK"
                        - "SD"
                        - "SR"
                        - "SJ"
                        - "SZ"
                        - "SE"
                        - "CH"
                        - "SY"
                        - "TW"
                        - "TJ"
                        - "TZ"
                        - "TH"
                        - "TL"
                        - "TG"
                        - "TK"
                        - "TO"
                        - "TT"
                        - "TN"
                        - "TR"
                        - "TM"
                        - "TC"
                        - "TV"
                        - "UG"
                        - "UA"
                        - "AE"
                        - "GB"
                        - "US"
                        - "UM"
                        - "UY"
                        - "UZ"
                        - "VU"
                        - "VE"
                        - "VN"
                        - "VG"
                        - "VI"
                        - "WF"
                        - "EH"
                        - "YE"
                        - "ZM"
                        - "ZW"
                    description: "The ISO 3166-1 alpha-2 code of the country."
                    nullable: true
                    example: "GB"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the ISO 3166-1 alpha-2 code of the country."
                    nullable: true
                    example: "GB"
        AccountAddress:
            type: "object"
            properties:
                "street_1":
                    type: "string"
                    nullable: true
                "street_2":
                    type: "string"
                    nullable: true
                "city":
                    type: "string"
                    nullable: true
                "state":
                    type: "string"
                    nullable: true
                "zip_code":
                    type: "string"
                    nullable: true
                "country":
                    allOf:
                        - {"$ref": "#/components/schemas/CountryEnum"}
                    description: "The country code"
                    nullable: true
                "location_type":
                    allOf:
                        - {"$ref": "#/components/schemas/LocationTypeEnum"}
                    description: "The location type"
                    nullable: true
        Account:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "owner_id":
                    type: "string"
                    nullable: true
                "name":
                    type: "string"
                    nullable: true
                "description":
                    type: "string"
                    nullable: true
                "industries":
                    type: "array"
                    items:
                        type: "string"
                    description: "Values of the industries"
                    nullable: true
                    example: ["Information Technology", "Airlines & Airports", "Personal Care & Household Products"]
                "annual_revenue":
                    type: "string"
                    nullable: true
                "website":
                    type: "string"
                    nullable: true
                "addresses":
                    type: "array"
                    items: {"$ref": "#/components/schemas/AccountAddress"}
                    nullable: true
                "phone_numbers":
                    type: "array"
                    items:
                        type: "string"
                    description: "List of account phone numbers"
                    nullable: true
                    example: ["+1123425334"]
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Timestamp when the account was created"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Timestamp when the account was last updated"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        AccountsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Account"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        AccountResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Account"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        ListTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "contacts"
                        - "companies"
                        - "unmapped_value"
                    description: "The type of the list."
                    nullable: true
                    example: "contacts"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the list type."
                    nullable: true
                    example: "Contacts"
        List:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "items":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Timestamp when the list was created"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Timestamp when the list was last updated"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/ListTypeEnum"}
                    description: "The list type"
                    nullable: true
        ListsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/List"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        ListResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/List"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        RoleTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "admin"
                        - "viewer"
                        - "editor"
                        - "basic"
                        - "guest"
                        - "unassigned"
                        - "restricted"
                        - "unmapped_value"
                    nullable: true
                    example: "admin"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        IamPermissionTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "read"
                        - "read_write"
                        - "approve"
                        - "delete"
                        - "use"
                        - "export"
                        - "unmapped_value"
                    description: "The type of the permission, e.g. read, read_write, delete, etc."
                    nullable: true
                    example: "read_write"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        IamResourceTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "project"
                        - "file"
                        - "folder"
                        - "product"
                        - "property"
                        - "user"
                        - "unmapped_value"
                    description: "The type of the resource, e.g. user, group, permission, etc."
                    nullable: true
                    example: "file"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        IamResource:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the resource."
                    nullable: true
                    example: "Company History Records"
                "location":
                    type: "string"
                    description: "The location of the resource."
                    nullable: true
                    example: "s3://bucket-name/folder-name"
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/IamResourceTypeEnum"}
                    nullable: true
                "description":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        IamPermission:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the permission."
                    nullable: true
                    example: "read:users"
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/IamPermissionTypeEnum"}
                    nullable: true
                "resources":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamResource"}
                    description: "The resources that the permission applies to."
                    nullable: true
                "description":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        IamPolicy:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    description: "The name of the policy."
                    nullable: true
                    example: "Remote Contractor Policy"
                "permissions":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamPermission"}
                    description: "The set of permissions associated with the policy."
                    nullable: true
                "description":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        IamRole:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "description":
                    type: "string"
                    nullable: true
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/RoleTypeEnum"}
                    nullable: true
                "policies":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamPolicy"}
                    description: "The set of policies associated with the role."
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        GroupTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "workspace"
                        - "team"
                        - "department"
                        - "group"
                        - "unmapped_value"
                    nullable: true
                    example: "team"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        IamGroup:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "description":
                    type: "string"
                    nullable: true
                "type":
                    allOf:
                        - {"$ref": "#/components/schemas/GroupTypeEnum"}
                    nullable: true
                "roles":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamRole"}
                    nullable: true
                "parent_id":
                    type: "string"
                    description: "The parent group id for when a group belongs to another group."
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
        UserStatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "enabled"
                        - "disabled"
                        - "pending"
                        - "unmapped_value"
                    description: "The status of the user, e.g. whether the user is enabled, has been disabled (eg. by an admin), or is pending (ie: awaiting approval by the user or an admin)."
                    nullable: true
                    example: "enabled"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        IamMfaTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "sms"
                        - "email"
                        - "push"
                        - "totp"
                        - "unknown"
                        - "unmapped_value"
                    description: "The unified value for the type of multi-factor authentication. If the provider does not send back a type but does specify that MFA is set-up for this user, the value will be set to 'unknown'.'"
                    nullable: true
                    example: "totp"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    nullable: true
        IamUser:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "primary_email_address":
                    type: "string"
                    description: "Primary email address of the user. This is generally a work email address."
                    nullable: true
                    example: "han@stackone.com"
                "first_name":
                    type: "string"
                    nullable: true
                    example: "Han"
                "last_name":
                    type: "string"
                    nullable: true
                    example: "Solo"
                "name":
                    type: "string"
                    description: "User's name which (can be a full name or display name)"
                    nullable: true
                    example: "Han Solo"
                "username":
                    type: "string"
                    nullable: true
                    example: "hansolo1977"
                "is_bot_user":
                    type: "boolean"
                    description: "Indicates if the user is a bot or service user"
                    nullable: true
                    example: true
                "roles":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamRole"}
                    description: "List of roles the user is assigned to"
                    nullable: true
                "groups":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamGroup"}
                    description: "List of groups the user is assigned to"
                    nullable: true
                "status":
                    allOf:
                        - {"$ref": "#/components/schemas/UserStatusEnum"}
                    nullable: true
                "last_active_at":
                    type: "string"
                    format: "date-time"
                    description: "The date this user was last active"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "last_login_at":
                    type: "string"
                    format: "date-time"
                    description: "The date this user last logged in"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The date the user was created"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The date the user was created"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "multi_factor_enabled":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamMfaTypeEnum"}
                    description: "The list of Multi-Factor Authentication (MFA) types enabled for the user."
                    nullable: true
                "avatar":
                    allOf:
                        - {"$ref": "#/components/schemas/File"}
                    description: "The user's avatar data. This generally contains a URL within this property's 'contents' array."
                    nullable: true
        IamUsersPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamUser"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        IamUserResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/IamUser"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        IamRolesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamRole"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        IamRoleResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/IamRole"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        IamGroupsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamGroup"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        IamGroupResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/IamGroup"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        IamPoliciesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/IamPolicy"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        IamPolicyResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/IamPolicy"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        Template:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "tags":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of creation"
                    nullable: true
                    example: "2021-01-01T00:00:00.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "Date of last update"
                    nullable: true
                    example: "2021-01-01T00:00:00.000Z"
        TemplatesPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Template"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        TemplateResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Template"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        Function:
            type: "object"
        MessageTypeEnum:
            type: "object"
            properties:
                "value":
                    allOf:
                        - {"$ref": "#/components/schemas/Function"}
                    description: "The unified message type."
                    nullable: true
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The original value from the provider used to derive the unified message type."
                    nullable: true
                    example: "Email"
        EmailMessageContents:
            type: "object"
            properties:
                "subject":
                    type: "string"
                    nullable: true
                "body":
                    type: "string"
                    nullable: true
                "from":
                    type: "string"
                    nullable: true
                "reply-to":
                    type: "string"
                    nullable: true
                "preheader":
                    type: "string"
                    nullable: true
        EmailMessages:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "message_type":
                    allOf:
                        - {"$ref": "#/components/schemas/MessageTypeEnum"}
                    nullable: true
                "message_content":
                    allOf:
                        - {"$ref": "#/components/schemas/EmailMessageContents"}
                    nullable: true
        MarketingCreateEmailTemplateRequestDto:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "tags":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "messages":
                    type: "array"
                    items: {"$ref": "#/components/schemas/EmailMessages"}
                    nullable: true
        CreateTemplateResult:
            type: "object"
            properties:
                "statusCode":
                    type: "number"
                "message":
                    type: "string"
                "timestamp":
                    type: "string"
                    format: "date-time"
                    example: "2021-01-01T01:01:01.000Z"
            required:
                - "statusCode"
                - "message"
                - "timestamp"
        SmsMessageContents:
            type: "object"
            properties:
                "body":
                    type: "string"
                    nullable: true
                "from":
                    type: "string"
                    nullable: true
        PushMessageContents:
            type: "object"
            properties:
                "body":
                    type: "string"
                    nullable: true
        Message:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "message_type":
                    allOf:
                        - {"$ref": "#/components/schemas/MessageTypeEnum"}
                    description: "Stackone enum identifying the type of message associated with the content."
                    nullable: true
                "message_content":
                    oneOf:
                        - {"$ref": "#/components/schemas/SmsMessageContents"}
                        - {"$ref": "#/components/schemas/EmailMessageContents"}
                        - {"$ref": "#/components/schemas/PushMessageContents"}
                    nullable: true
        MarketingCreateTemplateRequestDto:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "tags":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "messages":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Message"}
                    nullable: true
        PushMessages:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "message_type":
                    allOf:
                        - {"$ref": "#/components/schemas/MessageTypeEnum"}
                    nullable: true
                "message_content":
                    allOf:
                        - {"$ref": "#/components/schemas/PushMessageContents"}
                    nullable: true
        MarketingCreatePushTemplateRequestDto:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "tags":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "messages":
                    type: "array"
                    items: {"$ref": "#/components/schemas/PushMessages"}
                    nullable: true
        ScheduleTypeEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "immediate"
                        - "scheduled"
                        - "recurring"
                        - "custom"
                        - "triggered"
                    description: "The schedule type of the campaign."
                    nullable: true
                    example: "immediate"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the schedule type."
                    nullable: true
                    example: "Immediate"
        StatusEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "draft"
                        - "archived"
                        - "live"
                    description: "The Status of the campaign."
                    nullable: true
                    example: "email"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the Status."
                    nullable: true
                    example: "Email"
        ChannelsEnum:
            type: "object"
            properties:
                "value":
                    type: "string"
                    enum:
                        - "email"
                        - "sms"
                        - "web_push"
                        - "ios_push"
                        - "android_push"
                        - "unknown"
                        - "unmapped_value"
                    description: "The Channels of the campaign."
                    nullable: true
                    example: "sms"
                "source_value":
                    anyOf:
                        - type: "string"
                        - type: "number"
                        - type: "boolean"
                        - type: "object"
                    description: "The source value of the Channels."
                    nullable: true
                    example: "SMS"
        Campaign:
            type: "object"
            properties:
                "id":
                    type: "string"
                    description: "Unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "remote_id":
                    type: "string"
                    description: "Provider's unique identifier"
                    nullable: true
                    example: "8187e5da-dc77-475e-9949-af0f1fa4e4e3"
                "name":
                    type: "string"
                    nullable: true
                "created_at":
                    type: "string"
                    format: "date-time"
                    description: "The created_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "updated_at":
                    type: "string"
                    format: "date-time"
                    description: "The updated_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "description":
                    type: "string"
                    nullable: true
                "schedule_type":
                    allOf:
                        - {"$ref": "#/components/schemas/ScheduleTypeEnum"}
                    description: "The schedule type"
                    nullable: true
                "status":
                    allOf:
                        - {"$ref": "#/components/schemas/StatusEnum"}
                    description: "Status of the Campaign"
                    nullable: true
                "archived":
                    type: "boolean"
                    nullable: true
                "draft":
                    type: "boolean"
                    nullable: true
                "channels":
                    type: "array"
                    items: {"$ref": "#/components/schemas/ChannelsEnum"}
                    description: "channels of the Campaign"
                    nullable: true
                "first_sent_at":
                    type: "string"
                    format: "date-time"
                    description: "The first_sent_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "last_sent_at":
                    type: "string"
                    format: "date-time"
                    description: "The last_sent_at date"
                    nullable: true
                    example: "2021-01-01T01:01:01.000Z"
                "tags":
                    type: "array"
                    items:
                        type: "string"
                    nullable: true
                "messages":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Message"}
                    nullable: true
                    example: [{"id": "message-id-1", "name": "SMS Message", "message_type": {"value": "sms", "sourceValue": "sms-message"}, "message_content": {"body": "This is an example SMS body.", "from": "1-555-123-4567"}}, {"id": "message-id-2", "name": "Email Message", "message_type": {"value": "email", "sourceValue": "email-message"}, "message_content": {"subject": "Example Email Subject", "body": "<h1>This is an example</h1>\n            <p>email body</p>", "from": "Jane Smith", "reply-to": "reply@example.com", "preheader": "This is the preheader of the email."}}, {"id": "message-id-3", "name": "iOS Push Message", "message_type": {"value": "ios_push", "sourceValue": "ios-push"}, "message_content": {"body": "This is an example push notification body."}}]
        CampaignsPaginated:
            type: "object"
            properties:
                "next_page":
                    type: "string"
                    nullable: true
                    deprecated: true
                "next":
                    type: "string"
                    nullable: true
                "data":
                    type: "array"
                    items: {"$ref": "#/components/schemas/Campaign"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
        CampaignResult:
            type: "object"
            properties:
                "data": {"$ref": "#/components/schemas/Campaign"}
                "raw":
                    type: "array"
                    items: {"$ref": "#/components/schemas/RawResponse"}
                    nullable: true
            required:
                - "data"
    securitySchemes:
        "basic":
            type: "http"
            scheme: "basic"
tags:
    - name: "Accounts"
    - name: "Connect Sessions"
    - name: "Connectors"
    - name: "Proxy"
    - name: "Benefits"
    - name: "Companies"
    - name: "Employees"
    - name: "Employments"
    - name: "Locations"
    - name: "Time Off"
    - name: "Applications"
    - name: "Candidates"
    - name: "Departments"
    - name: "Interview Stages"
    - name: "Interviews"
    - name: "Job Postings"
    - name: "Jobs"
    - name: "Offers"
    - name: "Rejected Reasons"
    - name: "Users"
    - name: "Contacts"
    - name: "Lists"
    - name: "Roles"
    - name: "Groups"
    - name: "Policies"
    - name: "Permissions"
    - name: "Resources"
    - name: "Campaigns"
    - name: "Templates"
