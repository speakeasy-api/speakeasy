name: Validate

on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize

jobs:
  build:
    name: Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
      - uses: webiny/action-conventional-commits@03a9c76bdb2deeaf23f50e8ea9c6e99417bad467 # v1.1.0
      - uses: amannn/action-semantic-pull-request@0723387faaf9b38adef4775cd42cfd5155ed6017 # v5.5.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-test:
    name: Build & Test
    if: ${{ github.event.pull_request.draft == false }}
    permissions:
      contents: read
      id-token: write
      actions: read

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - test-group: "Test Generations"
            test-pattern: "TestGenerationWorkflows"
          - test-group: "Test Spec Operations"
            test-pattern: "TestSpecWorkflows"
          - test-group: "Test Fallback Code Samples Workflow"
            test-pattern: "TestFallbackCodeSamplesWorkflow"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: ">=1.20.0"

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.8"

      - name: Set up Node
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: Set up gotestfmt
        run: go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest

      - name: Configure git for private modules (Linux)
        if: runner.os == 'Linux'
        env:
          GIT_AUTH_TOKEN: ${{ secrets.BOT_REPO_TOKEN }}
        run: git config --global url."https://speakeasybot:${GIT_AUTH_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Configure git for private modules (Windows)
        if: runner.os == 'Windows'
        env:
          GIT_AUTH_TOKEN: ${{ secrets.BOT_REPO_TOKEN }}
        run: git config --global url."https://speakeasybot:${env:GIT_AUTH_TOKEN}@github.com".insteadOf "https://github.com"

      - uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # v3.3.3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build ./...

      - name: ${{ matrix.test-group }}
        run: go test -json -v -p 1 -run ${{ matrix.test-pattern }} ./... | gotestfmt
        env:
          SPEAKEASY_API_KEY: ${{ secrets.SPEAKEASY_API_KEY }}
