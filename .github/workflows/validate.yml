name: Validate

on:
  pull_request:

jobs:
  build:
    name: Conventional pull request names
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: amannn/action-semantic-pull-request@0723387faaf9b38adef4775cd42cfd5155ed6017 # v5.5.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  golangci-lint:
    permissions:
      contents: read
    runs-on:
      group: ubuntu-latest-large
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: "go.mod"
      - name: Configure git for private modules
        env:
          GIT_AUTH_TOKEN: ${{ secrets.BOT_REPO_TOKEN }}
        run: git config --global url."https://speakeasybot:${GIT_AUTH_TOKEN}@github.com".insteadOf "https://github.com"
      - uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6.5.2
        with:
          version: v1.64.5
          args: --timeout=10m --verbose
  build-test:
    name: Build & Test
    if: ${{ github.event.pull_request.draft == false }}
    permissions:
      contents: read
      id-token: write
      actions: read

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on:
      group: "${{ matrix.os }}-large"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go (Linux)
        if: runner.os == 'Linux'
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: "go.mod"

      - name: Set up Go (Windows)
        if: runner.os == 'Windows'
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: "go.mod"
          # Reference: https://github.com/actions/setup-go/issues/495
          cache: false

      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.9"

      - name: Set up Node
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: Set up gotestfmt
        run: go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest

      - name: Configure git for private modules (Linux)
        if: runner.os == 'Linux'
        env:
          GIT_AUTH_TOKEN: ${{ secrets.BOT_REPO_TOKEN }}
        run: git config --global url."https://speakeasybot:${GIT_AUTH_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Configure git for private modules (Windows)
        if: runner.os == 'Windows'
        env:
          GIT_AUTH_TOKEN: ${{ secrets.BOT_REPO_TOKEN }}
        run: git config --global url."https://speakeasybot:${env:GIT_AUTH_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Build
        run: go build ./...

      - run: go test -json -v -p 1 ./... | gotestfmt
        env:
          SPEAKEASY_API_KEY: ${{ secrets.SPEAKEASY_API_KEY }}
